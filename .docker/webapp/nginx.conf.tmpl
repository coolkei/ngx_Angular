map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {

  listen {{ default .Env.NGINX_PORT "8080"}};

  server_name {{ default .Env.NGINX_HOST "localhost"}};
  #  ssl                 on;
  #  ssl_certificate     angular-seed_server.crt;
  #  ssl_certificate_key angular-seed_server.pem;
  #
  #  ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
  #  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  #  ssl_prefer_server_ciphers on;
  #  ssl_session_cache shared:SSL:10m;
  #  ssl_session_tickets off; # Requires nginx >= 1.5.9
  #  add_header Strict-Transport-Security "max-age=63072000; preload";
  #  add_header X-Frame-Options DENY;
  #
  #  location /api/microservice1 {
  #    rewrite ^/api/microservice1/(.*)$ /$1 break;
  #    proxy_pass https://microservice1/;
  #    proxy_http_version 1.1;
  #    proxy_set_header X-Forwarded-For $remote_addr;
  #  }

  location / {
    root /usr/share/nginx/html;
    try_files $uri $uri/ /index.html =404;
    index index.html;
    gzip on;
    gzip_types text/css text/javascript application/x-javascript application/json;
  }

  location /auth/realms {
    # proxy_set_header        Host $host;
    # proxy_set_header        X-Real-IP $remote_addr;
    # proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    # proxy_set_header        X-Forwarded-Proto $scheme;
    # proxy_set_header        X-Forwarded-Proto https;
    # proxy_set_header        X-NginX-Proxy true;

    proxy_pass {{ .Env.AUTH_BASE_URL }};
    # proxy_ssl_session_reuse on;
    # ssl_verify_client off;
    proxy_redirect off;
  }
}
