var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/interfaces/AccessTokenErrorResponse.html",[0,1.284,1,3.595]],["body/interfaces/AccessTokenErrorResponse.html",[0,2.198,1,5.558,2,0.066,3,0.055,4,0.045,5,4.308,6,0.454,7,1.108,8,5.876,9,1.237,10,7.366,11,7.366,12,6.502,13,0.988,14,0.009,15,0.649,16,5.334,17,1.839,18,5.334,19,6.502,20,5.334,21,4.308,22,6.154,23,4.308,24,6.154,25,5.558,26,4.308,27,4.308,28,5.558,29,4.308,30,4.308,31,4.308,32,4.308,33,4.308,34,0.085,35,4.308,36,2.293,37,0.006,38,0.006]],["title/injectables/AccountService.html",[39,1.408,40,3.595]],["body/injectables/AccountService.html",[2,0.069,3,0.059,4,0.048,6,0.481,7,1.148,9,0.867,13,0.811,14,0.009,15,0.608,17,1.574,34,0.069,37,0.007,38,0.007,39,2.475,40,5.761,41,5.641,42,3.015,43,7.265,44,0.846,45,6.305,46,6.847,47,7.132,48,1.09,49,0.677,50,1.454,51,1.785,52,5.871,53,0.351,54,3.977,55,0.436,56,1.487,57,4.987,58,4.556,59,4.987,60,3.42,61,6.305,62,1.665,63,1.704,64,3.42,65,5.641,66,0.128,67,3.764,68,5.641]],["title/components/ActivityComponent.html",[69,0.52,70,3.595]],["body/components/ActivityComponent.html",[2,0.08,3,0.058,4,0.033,6,0.331,7,0.893,13,0.442,14,0.009,15,0.681,34,0.048,37,0.005,38,0.005,44,0.971,49,0.776,50,1.668,51,2.047,53,0.161,55,0.3,56,1.024,66,0.088,69,0.872,70,5.226,71,1.174,72,1.174,73,0.979,74,3.886,75,1.338,76,2,77,0.979,78,1.877,79,2.291,80,7.057,81,1.637,82,5.548,83,5.7,84,1.198,85,2.181,86,4.976,87,2.631,88,7.463,89,6.598,90,4.525,91,5.548,92,3.886,93,5.548,94,2.138,95,3.886,96,4.481,97,3.886,98,3.886,99,0.755,100,1.462,101,3.886,102,2.561,103,3.886,104,3.435,105,3.435,106,4.905,107,1.538,108,2.258,109,3.435,110,4.481,111,4.481,112,5.548,113,5.548,114,5.548,115,3.941,116,5.298,117,4.481,118,3.702,119,1.91,120,0.702,121,1.676,122,1.637,123,1.172,124,2.131,125,1.174,126,1.147,127,1.147,128,1.676,129,1.121,130,1.174,131,1.147,132,1.096,133,1.174,134,1.121,135,1.147,136,1.096,137,1.174,138,1.096,139,1.174,140,1.071,141,1.174,142,1.147,143,1.174,144,1.096,145,1.174,146,1.071,147,1.174,148,1.096,149,1.147,150,1.174]],["title/classes/Address.html",[66,0.101,151,3.935]],["body/classes/Address.html",[2,0.056,3,0.048,4,0.039,6,0.39,7,1.001,9,1.325,13,0.901,14,0.009,15,0.675,17,2.048,34,0.087,36,3.513,37,0.006,38,0.006,44,0.933,48,0.884,49,0.549,52,3.435,53,0.257,62,1.351,63,1.382,64,2.775,66,0.161,75,1.103,151,6.698,152,4.045,153,3.121,154,8.171,155,7.922,156,8.171,157,4.576,158,4.576,159,5.687,160,7.576,161,4.148,162,4.148,163,3.227,164,2.294,165,2.374,166,4.576,167,4.576,168,6.243,169,4.576,170,4.576,171,4.576,172,4.576,173,4.576,174,1.811,175,2.294,176,4.045,177,3.435,178,5.496]],["title/classes/Animations.html",[66,0.101,179,2.393]],["body/classes/Animations.html",[2,0.087,3,0.073,4,0.06,14,0.008,34,0.087,37,0.008,38,0.008,66,0.186,179,4.39,180,7.049]],["title/components/AppComponent.html",[69,0.52,181,3.595]],["body/components/AppComponent.html",[2,0.058,3,0.066,4,0.04,6,0.402,9,0.726,13,0.537,14,0.009,15,0.541,34,0.058,37,0.006,38,0.006,44,0.709,48,0.912,49,0.921,53,0.263,55,0.365,56,1.245,66,0.107,69,0.936,71,1.426,72,1.426,73,1.191,75,1.532,76,2.218,77,1.191,78,1.936,79,2.265,81,1.875,84,1.371,85,2.372,99,0.643,100,1.245,119,1.394,120,0.853,121,1.918,122,1.875,123,1.341,124,2.318,125,1.426,126,1.394,127,1.394,128,1.918,129,1.362,130,1.426,131,1.394,132,1.332,133,1.426,134,1.362,135,1.394,136,1.332,137,1.426,138,1.332,139,1.426,140,1.302,141,1.426,142,1.394,143,1.426,144,1.332,145,1.426,146,1.302,147,1.426,148,1.332,149,1.394,150,1.426,181,5.796,182,4.723,183,6.351,184,6.351,185,3.416,186,5.13,187,1.963,188,6.351,189,6.351,190,4.723,191,5.761,192,4.723,193,6.351,194,4.723,195,4.723,196,4.175,197,1.605,198,3.815,199,4.175,200,3.545,201,3.33,202,4.723]],["title/components/AppConfirmComponent.html",[69,0.52,203,3.341]],["body/components/AppConfirmComponent.html",[2,0.054,3,0.063,4,0.037,6,0.376,7,0.977,9,0.679,13,0.789,14,0.009,15,0.591,34,0.054,37,0.006,38,0.006,39,1.921,44,0.663,48,0.854,49,0.896,53,0.251,55,0.341,56,1.165,66,0.101,69,0.914,71,1.335,72,1.335,73,1.114,77,1.114,78,1.917,79,2.204,81,1.792,119,1.304,120,0.798,121,1.833,122,1.792,123,1.282,124,2.255,125,1.335,126,1.304,127,1.304,128,1.833,129,1.275,130,1.335,131,1.304,132,1.246,133,1.335,134,1.275,135,1.304,136,1.246,137,1.335,138,1.246,139,1.335,140,1.218,141,1.335,142,1.304,143,1.335,144,1.246,145,1.335,146,1.218,147,1.335,148,1.246,149,1.304,150,1.335,153,2.66,174,1.749,185,4.348,187,1.877,203,5.206,204,6.031,205,6.031,206,4.419,207,4.903,208,6.071,209,6.071,210,3.686,211,6.919,212,4.419,213,7.148,214,4.419,215,3.116,216,6.071,217,4.419,218,1.955,219,4.419,220,6.071,221,6.071,222,6.071,223,4.419,224,6.071]],["title/modules/AppConfirmModule.html",[225,0.768,226,3.341]],["body/modules/AppConfirmModule.html",[2,0.068,3,0.057,4,0.046,14,0.009,34,0.086,37,0.006,38,0.006,53,0.362,55,0.424,66,0.125,120,0.991,185,3.77,203,6.642,204,4.435,205,4.435,218,2.429,225,1.21,226,6.642,227,1.96,228,2.828,229,2.062,230,2.563,231,5.49,232,5.49,233,5.49,234,6.944,235,2.633,236,2.062,237,2.062,238,5.49,239,5.663,240,2.218,241,3.014,242,2.173,243,4.854,244,5.49,245,5.663,246,3.915,247,4.251,248,3.066,249,2.849]],["title/injectables/AppConfirmService.html",[39,1.408,234,3.595]],["body/injectables/AppConfirmService.html",[2,0.065,3,0.055,4,0.045,6,0.45,9,1.05,13,0.778,14,0.009,15,0.582,17,1.878,34,0.065,37,0.006,38,0.006,39,2.399,44,0.792,48,1.321,49,0.82,53,0.332,55,0.408,66,0.12,84,1.476,90,4.145,99,0.931,107,2.089,153,2.577,185,2.839,197,1.795,203,3.963,204,6.124,205,6.124,207,5.522,210,2.407,211,6.044,213,6.044,218,2.336,234,5.522,243,4.667,250,5.279,251,5.279,252,8.018,253,5.279,254,6.836,255,6.836,256,6.019,257,5.279,258,4.597,259,2.839,260,5.279,261,5.279,262,5.279,263,5.279,264,5.279,265,5.279]],["title/modules/AppModule.html",[225,0.768,266,3.341]],["body/modules/AppModule.html",[2,0.055,3,0.046,4,0.038,14,0.009,34,0.075,37,0.006,38,0.006,53,0.359,55,0.343,62,2.051,63,2.099,66,0.101,86,3.129,120,0.801,181,7.127,200,3.331,225,1.051,227,1.585,228,2.545,229,2.611,230,1.473,235,2.287,236,1.667,237,1.667,240,1.927,266,6.431,267,4.438,268,4.438,269,4.438,270,4.438,271,6.224,272,4.438,273,3.159,274,1.855,275,2.961,276,4.438,277,3.331,278,2.086,279,4.438,280,6.089,281,3.585,282,3.585,283,4.293,284,2.691,285,6.089,286,4.438,287,4.438,288,3.585,289,2.691,290,2.691,291,4.438,292,4.438,293,4.438,294,4.215,295,4.571,296,4.063,297,3.692,298,3.692,299,6.145,300,4.438,301,2.961,302,4.438,303,6.145,304,4.438,305,4.438,306,3.923,307,4.438,308,6.089,309,4.438,310,4.438,311,4.438,312,4.438,313,3.585,314,4.438,315,4.438,316,4.438,317,3.585]],["title/classes/AppPage.html",[66,0.101,318,3.935]],["body/classes/AppPage.html",[2,0.078,3,0.066,4,0.053,6,0.538,14,0.009,15,0.652,34,0.078,37,0.007,38,0.007,53,0.261,66,0.174,84,1.651,99,1.164,122,1.864,284,3.829,318,6.761,319,6.315,320,8.551,321,7.559,322,6.315,323,6.315,324,5.583,325,6.315,326,6.315]],["title/injectables/AuthGuard.html",[39,1.408,327,3.341]],["body/injectables/AuthGuard.html",[2,0.057,3,0.048,4,0.039,6,0.397,9,0.967,13,0.716,14,0.009,15,0.536,34,0.057,36,3.064,37,0.006,38,0.006,39,2.255,44,0.699,48,1.216,49,0.755,53,0.33,55,0.36,66,0.106,75,1.123,84,1.359,94,1.796,99,1.085,102,1.844,107,2.821,165,3.265,197,1.584,274,1.947,278,2.19,313,3.763,327,4.724,328,4.659,329,6.747,330,4.119,331,5.793,332,3.947,333,4.659,334,6.293,335,7.632,336,7.632,337,4.659,338,3.497,339,6.293,340,2.825,341,3.108,342,3.108,343,1.894,344,3.35,345,4.119,346,4.438,347,4.659,348,6.293,349,4.659,350,4.659,351,6.293,352,4.659,353,4.659,354,4.659,355,4.659,356,6.293,357,1.706,358,3.285,359,6.293,360,6.293,361,3.497,362,4.659,363,4.659,364,2.707,365,2.601,366,4.659]],["title/classes/AuthModeChanged.html",[66,0.101,367,2.393]],["body/classes/AuthModeChanged.html",[2,0.063,3,0.053,4,0.043,6,0.437,7,1.081,9,0.789,13,0.764,14,0.009,15,0.572,17,1.133,34,0.11,37,0.006,38,0.006,42,3.255,44,0.77,48,0.992,49,0.616,66,0.203,153,2.282,174,3.258,175,2.574,344,2.413,365,2.867,367,3.61,368,2.867,369,3.688,370,2.664,371,4.627,372,5.135,373,5.135,374,3.749,375,2.867,376,2.867,377,3.749,378,2.73,379,2.491,380,2.867,381,2.761,382,2.984,383,2.761,384,2.761,385,2.761,386,2.867]],["title/modules/AuthModule.html",[225,0.768,387,3.341]],["body/modules/AuthModule.html",[2,0.053,3,0.045,4,0.037,14,0.009,34,0.074,37,0.006,38,0.006,53,0.369,55,0.335,66,0.099,99,0.59,107,2.371,120,0.783,218,1.918,225,1.034,227,1.548,228,2.514,229,1.628,230,2.579,235,2.25,236,1.628,237,1.628,239,4.839,240,2.172,241,2.576,242,1.716,245,4.839,246,3.346,247,3.633,248,2.421,249,2.249,278,2.038,327,6.034,331,4.225,332,2.816,341,2.893,342,2.893,343,1.763,387,6.646,388,4.335,389,4.335,390,4.335,391,8.397,392,6.493,393,7.107,394,4.335,395,5.991,396,4.839,397,4.335,398,5.991,399,4.335,400,3.998,401,4.335,402,4.335,403,4.335,404,3.833,405,5.297,406,5.297,407,5.297,408,3.482,409,4.839,410,4.498,411,5.297,412,3.057,413,4.335,414,4.335,415,4.335,416,4.335,417,4.335,418,4.335,419,2.174,420,4.335,421,4.335,422,4.335,423,3.502]],["title/interfaces/AuthStateModel.html",[0,1.284,424,3.935]],["body/interfaces/AuthStateModel.html",[0,1.542,2,0.045,3,0.038,4,0.031,6,0.314,7,0.861,13,0.715,14,0.009,15,0.536,34,0.066,36,2.702,37,0.005,38,0.005,49,0.443,50,1.378,53,0.325,56,0.973,60,2.238,66,0.084,78,1.488,99,0.996,102,2.488,107,1.461,197,1.255,274,1.542,278,1.735,331,4.433,340,3.812,341,2.463,342,2.463,343,1.501,344,2.955,345,3.263,357,1.957,358,2.602,361,2.771,367,3.38,369,3.367,371,4.542,378,1.501,379,2.594,381,3.38,383,3.38,384,3.38,385,2.875,393,5.557,400,2.463,404,3.263,419,3.152,424,6.467,425,3.691,426,6.354,427,5.376,428,3.691,429,2.702,430,3.691,431,3.691,432,2.602,433,4.393,434,3.691,435,3.691,436,3.691,437,3.691,438,5.346,439,3.691,440,3.691,441,3.691,442,3.691,443,3.691,444,3.691,445,3.691,446,4.259,447,4.375,448,3.691,449,3.691,450,3.691,451,2.985,452,5.346,453,3.691,454,3.691,455,3.691,456,3.691,457,5.346,458,3.691,459,3.691,460,3.691,461,3.691,462,4.013,463,3.691,464,3.691,465,6.286,466,3.691,467,3.691,468,3.691,469,3.691,470,3.691,471,3.691,472,3.691]],["title/interfaces/AuthorizationErrorResponse.html",[0,1.284,35,3.595]],["body/interfaces/AuthorizationErrorResponse.html",[0,2.168,1,4.189,2,0.064,3,0.054,4,0.044,5,4.189,6,0.442,7,1.088,8,5.824,9,1.301,10,7.301,11,7.301,12,5.458,13,0.995,14,0.009,15,0.678,17,1.904,19,6.433,21,4.189,22,6.071,23,4.189,24,6.071,25,6.433,26,4.189,27,4.189,28,5.458,29,4.189,30,4.189,31,4.189,32,4.189,33,4.189,34,0.083,35,5.458,36,3.424,37,0.006,38,0.006,473,5.186,474,5.186,475,5.186,476,5.186]],["title/components/BlogComponent.html",[69,0.52,477,3.595]],["body/components/BlogComponent.html",[2,0.025,3,0.035,4,0.017,6,0.174,14,0.007,15,0.287,34,0.025,37,0.003,38,0.003,44,0.646,49,0.517,53,0.084,55,0.158,56,0.538,66,0.046,69,0.647,71,0.616,72,0.616,73,0.514,75,0.813,76,1.331,77,0.514,78,1.624,79,1.476,81,0.995,84,0.728,85,1.546,99,0.278,100,0.538,119,0.602,120,0.368,121,1.018,122,0.995,123,0.712,124,1.511,125,0.616,126,0.602,127,0.602,128,1.018,129,0.588,130,0.616,131,0.602,132,0.575,133,0.616,134,0.588,135,0.602,136,0.575,137,0.616,138,0.575,139,0.616,140,0.562,141,0.616,142,0.602,143,0.616,144,0.575,145,0.616,146,0.562,147,0.616,148,0.575,149,0.602,150,0.616,177,2.53,187,1.042,477,3.478,478,2.039,479,3.755,480,3.37,481,3.37,482,2.039,483,2.039,484,3.37,485,5.001,486,3.37,487,3.37,488,6.599,489,5.964,490,5.001,491,3.37,492,3.37,493,2.979,494,3.37,495,3.37,496,3.37,497,2.979,498,2.979,499,3.37,500,3.37,501,3.37,502,3.37,503,3.37,504,3.37,505,2.979,506,3.37,507,3.37,508,3.37,509,3.37,510,3.37,511,5.001,512,5.001,513,3.37,514,3.37,515,3.37,516,3.37,517,3.37,518,3.37,519,3.37,520,3.37,521,3.37,522,3.37,523,3.37,524,3.37,525,3.37,526,3.37,527,3.37,528,3.37,529,8.282,530,5.001,531,8.933,532,7.853,533,5.964,534,7.049,535,5.001,536,6.599,537,7.049,538,5.001,539,8.282,540,5.001,541,5.964,542,6.599,543,6.599,544,5.964,545,7.385,546,7.645,547,5.001,548,5.001,549,7.385,550,5.964,551,4.306,552,5.964,553,6.599,554,3.37,555,6.599,556,3.37,557,3.37,558,6.599,559,5.001,560,5.001,561,5.001,562,3.37,563,3.37,564,3.37,565,7.645,566,6.599,567,5.001,568,6.599,569,5.001,570,3.37,571,5.001,572,3.37,573,3.37,574,7.049,575,6.599,576,5.964,577,3.37,578,5.001,579,6.599,580,6.599,581,3.37,582,3.37,583,6.599,584,3.37,585,5.964,586,3.37,587,3.37,588,5.001,589,3.37,590,3.37,591,7.385,592,3.37,593,7.645,594,3.37,595,3.37,596,3.37,597,3.37,598,5.001,599,3.37,600,3.37,601,3.37,602,3.37,603,3.37,604,5.001,605,3.37,606,5.001,607,5.001,608,3.37,609,3.37,610,3.37,611,4.306]],["title/components/BreadcrumbsComponent.html",[69,0.52,612,3.341]],["body/components/BreadcrumbsComponent.html",[0,1.28,2,0.055,3,0.063,4,0.038,6,0.378,13,0.693,14,0.009,15,0.637,17,1.651,34,0.075,37,0.006,38,0.006,44,1.043,49,0.897,53,0.184,55,0.343,56,1.17,66,0.101,69,0.916,71,1.34,72,1.34,73,1.119,75,1.468,76,2.148,77,1.119,78,1.918,79,2.39,81,1.797,84,1.315,85,2.312,87,3.187,90,4.753,99,0.604,100,1.17,119,1.31,120,0.801,121,1.839,122,1.797,123,1.286,124,2.259,125,1.34,126,1.31,127,1.31,128,1.839,129,1.28,130,1.34,131,1.31,132,1.251,133,1.34,134,1.28,135,1.31,136,1.251,137,1.34,138,1.251,139,1.34,140,1.223,141,1.34,142,1.31,143,1.34,144,1.251,145,1.34,146,1.223,147,1.34,148,1.251,149,1.31,150,1.34,187,1.882,612,5.218,613,3.923,614,4.571,615,4.571,616,5.383,617,5.383,618,5.383,619,6.078,620,6.089,621,4.438,622,4.438,623,3.331,624,2.579,625,7.48,626,6.089]],["title/modules/BreadcrumbsModule.html",[225,0.768,627,3.138]],["body/modules/BreadcrumbsModule.html",[2,0.069,3,0.058,4,0.048,14,0.009,34,0.101,37,0.007,38,0.007,53,0.364,55,0.435,66,0.128,120,1.016,218,2.489,225,1.228,227,2.009,228,2.86,229,2.113,230,1.867,235,2.674,236,2.113,237,2.113,240,2.253,241,3.061,242,2.226,247,4.317,248,3.141,249,2.919,273,3.694,274,2.351,408,4.137,612,6.864,627,6.196,628,5.625,629,5.625,630,5.625,631,5.625,632,5.625]],["title/modules/CdkModule.html",[225,0.768,633,3.595]],["body/modules/CdkModule.html",[2,0.072,3,0.061,4,0.049,14,0.009,34,0.09,37,0.007,38,0.007,53,0.376,55,0.452,66,0.133,225,1.009,240,2.309,633,5.893,634,5.849,635,7.296,636,5.849,637,5.849,638,5.849,639,5.849,640,5.849,641,5.849,642,5.849,643,5.171,644,4.724,645,5.849,646,5.849,647,5.849,648,5.849,649,6.45,650,4.724,651,7.296,652,5.849,653,1.687,654,7.296]],["title/classes/ChangeAuthMode.html",[66,0.101,381,2.393]],["body/classes/ChangeAuthMode.html",[2,0.063,3,0.053,4,0.043,6,0.437,7,1.081,9,0.789,13,0.764,14,0.009,15,0.572,17,1.133,34,0.11,37,0.006,38,0.006,42,3.255,44,0.77,48,0.992,49,0.616,66,0.203,153,2.282,174,3.258,175,2.574,344,2.413,365,2.867,367,2.761,368,2.867,369,3.688,370,2.664,371,4.627,374,3.749,375,2.867,376,2.867,377,3.749,378,2.73,379,2.491,380,2.867,381,3.61,382,2.984,383,2.761,384,2.761,385,2.761,386,2.867,655,5.135,656,5.135]],["title/pipes/CharactersPipe.html",[657,2.699,658,3.595]],["body/pipes/CharactersPipe.html",[2,0.067,3,0.056,4,0.046,9,0.83,13,0.615,14,0.009,15,0.46,17,1.947,34,0.067,37,0.006,38,0.006,48,1.044,49,0.92,50,1.393,51,2.709,53,0.224,55,0.418,66,0.123,75,1.303,77,1.362,84,1.167,99,0.945,164,3.844,657,4.648,658,5.605,659,5.605,660,5.404,661,6.94,662,4.777,663,6.135,664,7.797,665,7.396,666,5.404,667,5.605,668,6.135,669,5.404,670,6.94,671,5.404]],["title/directives/ClickOutsideDirective.html",[123,0.94,136,1.255]],["body/directives/ClickOutsideDirective.html",[2,0.066,3,0.055,4,0.045,6,0.454,9,0.819,13,0.783,14,0.009,15,0.649,34,0.066,37,0.006,38,0.006,44,0.8,48,1.031,49,0.64,53,0.221,55,0.412,66,0.121,77,1.345,78,1.486,94,2.056,99,0.726,100,1.406,123,1.609,136,1.941,153,2.339,197,1.813,653,1.539,672,8.05,673,7.116,674,5.334,675,8.332,676,7.116,677,5.719,678,6.882,679,5.334,680,5.371,681,6.882,682,6.084,683,4.427,684,5.719,685,4.308,686,6.882,687,5.334,688,6.084,689,7.619,690,6.882,691,5.334,692,5.334,693,5.334,694,6.882,695,5.334,696,5.334]],["title/components/ContextMenuComponent.html",[69,0.52,697,3.595]],["body/components/ContextMenuComponent.html",[2,0.058,3,0.066,4,0.04,6,0.401,14,0.008,15,0.401,34,0.058,37,0.006,38,0.006,49,0.86,50,1.215,51,1.491,53,0.195,55,0.364,56,1.242,66,0.144,69,0.935,71,1.423,72,1.423,73,1.188,77,1.188,78,1.936,79,2.263,81,1.872,107,2.51,119,1.391,120,0.851,121,1.915,122,1.872,123,1.339,124,2.316,125,1.423,126,1.391,127,1.391,128,1.915,129,1.359,130,1.423,131,1.391,132,1.329,133,1.423,134,1.359,135,1.391,136,1.329,137,1.423,138,1.329,139,1.423,140,1.299,141,1.423,142,1.391,143,1.423,144,1.329,145,1.423,146,1.299,147,1.423,148,1.329,149,1.391,150,1.423,153,1.602,187,1.96,614,4.761,615,4.761,623,3.537,677,3.537,697,5.79,698,5.122,699,5.122,700,4.166,701,6.342,702,7.287,703,3.18,704,5.606,705,5.606,706,7.168,707,7.168,708,8.242,709,8.002,710,4.166,711,4.712,712,4.166,713,4.712]],["title/modules/ContextMenuModule.html",[225,0.768,714,3.595]],["body/modules/ContextMenuModule.html",[2,0.065,3,0.055,4,0.045,14,0.009,34,0.099,37,0.006,38,0.006,53,0.363,55,0.407,66,0.12,120,0.951,138,2.555,218,2.33,225,1.178,227,1.88,228,2.772,229,1.978,230,1.747,235,2.563,236,1.978,237,1.978,240,2.16,241,2.934,242,2.084,246,3.811,643,6.034,644,4.253,649,6.034,650,4.253,697,7.318,698,4.253,699,4.253,702,6.034,703,2.64,714,7.223,715,5.266,716,5.266,717,5.266,718,5.266,719,5.266,720,4.655]],["title/directives/ContextMenuTriggerDirective.html",[123,0.94,138,1.255]],["body/directives/ContextMenuTriggerDirective.html",[2,0.052,3,0.044,4,0.036,6,0.358,7,0.944,9,0.646,13,0.768,14,0.009,15,0.655,34,0.052,37,0.005,38,0.005,44,0.631,48,0.812,49,0.504,53,0.318,55,0.325,60,2.548,66,0.096,75,1.414,77,1.059,78,1.266,84,1.266,87,2.971,94,2.26,99,0.572,100,1.108,123,1.426,138,1.653,197,1.429,259,2.26,357,2.814,644,3.394,650,3.394,653,1.948,677,5.069,680,4.876,682,5.97,683,3.407,685,3.394,688,5.184,698,6.43,699,6.43,703,3.991,721,4.203,722,5.97,723,8.17,724,7.307,725,6.46,726,4.203,727,5.486,728,5.97,729,5.902,730,5.863,731,5.863,732,5.455,733,4.203,734,4.203,735,4.203,736,4.203,737,6.795,738,5.863,739,4.203,740,4.203,741,5.863,742,4.203,743,4.203,744,4.203,745,4.203,746,4.203,747,4.203,748,5.863,749,4.203,750,4.203,751,4.203,752,4.203,753,4.135,754,4.203,755,2.804,756,4.203,757,4.203,758,2.668,759,4.203,760,4.203,761,4.203,762,4.203,763,4.203,764,4.203,765,4.203,766,4.203,767,3.715,768,4.203]],["title/modules/CoreModule.html",[225,0.768,271,3.341]],["body/modules/CoreModule.html",[2,0.044,3,0.037,4,0.03,9,0.803,14,0.009,34,0.064,37,0.005,38,0.005,44,0.536,53,0.371,54,2.521,55,0.276,62,1.542,63,1.578,66,0.081,94,1.378,107,3.083,115,1.997,120,0.646,191,5.663,210,1.63,225,0.901,227,1.277,228,1.309,229,1.343,230,2.253,235,1.962,236,1.343,237,1.343,240,1.653,241,2.246,242,1.415,266,2.684,271,6.612,278,1.681,289,2.168,290,2.168,317,2.888,343,1.454,387,2.684,400,2.386,423,2.888,703,1.793,769,3.575,770,3.575,771,3.575,772,5.663,773,6.093,774,6.093,775,6.093,776,3.575,777,5.224,778,3.575,779,4.22,780,2.521,781,4.22,782,2.888,783,3.575,784,3.575,785,5.224,786,5.224,787,3.575,788,3.161,789,3.575,790,3.575,791,3.161,792,3.575,793,3.575,794,3.575,795,3.575,796,3.575,797,3.161,798,3.161,799,5.224,800,2.27,801,2.521,802,2.888,803,2.27,804,2.684,805,3.316,806,2.888,807,3.922,808,3.575,809,3.575,810,3.575,811,3.575,812,3.575,813,3.575,814,3.575,815,3.575,816,3.575,817,3.161,818,3.161,819,3.575,820,3.575,821,3.161,822,3.161,823,3.575,824,3.575,825,3.575,826,3.575,827,3.575,828,2.684,829,5.224,830,3.575,831,3.575,832,2.888,833,2.168]],["title/modules/CrudModule.html",[225,0.768,834,3.595]],["body/modules/CrudModule.html",[2,0.059,3,0.049,4,0.04,14,0.009,34,0.079,37,0.006,38,0.006,40,6.675,52,4.79,53,0.36,55,0.367,62,1.883,63,1.927,64,2.884,66,0.108,69,0.746,120,0.859,179,2.557,207,3.841,210,2.168,225,1.101,226,6.204,227,1.698,228,2.637,229,1.786,230,2.39,235,2.397,236,1.786,237,1.786,239,5.154,240,2.019,273,2.467,274,1.987,294,3.873,295,3.57,297,3.869,298,3.869,834,7.29,835,4.755,836,4.755,837,4.755,838,4.755,839,8.442,840,8.581,841,4.803,842,4.755,843,4.755,844,4.755,845,4.755,846,4.755,847,4.755,848,3.019,849,3.019,850,3.841]],["title/interfaces/Crumb.html",[0,1.284,619,3.341]],["body/interfaces/Crumb.html",[0,2.09,2,0.071,3,0.06,4,0.049,6,0.493,7,1.166,9,1.113,13,0.824,14,0.009,15,0.617,17,1.951,34,0.089,37,0.007,38,0.007,44,0.868,49,0.995,53,0.239,55,0.447,66,0.132,69,0.846,75,1.395,76,2.239,78,1.249,79,1.707,81,1.707,85,1.788,87,3.217,90,3.507,187,1.788,612,4.341,613,5.113,614,4.341,615,4.341,616,5.113,617,5.113,618,5.113,619,6.225,623,4.341,624,4.819,851,5.783,852,5.783]],["title/injectables/D3ChartService.html",[39,1.408,853,2.699]],["body/injectables/D3ChartService.html",[2,0.07,3,0.059,4,0.048,6,0.485,13,0.816,14,0.009,15,0.669,34,0.097,37,0.007,38,0.007,39,2.484,44,1.178,53,0.325,55,0.44,66,0.129,84,1.548,99,1.122,153,2.949,853,4.347,854,5.028,855,8.243,856,8.243,857,5.687,858,5.687,859,5.341,860,5.687,861,7.67,862,5.028,863,7.169]],["title/modules/DashboardModule.html",[225,0.768,864,3.595]],["body/modules/DashboardModule.html",[2,0.047,3,0.04,4,0.032,14,0.009,34,0.067,37,0.005,38,0.005,53,0.361,55,0.294,62,2.478,63,2.536,64,2.308,66,0.087,69,0.747,120,0.687,132,2.173,135,1.888,179,3.982,210,3.375,225,0.943,227,1.359,228,2.342,229,1.43,230,1.263,235,2.053,236,1.43,237,1.43,240,1.73,273,1.975,274,1.591,294,4.145,297,2.308,298,2.308,299,5.655,301,2.54,327,4.104,329,3.365,627,5.435,727,2.858,803,2.416,841,4.479,848,2.416,849,2.416,850,4.416,864,7.316,865,3.807,866,3.807,867,3.807,868,7.94,869,6.413,870,5.786,871,5.786,872,5.786,873,5.435,874,3.807,875,3.807,876,3.807,877,3.365,878,3.807,879,3.807,880,3.807,881,3.807,882,3.807,883,3.365,884,3.075,885,2.858,886,3.807,887,3.807,888,3.855,889,3.807]],["title/interfaces/DocsSiteTheme.html",[0,1.284,890,3.595]],["body/interfaces/DocsSiteTheme.html",[0,1.893,2,0.061,3,0.052,4,0.042,6,0.423,7,1.057,9,1.203,13,0.926,14,0.009,15,0.694,17,1.935,34,0.081,37,0.006,38,0.006,39,2.077,50,1.279,53,0.205,55,0.383,66,0.113,94,1.913,99,0.676,153,2.661,419,2.488,429,3.596,684,5.522,890,6.323,891,6.279,892,6.756,893,4.386,894,6.92,895,6.323,896,6.92,897,6.92,898,6.92,899,4.961,900,4.961,901,4.961,902,4.961,903,4.961,904,3.725,905,4.386,906,3.725,907,4.386,908,3.499,909,4.386,910,4.386,911,4.386,912,4.386,913,4.386,914,4.386,915,4.386,916,2.195,917,4.386,918,4.386]],["title/interfaces/Entity.html",[0,1.284,161,2.97]],["body/interfaces/Entity.html",[0,2.112,2,0.072,3,0.061,4,0.05,6,0.624,7,1.284,13,0.669,14,0.009,15,0.624,17,1.931,34,0.09,37,0.007,38,0.007,42,3.216,66,0.134,107,2.328,153,2.489,161,5.32,163,5.883,164,3.997,919,5.2,920,4.648,921,7.322,922,4.751,923,4.416,924,5.2,925,5.2,926,5.2,927,4.148,928,5.2,929,5.2,930,5.2,931,5.2]],["title/classes/EntityColumnDef.html",[66,0.101,922,3.595]],["body/classes/EntityColumnDef.html",[0,1.511,2,0.065,3,0.054,4,0.044,6,0.446,7,1.367,9,0.805,13,0.774,14,0.009,15,0.706,17,1.829,34,0.084,37,0.006,38,0.006,42,3.444,44,0.786,48,1.012,49,0.628,50,1.947,51,2.39,66,0.155,107,2.692,153,2.817,159,3.933,161,5.04,163,3.694,164,2.627,919,4.632,920,3.326,922,5.494,923,6.002,924,6.014,925,7.068,926,7.068,927,4.797,928,6.014,929,4.632,930,4.632,931,6.014,932,5.239,933,6.014,934,6.802,935,5.239,936,5.239,937,5.239]],["title/interceptors/ErrorInterceptor.html",[775,3.595,938,3.935]],["body/interceptors/ErrorInterceptor.html",[2,0.051,3,0.043,4,0.035,6,0.356,7,0.94,8,6.247,9,0.642,13,0.475,14,0.009,15,0.573,34,0.051,37,0.005,38,0.005,39,1.848,44,0.876,48,0.807,49,0.501,50,1.077,51,1.322,53,0.329,54,2.945,55,0.323,58,3.374,60,2.533,66,0.095,75,1.007,84,1.261,99,0.992,153,2.288,218,1.848,256,6.429,258,4.081,259,2.246,332,3.164,343,1.698,357,1.529,419,2.094,653,1.684,775,4.716,938,3.693,939,4.177,940,7.288,941,5.838,942,4.177,943,5.838,944,7.288,945,6.731,946,7.288,947,4.177,948,4.177,949,7.288,950,5.951,951,7.945,952,5.162,953,4.716,954,5.838,955,5.838,956,5.162,957,5.838,958,4.177,959,4.177,960,4.177,961,5.838,962,3.693,963,5.838,964,5.838,965,4.177,966,4.177,967,4.177,968,4.177,969,4.177,970,4.177]],["title/injectables/EventBus.html",[39,1.408,774,3.595]],["body/injectables/EventBus.html",[2,0.076,3,0.064,4,0.052,9,0.95,13,0.703,14,0.009,15,0.527,34,0.076,37,0.007,38,0.007,39,2.579,44,0.928,48,1.194,49,0.742,53,0.337,55,0.478,62,1.825,63,1.867,66,0.141,197,2.102,343,2.514,344,3.549,378,3.601,774,6.098,803,3.924,971,6.182,972,6.182,973,6.182,974,6.182,975,6.182,976,6.182]],["title/components/ExperimentsComponent.html",[69,0.52,977,3.341]],["body/components/ExperimentsComponent.html",[2,0.062,3,0.069,4,0.043,6,0.429,14,0.008,15,0.565,34,0.062,37,0.006,38,0.006,44,1.112,49,0.889,53,0.208,55,0.389,56,1.327,66,0.115,69,0.956,71,1.52,72,1.52,73,1.269,75,1.598,76,2.29,77,1.269,78,1.954,79,2.324,81,1.956,84,1.431,85,2.434,99,0.685,100,1.327,119,1.486,120,0.909,121,2.002,122,1.956,123,1.4,124,2.378,125,1.52,126,1.486,127,1.486,128,2.002,129,1.452,130,1.52,131,1.486,132,1.42,133,1.52,134,1.452,135,1.486,136,1.42,137,1.52,138,1.42,139,1.52,140,1.388,141,1.52,142,1.486,143,1.52,144,1.42,145,1.52,146,1.388,147,1.52,148,1.42,149,1.486,150,1.52,185,3.564,187,2.049,888,4.673,977,5.562,978,5.034,979,6.627,980,6.627,981,5.034,982,5.034]],["title/modules/ExperimentsModule.html",[225,0.768,983,3.341]],["body/modules/ExperimentsModule.html",[2,0.053,3,0.045,4,0.036,14,0.009,34,0.084,37,0.006,38,0.006,50,1.108,53,0.356,55,0.332,62,1.269,63,1.298,64,2.607,66,0.136,67,2.868,69,0.862,120,0.776,123,0.908,140,2.21,179,3.968,210,3.364,225,1.028,227,1.535,228,2.503,229,1.615,230,2.268,235,2.237,236,1.615,237,1.615,240,1.885,273,2.231,274,1.797,277,4.472,281,4.811,282,4.811,283,3.031,284,2.607,294,4.167,295,3.227,297,3.612,298,3.612,828,3.227,841,4.659,848,2.729,849,2.729,888,3.031,977,6.387,983,6.589,984,4.299,985,4.299,986,4.299,987,6.019,988,3.801,989,3.801,990,3.801,991,3.472,992,3.801,993,3.801,994,3.472,995,4.811,996,4.811,997,3.472,998,3.801,999,3.801,1000,6.043,1001,5.266,1002,5.266]],["title/components/FeaturesComponent.html",[69,0.52,1003,3.595]],["body/components/FeaturesComponent.html",[2,0.038,3,0.048,4,0.026,6,0.26,7,0.747,9,0.468,13,0.347,14,0.008,15,0.534,17,1.239,34,0.038,36,1.993,37,0.004,38,0.004,48,0.589,49,0.752,50,1.195,51,1.467,53,0.232,55,0.235,56,0.803,62,0.899,63,0.92,66,0.069,69,0.912,71,0.92,72,0.92,73,0.768,75,1.118,76,1.735,77,0.768,78,1.792,79,1.851,81,1.368,84,1.001,85,1.939,99,0.631,100,1.222,119,0.899,120,0.55,121,1.4,122,1.368,123,0.979,124,1.895,125,0.92,126,0.899,127,0.899,128,1.4,129,0.879,130,0.92,131,0.899,132,0.859,133,0.92,134,0.879,135,0.899,136,0.859,137,0.92,138,0.859,139,0.92,140,0.84,141,0.92,142,0.899,143,0.92,144,0.859,145,0.92,146,0.84,147,0.92,148,0.859,149,0.899,150,0.92,187,1.433,225,0.8,230,1.538,249,3.689,258,2.811,278,2.179,289,1.847,290,1.847,358,3.269,479,3.48,498,5.546,624,1.771,800,2.943,833,3.804,888,3.269,906,4.709,1003,4.533,1004,3.047,1005,4.636,1006,5.742,1007,4.636,1008,4.636,1009,6.273,1010,4.709,1011,4.099,1012,3.047,1013,4.636,1014,3.047,1015,5.612,1016,3.047,1017,4.636,1018,3.047,1019,3.047,1020,2.461,1021,3.047,1022,3.047,1023,4.636,1024,4.099,1025,4.099,1026,4.636,1027,8.647,1028,7.644,1029,6.016,1030,8.387,1031,4.636,1032,6.273,1033,4.636,1034,7.617,1035,4.636,1036,3.745,1037,4.709,1038,6.273,1039,5.067,1040,6.273,1041,6.273,1042,5.546,1043,4.636,1044,4.099,1045,4.636,1046,4.636,1047,4.636,1048,4.636,1049,4.636,1050,3.269,1051,4.636,1052,4.636,1053,4.636,1054,4.636,1055,4.099,1056,4.636,1057,4.636,1058,4.636,1059,4.636,1060,4.636,1061,4.099,1062,4.099,1063,4.636,1064,4.636,1065,4.636,1066,3.48]],["title/interfaces/Filter.html",[0,1.284,1067,3.138]],["body/interfaces/Filter.html",[0,1.509,2,0.044,3,0.037,4,0.03,6,0.305,8,4.357,14,0.009,15,0.305,17,1.72,34,0.064,37,0.005,38,0.005,42,1.381,43,3.166,46,4.991,49,0.627,53,0.312,54,2.526,56,0.944,57,5.463,58,2.893,59,6.891,60,2.172,61,3.166,66,0.081,94,2.016,99,1.156,153,1.218,161,4.123,162,3.49,164,2.623,165,1.858,256,2.689,258,3.747,259,1.926,275,2.39,289,2.172,290,2.172,313,2.893,346,2.526,357,2.488,653,1.509,657,2.172,833,2.172,927,3.689,950,4.624,952,3.166,956,3.166,962,3.166,1029,3.689,1037,3.927,1066,3.927,1067,4.792,1068,3.582,1069,3.582,1070,4.624,1071,3.582,1072,3.582,1073,5.231,1074,2.893,1075,3.582,1076,3.582,1077,3.582,1078,3.582,1079,3.582,1080,3.582,1081,7.548,1082,7.228,1083,3.582,1084,6.795,1085,7.548,1086,3.582,1087,5.231,1088,3.582,1089,3.582,1090,3.582,1091,2.893,1092,3.582,1093,2.689,1094,3.582,1095,3.582,1096,3.582,1097,3.582,1098,3.582,1099,3.582,1100,5.231,1101,5.231,1102,5.231,1103,5.231,1104,4.225,1105,5.231,1106,3.582,1107,3.582,1108,3.582,1109,3.582,1110,3.582,1111,3.582,1112,3.582,1113,3.582,1114,3.582,1115,3.582,1116,5.231,1117,2.526,1118,3.582,1119,3.582,1120,3.582,1121,3.582,1122,5.231,1123,3.582,1124,3.582,1125,3.582,1126,3.582,1127,3.582,1128,4.624,1129,3.582,1130,3.582,1131,3.582,1132,3.582,1133,3.582,1134,3.582,1135,2.689,1136,3.582,1137,3.582,1138,3.582,1139,3.582,1140,3.582,1141,3.582,1142,2.893,1143,3.582,1144,5.231,1145,6.179,1146,3.582,1147,3.582,1148,3.582,1149,5.231,1150,3.582]],["title/components/FooterComponent.html",[69,0.52,1151,3.595]],["body/components/FooterComponent.html",[2,0.051,3,0.06,4,0.035,6,0.354,7,0.937,14,0.009,15,0.62,34,0.051,37,0.005,38,0.005,44,1.008,49,0.806,50,1.072,51,1.316,53,0.241,55,0.321,56,1.097,66,0.095,69,0.895,71,1.256,72,1.256,73,1.049,75,1.404,76,2.076,77,1.049,78,1.899,79,2.147,81,1.718,84,1.257,85,2.249,99,0.915,100,1.097,119,1.228,120,0.751,121,1.758,122,1.718,123,1.229,124,2.197,125,1.256,126,1.228,127,1.228,128,1.758,129,1.2,130,1.256,131,1.228,132,1.173,133,1.256,134,1.2,135,1.228,136,1.173,137,1.256,138,1.173,139,1.256,140,1.147,141,1.256,142,1.228,143,1.256,144,1.173,145,1.256,146,1.147,147,1.256,148,1.173,149,1.228,150,1.256,185,3.131,187,1.8,278,2.737,289,4.94,290,2.523,653,1.2,821,5.147,908,4.105,1010,6.24,1025,5.147,1029,4.105,1151,5.425,1152,4.16,1153,5.822,1154,5.822,1155,5.822,1156,4.371,1157,5.822,1158,4.16,1159,4.16,1160,4.16,1161,6.716,1162,4.16,1163,5.147,1164,4.371,1165,5.822,1166,5.147,1167,7.935,1168,7.275,1169,5.822,1170,4.703,1171,5.147,1172,5.822,1173,5.822]],["title/components/FullscreenComponent.html",[69,0.52,1174,3.595]],["body/components/FullscreenComponent.html",[2,0.057,3,0.065,4,0.039,6,0.391,7,1.003,14,0.009,15,0.646,34,0.057,37,0.006,38,0.006,44,1.061,49,0.848,50,1.182,51,1.451,53,0.258,55,0.354,56,1.209,66,0.104,69,0.926,71,1.385,72,1.385,73,1.156,75,1.502,76,2.185,77,1.156,78,1.928,79,2.413,81,1.838,84,1.344,85,2.344,99,0.848,100,1.641,102,2.464,119,1.354,120,0.828,121,1.881,122,1.838,123,1.315,124,2.29,125,1.385,126,1.354,127,1.354,128,1.881,129,1.323,130,1.385,131,1.354,132,1.293,133,1.385,134,1.323,135,1.354,136,1.293,137,1.385,138,1.293,139,1.385,140,1.264,141,1.385,142,1.354,143,1.385,144,1.293,145,1.385,146,1.264,147,1.385,148,1.293,149,1.354,150,1.385,187,1.925,1174,5.71,1175,4.586,1176,7.583,1177,6.227,1178,6.227,1179,6.704,1180,7.583,1181,6.227,1182,4.586,1183,4.586,1184,5.505,1185,4.586,1186,4.586,1187,6.227,1188,6.227]],["title/modules/FullscreenModule.html",[225,0.768,1189,3.138]],["body/modules/FullscreenModule.html",[2,0.068,3,0.058,4,0.047,14,0.009,34,0.101,37,0.007,38,0.007,53,0.362,55,0.429,62,1.638,63,1.676,66,0.126,120,1.002,225,1.218,227,1.982,228,2.842,229,2.084,230,1.841,235,2.651,236,2.084,237,2.084,240,2.234,241,3.034,242,2.196,247,4.28,248,3.099,249,2.879,1174,7.372,1189,6.312,1190,5.549,1191,5.549,1192,5.549,1193,5.549,1194,5.753,1195,5.549,1196,5.549,1197,4.482]],["title/classes/Go.html",[66,0.101,1198,3.341]],["body/classes/Go.html",[0,1.138,2,0.049,3,0.041,4,0.033,6,0.336,7,0.903,9,0.606,13,0.887,14,0.009,15,0.478,17,0.871,34,0.088,36,2.411,37,0.005,38,0.005,42,2.739,44,0.592,48,0.762,49,0.673,50,1.017,53,0.294,56,1.478,60,2.392,66,0.162,94,1.521,99,0.968,153,1.906,174,2.22,197,1.341,201,2.782,210,3.239,259,2.122,274,1.649,294,4.315,332,3.067,338,4.21,340,4.73,343,1.604,357,2.053,369,3.536,370,2.047,378,2.28,433,3.644,446,2.203,451,3.132,653,1.138,657,2.392,683,2.293,807,2.962,1067,2.782,1093,4.898,1117,2.782,1198,4.898,1199,3.186,1200,5.334,1201,3.945,1202,3.945,1203,4.21,1204,6.063,1205,4.53,1206,4.53,1207,3.186,1208,3.186,1209,4.21,1210,6.3,1211,4.898,1212,4.53,1213,3.186,1214,5.27,1215,3.186,1216,3.186,1217,3.186,1218,3.186,1219,3.186,1220,3.186,1221,4.53,1222,3.186,1223,3.186,1224,3.186,1225,4.53,1226,3.186,1227,3.186,1228,3.186,1229,3.186,1230,3.186,1231,3.186,1232,3.186,1233,3.186,1234,3.186,1235,3.186,1236,3.186]],["title/components/HammerCardComponent.html",[69,0.52,987,3.341]],["body/components/HammerCardComponent.html",[2,0.047,3,0.057,4,0.032,6,0.325,7,0.881,9,0.586,13,0.434,14,0.009,15,0.631,17,1.413,34,0.047,36,2.353,37,0.005,38,0.005,44,0.961,48,0.737,49,0.839,53,0.226,55,0.295,56,1.005,62,1.126,63,1.152,66,0.087,69,0.866,71,1.152,72,1.152,73,0.961,75,1.32,76,1.979,77,0.961,78,1.871,79,2.065,81,1.616,84,1.182,85,2.163,99,0.872,100,1.688,119,1.126,120,0.689,121,1.653,122,1.616,123,1.156,124,2.113,125,1.152,126,1.126,127,1.126,128,1.653,129,1.1,130,1.152,131,1.126,132,1.075,133,1.152,134,1.1,135,1.126,136,1.075,137,1.152,138,1.075,139,1.152,140,1.051,141,1.152,142,1.126,143,1.152,144,1.075,145,1.152,146,1.051,147,1.152,148,1.075,149,1.126,150,1.152,179,2.051,185,3.763,187,1.692,278,2.573,683,3.181,780,4.934,987,4.807,991,6.23,994,6.23,1020,3.08,1029,3.86,1062,4.839,1163,4.839,1237,7.712,1238,3.814,1239,5.474,1240,5.474,1241,5.474,1242,6.997,1243,6.997,1244,5.474,1245,5.474,1246,3.814,1247,3.814,1248,5.474,1249,3.814,1250,5.474,1251,3.814,1252,6.403,1253,5.474,1254,5.474,1255,6.186,1256,5.474,1257,5.474,1258,5.474,1259,4.839,1260,5.474,1261,5.652,1262,6.997,1263,4.839,1264,5.474,1265,5.474,1266,5.474,1267,4.839]],["title/directives/HammertimeDirective.html",[123,0.94,140,1.227]],["body/directives/HammertimeDirective.html",[2,0.069,3,0.058,4,0.047,6,0.475,13,0.806,14,0.009,15,0.697,34,0.069,37,0.007,38,0.007,44,1.167,53,0.231,55,0.431,66,0.127,77,1.407,78,1.529,94,2.73,123,1.643,140,1.953,676,7.469,677,5.842,683,4.757,684,6.342,685,4.507,1104,4.507,1267,6.88,1268,5.579,1269,7.083,1270,7.782,1271,7.083,1272,7.083,1273,5.579,1274,5.579,1275,5.579,1276,5.579,1277,5.579,1278,7.083,1279,4.507,1280,5.579,1281,5.579]],["title/components/HeaderComponent.html",[69,0.52,1282,3.595]],["body/components/HeaderComponent.html",[2,0.044,3,0.054,4,0.03,6,0.301,7,0.835,9,0.544,13,0.698,14,0.009,15,0.662,34,0.044,37,0.005,38,0.005,44,0.531,48,0.684,49,0.81,50,0.912,51,1.12,53,0.298,55,0.273,56,0.933,62,1.53,63,1.566,66,0.081,69,0.84,71,1.069,72,1.069,73,0.892,75,1.25,76,1.897,77,0.892,78,1.846,79,1.994,81,1.53,84,1.119,85,2.088,99,0.92,100,1.781,119,1.044,120,0.639,121,1.566,122,1.53,123,1.095,124,2.041,125,1.069,126,1.044,127,1.044,128,1.566,129,1.021,130,1.069,131,1.044,132,0.998,133,1.069,134,1.021,135,1.044,136,0.998,137,1.069,138,0.998,139,1.069,140,0.976,141,1.069,142,1.044,143,1.069,144,0.998,145,1.069,146,0.976,147,1.069,148,0.998,149,1.044,150,1.069,153,2.762,185,2.788,187,1.603,197,1.203,215,2.495,258,4.097,259,1.903,296,3.459,332,3.533,343,1.439,344,3.743,364,3.013,379,3.863,400,2.361,426,5.457,432,3.656,479,5.072,624,4.368,803,3.291,923,3.892,1006,5.457,1282,4.956,1283,3.539,1284,5.185,1285,5.185,1286,5.973,1287,7.516,1288,3.128,1289,3.539,1290,3.539,1291,3.539,1292,3.539,1293,3.539,1294,3.539,1295,7.516,1296,3.539,1297,3.128,1298,5.185,1299,5.185,1300,6.756,1301,5.185,1302,5.185,1303,5.185,1304,5.185]],["title/components/HomeLayoutComponent.html",[69,0.52,1305,3.595]],["body/components/HomeLayoutComponent.html",[2,0.056,3,0.064,4,0.038,6,0.387,14,0.009,15,0.6,34,0.056,37,0.006,38,0.006,44,1.056,49,0.844,53,0.256,55,0.351,56,1.198,62,1.342,63,1.373,66,0.103,69,0.924,71,1.373,72,1.373,73,1.146,75,1.493,76,2.175,77,1.146,78,1.925,79,2.23,81,1.827,84,1.336,85,2.335,99,0.843,100,1.631,119,1.342,120,0.821,121,1.869,122,1.827,123,1.307,124,2.282,125,1.373,126,1.342,127,1.342,128,1.869,129,1.311,130,1.373,131,1.342,132,1.282,133,1.373,134,1.311,135,1.342,136,1.282,137,1.373,138,1.282,139,1.373,140,1.253,141,1.373,142,1.342,143,1.373,144,1.282,145,1.373,146,1.253,147,1.373,148,1.282,149,1.342,150,1.373,165,3.211,179,2.444,185,3.328,187,1.913,249,3.211,275,3.033,296,5.441,1020,3.672,1305,5.684,1306,7.555,1307,6.679,1308,4.546,1309,6.189,1310,6.189,1311,7.904,1312,4.546,1313,4.546,1314,4.546,1315,6.189,1316,4.546,1317,4.546,1318,4.546,1319,4.546]],["title/modules/HomeModule.html",[225,0.768,1320,3.595]],["body/modules/HomeModule.html",[2,0.047,3,0.04,4,0.032,14,0.009,34,0.068,37,0.005,38,0.005,53,0.362,55,0.296,62,2.07,63,2.119,64,2.325,66,0.087,69,0.903,120,0.693,179,3.993,210,3.385,225,0.948,227,1.369,228,2.352,229,1.44,230,1.273,235,2.064,236,1.44,237,1.44,240,1.739,273,1.99,274,1.603,294,4.155,296,3.667,297,2.325,298,2.325,477,6.428,479,4.126,758,2.434,841,4.49,848,2.434,849,2.434,877,3.39,885,2.879,1003,6.428,1006,4.439,1282,6.241,1305,6.428,1307,3.39,1320,7.362,1321,3.835,1322,3.835,1323,3.835,1324,6.428,1325,7.958,1326,5.801,1327,5.801,1328,5.801,1329,3.835,1330,3.835,1331,3.835,1332,3.835,1333,3.835,1334,3.835,1335,3.835,1336,3.835,1337,3.835,1338,3.835,1339,3.835,1340,3.835]],["title/injectables/InMemoryDataService.html",[39,1.408,782,3.595]],["body/injectables/InMemoryDataService.html",[2,0.056,3,0.047,4,0.039,6,0.389,9,0.701,13,0.519,14,0.009,15,0.529,17,1.557,19,6.114,34,0.056,37,0.006,38,0.006,39,2.232,48,0.882,49,0.548,52,4.66,53,0.257,55,0.353,66,0.104,75,1.101,84,1.34,94,1.76,99,1.031,127,1.348,161,4.706,163,4.974,210,2.081,278,2.146,358,3.22,361,4.66,653,2.284,779,6.596,780,4.974,781,3.688,782,5.014,996,5.014,1029,4.974,1037,3.427,1104,3.688,1279,3.688,1341,7.053,1342,6.208,1343,7.569,1344,6.208,1345,4.566,1346,6.208,1347,7.053,1348,7.569,1349,4.566,1350,7.053,1351,6.208,1352,4.566,1353,4.566,1354,4.566,1355,4.566,1356,6.208,1357,6.208,1358,6.208,1359,4.566,1360,4.566,1361,4.566,1362,5.488,1363,2.55,1364,4.566,1365,4.566,1366,4.566,1367,4.566,1368,4.566,1369,6.208,1370,4.566,1371,4.566,1372,4.566,1373,4.566,1374,4.566,1375,4.566,1376,6.236,1377,4.566,1378,6.208]],["title/classes/InitializeData.html",[66,0.101,1379,2.825]],["body/classes/InitializeData.html",[0,0.94,2,0.04,3,0.034,4,0.028,6,0.278,7,0.785,9,0.501,13,0.555,14,0.009,15,0.416,17,0.719,34,0.093,36,2.097,37,0.005,38,0.005,42,2.915,44,0.489,48,0.63,49,0.585,50,0.84,53,0.269,62,0.962,63,0.984,66,0.172,73,2.099,78,1.262,99,0.946,102,1.931,108,1.894,153,1.658,174,2.751,197,1.108,332,2.748,343,1.325,357,1.786,364,1.894,369,3.67,370,1.691,378,1.325,419,2.446,429,2.097,433,4.073,446,4.073,447,4.936,451,2.724,653,2.005,703,1.634,805,2.069,916,1.442,1363,2.724,1379,4.12,1380,2.174,1381,3.259,1382,3.259,1383,4.066,1384,2.069,1385,2.069,1386,3.545,1387,2.069,1388,2.069,1389,3.711,1390,3.711,1391,3.711,1392,3.711,1393,3.711,1394,5.669,1395,4.331,1396,2.174,1397,2.174,1398,2.174,1399,2.174,1400,2.174,1401,2.174,1402,2.174,1403,2.174,1404,2.174,1405,4.239,1406,3.255,1407,2.174,1408,2.174,1409,2.174,1410,2.174,1411,2.174,1412,2.174,1413,2.835,1414,3.255,1415,3.255,1416,3.255,1417,2.174,1418,2.174,1419,1.894,1420,1.976]],["title/components/LandingComponent.html",[69,0.52,1324,3.595]],["body/components/LandingComponent.html",[2,0.046,3,0.056,4,0.032,6,0.321,7,0.873,9,0.578,13,0.617,14,0.008,15,0.542,34,0.046,37,0.005,38,0.005,44,0.565,48,0.727,49,0.834,53,0.224,55,0.291,56,0.992,66,0.086,69,0.925,71,1.137,72,1.137,73,0.949,75,1.308,76,1.965,77,0.949,78,1.867,79,2.053,81,1.601,84,1.171,85,2.15,99,0.513,100,1.43,119,1.111,120,0.68,121,1.638,122,1.601,123,1.145,124,2.101,125,1.137,126,1.111,127,1.111,128,1.638,129,1.086,130,1.137,131,1.111,132,1.062,133,1.137,134,1.086,135,1.111,136,1.062,137,1.137,138,1.062,139,1.137,140,1.038,141,1.137,142,1.111,143,1.137,144,1.062,145,1.137,146,1.038,147,1.137,148,1.062,149,1.111,150,1.137,153,1.844,174,1.49,185,4.356,187,1.677,196,3.328,278,3.609,284,3.289,753,4.905,772,5.765,780,3.824,1024,6.149,1039,4.381,1042,4.795,1135,4.071,1164,5.222,1261,4.381,1263,4.795,1324,5.135,1421,3.765,1422,5.423,1423,5.423,1424,5.423,1425,7.372,1426,3.765,1427,3.765,1428,3.765,1429,3.765,1430,3.765,1431,5.423,1432,5.423,1433,5.423,1434,5.423,1435,5.423,1436,5.423,1437,4.795,1438,5.423,1439,4.795,1440,5.423,1441,5.423,1442,5.423,1443,5.423,1444,5.423,1445,5.423,1446,5.423,1447,5.423,1448,5.423,1449,5.423,1450,5.423,1451,5.423,1452,5.423,1453,5.423,1454,4.381,1455,5.423,1456,5.423,1457,5.423,1458,5.423,1459,5.423,1460,5.423,1461,5.423,1462,5.423]],["title/components/LineChartWidgetComponent.html",[69,0.52,129,1.284]],["body/components/LineChartWidgetComponent.html",[2,0.036,3,0.046,4,0.025,6,0.248,7,0.721,9,0.941,13,0.794,14,0.009,15,0.656,34,0.036,37,0.004,38,0.004,44,0.436,48,0.562,49,0.735,53,0.185,55,0.225,56,0.767,66,0.066,69,0.772,71,0.879,72,0.879,73,0.733,75,1.079,76,1.686,77,0.733,78,1.775,79,2.06,81,1.321,84,0.966,85,1.893,87,2.218,99,0.834,100,0.767,102,1.151,107,1.771,119,1.61,120,0.525,121,1.352,122,1.321,123,0.945,124,1.85,125,0.879,126,0.859,127,0.859,128,1.352,129,1.767,130,2.196,131,2.641,132,0.82,133,0.879,134,0.839,135,0.859,136,0.82,137,0.879,138,0.82,139,0.879,140,0.802,141,0.879,142,0.859,143,0.879,144,0.82,145,0.879,146,0.802,147,0.879,148,0.82,149,0.859,150,0.879,164,3.5,165,3.43,187,1.383,210,2.486,680,1.941,755,1.941,758,1.847,853,3.713,859,4.669,1279,5.639,1463,6.35,1464,7.861,1465,7.861,1466,2.572,1467,3.956,1468,3.956,1469,4.318,1470,6.981,1471,6.981,1472,6.981,1473,3.615,1474,4.475,1475,2.35,1476,2.572,1477,2.572,1478,2.909,1479,2.572,1480,2.572,1481,2.909,1482,2.909,1483,2.051,1484,2.572,1485,2.35,1486,3.156,1487,2.35,1488,2.909,1489,2.909,1490,5.454,1491,5.454,1492,2.909,1493,2.909,1494,2.909,1495,2.909,1496,2.051,1497,2.909,1498,1.941,1499,2.909,1500,2.051,1501,2.051,1502,2.572,1503,2.909,1504,2.051,1505,1.847,1506,3.846,1507,2.051,1508,2.051,1509,2.051,1510,2.051,1511,3.156,1512,2.909,1513,2.051,1514,2.909,1515,2.909,1516,2.909,1517,2.909,1518,2.051,1519,2.35,1520,2.35,1521,3.956,1522,3.615,1523,5.24,1524,3.956,1525,4.475,1526,4.475]],["title/classes/LoadProfile.html",[66,0.101,380,2.485]],["body/classes/LoadProfile.html",[2,0.064,3,0.054,4,0.044,6,0.444,7,1.092,9,0.801,13,0.771,14,0.009,15,0.578,17,1.151,34,0.11,37,0.006,38,0.006,42,3.076,44,0.782,48,1.007,49,0.625,66,0.203,153,2.305,174,3.274,175,2.613,344,2.45,365,2.911,367,2.803,368,2.911,369,3.699,370,2.705,371,4.052,374,3.786,375,2.911,376,2.911,377,3.786,378,2.757,379,2.529,380,3.786,381,2.803,382,3.029,383,2.803,384,2.803,385,2.803,386,2.911,1527,5.212,1528,5.212]],["title/components/LoadingOverlayComponent.html",[69,0.52,1529,3.595]],["body/components/LoadingOverlayComponent.html",[2,0.058,3,0.066,4,0.04,6,0.404,13,0.54,14,0.008,15,0.613,34,0.058,37,0.006,38,0.006,44,1.079,49,0.863,53,0.196,55,0.367,56,1.251,66,0.108,69,0.937,71,1.433,72,1.433,73,1.196,75,1.536,76,2.223,77,1.196,78,1.938,79,2.269,81,1.88,83,5.81,84,1.376,85,2.377,87,2.925,99,0.646,100,1.251,119,1.4,120,0.857,121,1.924,122,1.88,123,1.345,124,2.322,125,1.433,126,1.4,127,1.4,128,1.924,129,1.369,130,1.433,131,1.4,132,1.338,133,1.433,134,1.369,135,1.4,136,1.338,137,1.433,138,1.338,139,1.433,140,1.308,141,1.433,142,1.4,143,1.433,144,1.338,145,1.433,146,1.308,147,1.433,148,1.338,149,1.4,150,1.433,187,1.969,429,2.739,727,4.783,833,5.008,1529,5.81,1530,6.798,1531,6.798,1532,4.744,1533,6.371,1534,6.371,1535,6.371,1536,4.744,1537,4.744]],["title/modules/LoadingOverlayModule.html",[225,0.768,873,3.138]],["body/modules/LoadingOverlayModule.html",[2,0.071,3,0.06,4,0.049,14,0.009,34,0.102,37,0.007,38,0.007,53,0.353,55,0.447,66,0.132,120,1.044,218,2.559,225,1.25,227,2.065,228,2.897,229,2.172,230,1.919,235,2.721,236,2.172,237,2.172,240,2.292,241,3.114,242,2.289,833,3.507,873,6.234,1529,7.413,1530,5.113,1531,5.113,1538,5.783,1539,5.783,1540,5.783,1541,5.783,1542,5.783,1543,5.852]],["title/classes/Login.html",[66,0.101,344,2.092]],["body/classes/Login.html",[2,0.062,3,0.052,4,0.043,6,0.43,7,1.069,9,1.14,13,0.956,14,0.009,15,0.566,17,1.114,34,0.109,37,0.006,38,0.006,42,3.24,44,0.757,48,0.975,49,0.605,66,0.202,153,2.256,159,3.788,174,3.24,175,2.53,344,3.12,365,2.818,367,2.714,368,2.818,369,3.676,370,2.618,371,3.989,374,3.707,375,2.818,376,2.818,377,3.707,378,2.699,379,2.448,380,2.818,381,2.714,382,2.933,383,2.714,384,2.714,385,2.714,386,2.818,1200,5.916,1544,5.047,1545,5.047]],["title/classes/LoginCanceled.html",[66,0.101,384,2.393]],["body/classes/LoginCanceled.html",[2,0.068,3,0.057,4,0.047,14,0.009,17,1.218,34,0.111,37,0.007,38,0.007,42,3.143,66,0.205,174,3.333,175,2.768,344,2.594,365,3.082,367,2.968,368,3.082,369,3.519,371,4.164,374,3.928,375,3.082,376,3.082,377,3.928,378,2.86,379,2.678,380,3.082,381,2.968,382,3.208,383,2.968,384,3.783,385,2.968,386,3.082]],["title/classes/LoginSuccess.html",[66,0.101,383,2.393]],["body/classes/LoginSuccess.html",[2,0.064,3,0.054,4,0.044,6,0.442,7,1.088,9,0.797,13,0.769,14,0.009,15,0.576,17,1.145,34,0.11,37,0.006,38,0.006,42,3.264,44,0.778,48,1.002,49,0.622,66,0.203,153,2.297,174,3.269,175,2.6,344,2.438,365,2.896,367,2.789,368,2.896,369,3.695,370,2.691,371,4.042,374,3.774,375,2.896,376,2.896,377,3.774,378,2.748,379,2.516,380,2.896,381,2.789,382,3.014,383,3.634,384,2.789,385,2.789,386,2.896,1546,5.186,1547,5.186]],["title/classes/Logout.html",[66,0.101,379,2.159]],["body/classes/Logout.html",[2,0.068,3,0.057,4,0.047,14,0.009,17,1.218,34,0.111,37,0.007,38,0.007,42,3.143,66,0.205,174,3.333,175,2.768,344,2.594,365,3.082,367,2.968,368,3.082,369,3.519,371,4.164,374,3.928,375,3.082,376,3.082,377,3.928,378,2.86,379,3.413,380,3.082,381,2.968,382,3.208,383,2.968,384,2.968,385,2.968,386,3.082]],["title/classes/LogoutSuccess.html",[66,0.101,385,2.393]],["body/classes/LogoutSuccess.html",[2,0.068,3,0.057,4,0.047,14,0.009,17,1.218,34,0.111,37,0.007,38,0.007,42,3.143,66,0.205,174,3.333,175,2.768,344,2.594,365,3.082,367,2.968,368,3.082,369,3.519,371,4.164,374,3.928,375,3.082,376,3.082,377,3.928,378,2.86,379,2.678,380,3.082,381,2.968,382,3.208,383,2.968,384,2.968,385,3.783,386,3.082]],["title/modules/MaterialDateModule.html",[225,0.768,1548,3.341]],["body/modules/MaterialDateModule.html",[2,0.07,3,0.059,4,0.048,14,0.009,34,0.088,37,0.007,38,0.007,53,0.341,55,0.44,66,0.129,162,3.795,218,3.172,225,0.981,230,2.605,240,2.269,653,2.068,1376,5.028,1548,5.382,1549,5.687,1550,5.687,1551,7.169,1552,5.028,1553,7.169,1554,7.169,1555,7.169,1556,6.338,1557,7.851,1558,7.169,1559,7.169,1560,7.851,1561,5.028,1562,5.687,1563,5.687,1564,7.169,1565,5.687,1566,5.687,1567,5.687,1568,5.382,1569,5.687,1570,5.687]],["title/modules/MaterialModule.html",[225,0.768,1194,2.97]],["body/modules/MaterialModule.html",[2,0.067,3,0.057,4,0.046,14,0.008,34,0.086,37,0.006,38,0.006,53,0.289,55,0.421,66,0.124,218,2.41,225,0.94,240,2.207,245,5.634,246,3.895,405,6.166,406,6.166,407,6.166,408,4.053,409,5.634,410,5.236,653,1.571,1194,4.654,1543,5.634,1556,6.166,1571,5.447,1572,6.975,1573,6.166,1574,6.975,1575,6.166,1576,6.975,1577,6.975,1578,5.634,1579,5.236,1580,5.236,1581,6.975,1582,6.975,1583,6.975,1584,6.975,1585,5.634,1586,6.975,1587,5.634,1588,6.975,1589,6.975,1590,6.975,1591,6.975,1592,6.975,1593,6.166,1594,5.236,1595,6.975,1596,6.975]],["title/injectables/MediaQueryService.html",[39,1.408,773,3.595]],["body/injectables/MediaQueryService.html",[2,0.054,3,0.045,4,0.037,6,0.372,7,0.97,9,0.672,13,0.686,14,0.009,15,0.704,34,0.054,37,0.006,38,0.006,39,2.182,44,0.656,48,0.845,49,0.524,50,1.778,51,2.182,53,0.308,55,0.338,66,0.099,94,3.107,99,0.939,248,2.441,249,2.268,258,4.507,357,3.127,773,4.868,1156,4.524,1597,8.414,1598,4.372,1599,7.432,1600,7.432,1601,7.432,1602,5.177,1603,6.896,1604,6.896,1605,6.026,1606,7.432,1607,4.372,1608,6.026,1609,7.432,1610,8.059,1611,4.372,1612,4.372,1613,4.372,1614,4.372,1615,4.372,1616,4.372,1617,4.372,1618,4.372,1619,4.372,1620,4.372,1621,4.372,1622,4.372,1623,4.372,1624,4.372,1625,4.372,1626,4.372,1627,4.372,1628,4.372,1629,6.026,1630,4.372,1631,6.026,1632,6.896,1633,6.026,1634,4.372,1635,4.372,1636,4.372,1637,4.372,1638,4.372]],["title/interfaces/MenuItem.html",[0,1.284,1383,2.393]],["body/interfaces/MenuItem.html",[0,1.751,2,0.054,3,0.046,4,0.037,6,0.517,7,0.977,9,1.355,13,1.016,14,0.009,15,0.719,17,1.982,34,0.075,36,1.9,37,0.006,38,0.006,49,0.939,51,1.921,53,0.183,62,1.304,63,1.335,67,4.051,90,2.679,107,1.749,164,2.216,175,2.216,321,5.367,340,2.679,429,2.981,624,4.699,817,6.601,920,3.854,1050,3.116,1200,4.557,1383,3.265,1388,2.805,1405,4.03,1454,3.569,1561,3.907,1639,7.567,1640,3.907,1641,5.206,1642,7.466,1643,7.322,1644,7.826,1645,6.071,1646,4.419,1647,4.419,1648,4.419,1649,4.419,1650,4.419,1651,6.601,1652,4.419,1653,5.367,1654,6.131,1655,5.367,1656,4.419,1657,4.419,1658,3.907,1659,3.907]],["title/components/MenuItemComponent.html",[69,0.52,1660,3.595]],["body/components/MenuItemComponent.html",[2,0.046,3,0.056,4,0.031,6,0.315,13,0.609,14,0.009,15,0.687,17,0.816,34,0.046,37,0.005,38,0.005,44,0.944,49,0.755,50,0.953,51,1.17,53,0.221,55,0.286,56,0.975,62,1.091,63,1.117,66,0.084,69,0.855,71,1.117,72,1.117,73,0.932,75,1.291,76,1.945,77,0.932,78,1.861,79,2.252,81,1.58,84,1.156,85,2.132,87,2.976,99,1.072,100,1.411,102,2.49,119,1.091,120,0.668,121,1.617,122,1.58,123,1.13,124,2.083,125,1.117,126,1.091,127,1.091,128,1.617,129,1.067,130,1.117,131,1.091,132,1.043,133,1.117,134,1.067,135,1.091,136,1.043,137,1.117,138,1.043,139,1.117,140,1.019,141,1.117,142,1.091,143,1.117,144,1.043,145,1.117,146,1.019,147,1.117,148,1.043,149,1.091,150,1.117,187,1.655,429,2.705,653,1.067,703,3.826,806,2.986,1011,6.098,1383,3.384,1405,4.254,1498,3.572,1660,5.083,1661,8.214,1662,7.262,1663,3.697,1664,5.353,1665,5.353,1666,6.898,1667,6.898,1668,6.292,1669,6.292,1670,5.353,1671,3.697,1672,3.697,1673,3.697,1674,3.697,1675,3.697,1676,3.697,1677,3.697,1678,6.292,1679,3.697,1680,5.353,1681,5.353,1682,3.697,1683,5.353,1684,3.697,1685,6.898,1686,6.098,1687,5.353,1688,5.353]],["title/interfaces/MenuStateModel.html",[0,1.284,1393,2.825]],["body/interfaces/MenuStateModel.html",[0,1.404,2,0.04,3,0.034,4,0.027,6,0.277,7,0.784,13,0.664,14,0.009,15,0.497,17,0.717,34,0.093,36,2.092,37,0.004,38,0.004,42,2.675,49,0.39,50,0.837,53,0.268,62,0.959,63,0.981,66,0.166,73,2.12,78,1.26,99,0.945,102,1.926,108,1.888,174,2.747,197,1.104,332,2.743,343,1.321,357,1.782,364,1.888,369,3.578,378,1.321,419,2.44,429,2.786,433,4.068,446,4.068,447,4.931,451,2.717,653,2.002,703,1.629,805,2.062,916,1.437,1363,2.717,1379,3.704,1380,2.168,1383,4.272,1384,2.062,1385,2.062,1386,3.538,1387,2.062,1388,2.062,1389,3.704,1390,3.704,1391,3.704,1392,3.704,1393,4.113,1394,5.793,1395,5.04,1396,2.168,1397,2.168,1398,2.168,1399,2.168,1400,2.168,1401,2.168,1402,2.168,1403,2.168,1404,2.168,1405,4.234,1406,3.247,1407,2.168,1408,2.168,1409,2.168,1410,2.168,1411,2.168,1412,2.168,1413,2.828,1414,3.247,1415,3.247,1416,3.247,1417,2.168,1418,2.168,1419,1.888,1420,1.97,1689,3.248,1690,3.248,1691,3.248]],["title/directives/MinValidatorDirective.html",[123,0.94,144,1.255]],["body/directives/MinValidatorDirective.html",[2,0.066,3,0.056,4,0.045,6,0.458,9,0.826,13,0.87,14,0.009,15,0.589,17,1.187,34,0.066,37,0.006,38,0.006,48,1.039,49,0.645,53,0.286,55,0.415,66,0.122,75,1.668,77,1.355,78,1.493,84,1.493,87,3.283,99,0.942,107,2.737,123,1.615,144,2.156,164,3.468,230,2.537,412,3.791,423,4.342,916,2.379,920,3.412,1200,4.035,1692,5.376,1693,8.55,1694,6.916,1695,7.137,1696,5.376,1697,6.916,1698,8.073,1699,5.376,1700,5.376,1701,6.916,1702,5.376,1703,5.376,1704,5.376,1705,5.376]],["title/classes/MyHammerConfig.html",[66,0.101,995,3.595]],["body/classes/MyHammerConfig.html",[2,0.055,3,0.047,4,0.038,6,0.383,7,0.989,14,0.009,15,0.383,34,0.076,37,0.006,38,0.006,50,1.804,51,1.423,53,0.355,55,0.347,62,1.327,63,1.358,64,2.726,66,0.159,67,4.099,69,0.879,123,1.297,140,1.694,179,4.044,210,3.428,228,1.646,230,2.038,240,1.944,273,2.333,274,1.879,277,5.253,281,5.652,282,4.962,283,3.17,284,2.726,294,4.234,295,3.375,297,3.725,298,3.725,828,3.375,841,3.57,848,2.854,849,2.854,888,3.17,977,5.911,983,3.375,987,4.612,988,3.975,989,3.975,990,3.975,991,3.631,992,3.975,993,3.975,994,3.631,995,5.652,996,6.565,997,4.962,998,5.431,999,5.431,1000,6.186,1001,5.431,1002,5.431,1706,4.496]],["title/modules/NavigatorModule.html",[225,0.768,804,3.341]],["body/modules/NavigatorModule.html",[2,0.074,3,0.062,4,0.051,14,0.009,34,0.074,37,0.007,38,0.007,53,0.364,55,0.462,66,0.136,99,0.815,225,1.033,230,2.456,240,2.542,241,3.182,242,2.369,396,5.978,419,3.001,804,6.031,1362,5.291,1383,4.321,1384,3.799,1385,3.799,1386,4.488,1387,3.799,1568,4.493,1707,5.985,1708,7.401,1709,5.985]],["title/classes/NextCurrentlyOpened.html",[66,0.101,1389,2.825]],["body/classes/NextCurrentlyOpened.html",[0,0.94,2,0.04,3,0.034,4,0.028,6,0.278,7,0.785,9,0.501,13,0.555,14,0.009,15,0.416,17,0.719,34,0.093,36,2.097,37,0.005,38,0.005,42,2.915,44,0.489,48,0.63,49,0.585,50,0.84,53,0.269,62,0.962,63,0.984,66,0.172,73,1.96,78,1.262,99,0.946,102,1.931,108,1.894,153,1.658,174,2.751,197,1.108,332,2.748,343,1.325,357,1.786,364,1.894,369,3.67,370,1.691,378,1.325,419,2.446,429,2.097,433,4.073,446,4.073,447,4.936,451,2.724,653,2.005,703,1.634,805,2.069,916,1.442,1363,2.724,1379,3.711,1380,2.174,1383,4.42,1384,2.069,1385,2.069,1386,3.545,1387,2.069,1388,2.069,1389,4.12,1390,3.711,1391,3.711,1392,3.711,1393,3.711,1394,5.669,1395,4.331,1396,2.174,1397,2.174,1398,2.174,1399,2.174,1400,2.174,1401,2.174,1402,2.174,1403,2.174,1404,2.174,1405,4.239,1406,3.255,1407,2.174,1408,2.174,1409,2.174,1410,2.174,1411,2.174,1412,2.174,1413,2.835,1414,3.255,1415,3.255,1416,3.255,1417,2.174,1418,2.174,1419,1.894,1420,1.976,1710,3.259,1711,3.259]],["title/classes/NgLetContext.html",[66,0.101,1712,3.595]],["body/classes/NgLetContext.html",[2,0.069,3,0.058,4,0.047,6,0.477,7,1.142,13,0.807,14,0.009,15,0.604,34,0.087,37,0.007,38,0.007,50,1.829,51,2.466,53,0.231,55,0.432,66,0.177,78,1.208,87,2.885,94,2.157,115,3.124,123,1.498,146,1.542,240,1.77,357,2.048,729,5.731,732,5.731,916,3.626,1712,6.293,1713,6.888,1714,4.946,1715,7.244,1716,7.475,1717,5.595,1718,5.595,1719,4.946,1720,4.946,1721,4.946,1722,4.946,1723,4.946,1724,4.946,1725,4.946,1726,4.946]],["title/directives/NgLetDirective.html",[123,0.94,146,1.227]],["body/directives/NgLetDirective.html",[2,0.063,3,0.053,4,0.043,6,0.436,7,1.079,9,1.03,13,0.85,14,0.009,15,0.675,34,0.083,37,0.006,38,0.006,44,0.768,48,1.295,49,0.804,50,1.32,51,2.364,53,0.212,55,0.396,66,0.152,77,1.291,78,1.447,87,3.223,94,2.584,99,0.697,100,1.35,115,2.86,123,1.578,146,1.848,240,1.621,357,2.736,728,4.528,729,6.402,732,6.402,916,2.966,1156,5.032,1712,6.035,1713,7.272,1714,4.528,1715,4.528,1716,7.601,1719,7.007,1720,4.528,1721,4.528,1722,4.528,1723,5.926,1724,6.605,1725,4.528,1726,4.528,1727,5.122,1728,6.703,1729,5.122,1730,5.122]],["title/components/NotFoundComponent.html",[69,0.52,1731,3.595]],["body/components/NotFoundComponent.html",[2,0.054,3,0.063,4,0.037,6,0.374,8,4.262,9,0.675,13,0.5,14,0.008,15,0.589,34,0.054,37,0.006,38,0.006,44,0.659,48,0.848,49,0.893,53,0.182,55,0.339,56,1.157,66,0.1,69,0.912,71,1.326,72,1.326,73,1.107,75,1.457,76,2.136,77,1.107,78,1.915,79,2.198,81,1.784,84,1.305,85,2.302,99,0.823,100,1.822,119,1.296,120,0.793,121,1.825,122,1.784,123,1.276,124,2.249,125,1.326,126,1.296,127,1.296,128,1.825,129,1.267,130,1.326,131,1.296,132,1.238,133,1.326,134,1.267,135,1.296,136,1.238,137,1.326,138,1.238,139,1.326,140,1.21,141,1.326,142,1.296,143,1.326,144,1.238,145,1.326,146,1.21,147,1.326,148,1.238,149,1.296,150,1.326,187,1.868,197,1.493,301,4.033,303,5.343,712,5.343,722,6.11,725,6.583,801,4.262,1731,5.583,1732,6.583,1733,7.446,1734,6.583,1735,4.391,1736,7.446,1737,6.044,1738,6.044,1739,3.882,1740,6.583,1741,4.391,1742,5.343,1743,4.391,1744,4.391,1745,4.391,1746,6.044,1747,4.391,1748,6.044,1749,6.044,1750,6.044]],["title/modules/NotFoundModule.html",[225,0.768,1751,3.595]],["body/modules/NotFoundModule.html",[2,0.068,3,0.058,4,0.047,14,0.009,34,0.087,37,0.007,38,0.007,53,0.357,55,0.429,66,0.126,69,0.825,120,1.002,218,2.456,225,1.218,227,1.982,228,2.842,229,2.084,230,1.841,235,2.651,236,2.084,237,2.084,240,2.234,241,3.034,242,2.196,246,3.942,273,2.879,274,2.319,294,3.796,297,3.365,298,3.365,408,4.102,848,3.523,849,3.523,1731,7.076,1732,4.906,1734,4.906,1751,6.964,1752,5.549,1753,5.549,1754,5.549,1755,5.549,1756,5.549,1757,5.549]],["title/components/NotificationsComponent.html",[69,0.52,1758,3.595]],["body/components/NotificationsComponent.html",[2,0.047,3,0.057,4,0.033,6,0.328,7,0.887,9,0.591,13,0.438,14,0.009,15,0.694,34,0.047,37,0.005,38,0.005,44,0.966,48,0.744,49,0.843,50,0.992,51,1.218,53,0.159,55,0.297,56,1.015,66,0.088,69,0.869,71,1.163,72,1.163,73,0.97,75,1.329,76,1.99,77,0.97,78,1.874,79,2.283,81,1.626,84,1.19,85,2.172,87,2.857,94,2.124,99,1.013,100,1.96,102,1.523,115,3.077,119,1.136,120,0.695,121,1.664,122,1.626,123,1.164,124,2.122,125,1.163,126,1.136,127,1.136,128,1.664,129,1.11,130,1.163,131,1.136,132,1.085,133,1.163,134,1.11,135,1.136,136,1.085,137,1.163,138,1.085,139,1.163,140,1.061,141,1.163,142,1.136,143,1.163,144,1.085,145,1.163,146,1.061,147,1.163,148,1.085,149,1.136,150,1.163,187,1.703,429,2.767,432,4.955,1164,4.137,1413,4.084,1758,5.199,1759,3.849,1760,8.417,1761,5.511,1762,5.511,1763,5.511,1764,6.212,1765,6.212,1766,5.511,1767,3.849,1768,5.511,1769,3.849,1770,3.849,1771,3.849,1772,3.849,1773,3.849,1774,5.199,1775,5.511,1776,5.511,1777,5.511,1778,5.511,1779,4.451,1780,5.511,1781,3.849,1782,3.849,1783,5.511,1784,5.511,1785,5.511,1786,4.137,1787,3.849]],["title/modules/NxPipesModule.html",[225,0.768,1788,3.595]],["body/modules/NxPipesModule.html",[2,0.068,3,0.057,4,0.047,14,0.009,34,0.104,37,0.006,38,0.006,53,0.348,55,0.425,66,0.125,120,0.994,225,1.212,227,1.966,228,2.831,229,2.068,230,1.827,235,2.638,236,2.068,237,2.068,240,2.222,241,3.019,242,2.179,653,1.588,658,7.324,659,4.446,1788,7.277,1789,5.505,1790,5.505,1791,5.505,1792,7.324,1793,5.505,1794,5.505,1795,5.505,1796,5.505,1797,7.733]],["title/components/OverviewComponent.html",[69,0.52,869,3.595]],["body/components/OverviewComponent.html",[2,0.047,3,0.057,4,0.032,6,0.324,7,0.879,9,0.584,13,0.795,14,0.009,15,0.63,34,0.047,37,0.005,38,0.005,44,0.57,48,0.734,49,0.924,50,0.979,51,1.202,53,0.319,55,0.294,56,1.001,62,1.611,63,1.649,66,0.086,69,0.865,71,1.148,72,1.148,73,0.958,75,1.317,76,1.975,77,0.958,78,1.87,79,2.273,81,1.611,84,1.179,85,2.159,99,0.517,100,1.001,119,1.121,120,0.686,121,1.649,122,1.611,123,1.153,124,2.11,125,1.148,126,1.121,127,1.121,128,1.649,129,1.096,130,1.148,131,1.121,132,1.071,133,1.148,134,1.096,135,2.184,136,1.071,137,1.148,138,1.071,139,1.148,140,1.047,141,1.148,142,1.121,143,1.148,144,1.071,145,1.148,146,1.047,147,1.148,148,1.071,149,1.121,150,1.148,187,1.688,197,1.292,215,3.85,258,4.812,259,2.043,278,1.786,301,4.661,330,3.359,331,5.432,341,2.535,342,2.535,343,1.545,400,2.535,426,5.642,427,4.661,432,4.506,619,6.096,624,3.173,803,2.412,869,5.161,884,3.069,1297,3.359,1798,3.8,1799,5.459,1800,5.459,1801,5.459,1802,3.8,1803,3.8,1804,3.8,1805,3.359,1806,5.642]],["title/injectables/PageTitleService.html",[39,1.408,772,3.341]],["body/injectables/PageTitleService.html",[2,0.061,3,0.051,4,0.042,6,0.42,7,1.052,9,1.004,13,0.834,14,0.009,15,0.665,17,1.843,34,0.061,37,0.006,38,0.006,39,2.319,44,0.739,48,1.262,49,0.784,50,1.27,51,1.559,53,0.27,55,0.381,66,0.112,90,5.498,99,0.89,100,1.298,115,4.093,197,1.674,199,5.775,283,3.474,284,2.987,296,4.359,301,4.359,772,4.904,788,7.181,801,4.607,1037,4.904,1156,4.904,1658,5.775,1807,8.122,1808,4.926,1809,4.355,1810,6.533,1811,7.806,1812,4.926,1813,4.926,1814,6.533,1815,4.926,1816,4.926,1817,4.926,1818,4.926,1819,4.926,1820,6.533,1821,4.926,1822,4.926]],["title/classes/ProfileLoaded.html",[66,0.101,386,2.485]],["body/classes/ProfileLoaded.html",[2,0.068,3,0.057,4,0.047,14,0.009,17,1.218,34,0.111,37,0.007,38,0.007,42,3.143,66,0.205,174,3.333,175,2.768,344,2.594,365,3.082,367,2.968,368,3.082,369,3.519,371,4.164,374,3.928,375,3.082,376,3.082,377,3.928,378,2.86,379,2.678,380,3.082,381,2.968,382,3.208,383,2.968,384,2.968,385,2.968,386,3.928]],["title/components/QuickpanelComponent.html",[69,0.52,1823,3.595]],["body/components/QuickpanelComponent.html",[2,0.029,3,0.039,4,0.02,6,0.2,7,0.609,13,0.619,14,0.009,15,0.543,34,0.029,36,3.486,37,0.003,38,0.003,44,0.712,49,0.569,50,1.402,51,1.722,53,0.156,55,0.182,56,0.619,66,0.053,69,0.697,71,0.709,72,0.709,73,0.592,75,0.912,76,1.467,77,0.592,78,1.687,79,1.881,81,1.116,84,0.816,85,1.682,90,4.917,94,1.458,99,0.32,100,0.619,116,2.839,119,0.693,120,0.424,121,1.142,122,1.116,123,0.799,124,1.643,125,0.709,126,0.693,127,0.693,128,1.142,129,0.678,130,0.709,131,0.693,132,0.662,133,0.709,134,0.678,135,0.693,136,0.662,137,0.709,138,0.662,139,0.709,140,0.647,141,0.709,142,0.693,143,0.709,144,0.662,145,0.709,146,0.647,147,0.709,148,0.662,149,0.693,150,0.709,159,2.839,162,2.523,163,6.228,164,2.38,187,1.169,198,3.054,256,4.084,275,2.523,278,1.777,340,2.293,346,2.666,505,3.343,683,3.703,737,6.799,833,2.293,997,3.054,1066,6.2,1505,2.4,1823,3.834,1824,2.349,1825,3.343,1826,3.781,1827,3.781,1828,7.69,1829,5.441,1830,2.349,1831,2.349,1832,3.781,1833,5.441,1834,6.97,1835,6.97,1836,3.343,1837,3.781,1838,3.781,1839,5.441,1840,3.781,1841,4.394,1842,3.781,1843,2.349,1844,3.781,1845,7.69,1846,3.781,1847,3.781,1848,7.69,1849,3.781,1850,3.781,1851,3.781,1852,3.781,1853,3.781,1854,3.781,1855,3.781,1856,3.781,1857,3.781,1858,3.781,1859,3.781,1860,5.441,1861,3.781,1862,3.781,1863,3.781,1864,3.781,1865,2.349,1866,3.781,1867,2.349,1868,3.781,1869,6.97,1870,6.97,1871,6.162,1872,3.781,1873,3.781,1874,3.781,1875,3.781,1876,2.349,1877,2.349,1878,2.349,1879,2.349,1880,2.349,1881,3.781,1882,3.781,1883,3.781,1884,3.781,1885,3.781,1886,3.781,1887,3.781,1888,3.781,1889,3.781,1890,3.781,1891,3.054,1892,3.781,1893,5.441,1894,3.781,1895,2.839,1896,3.781,1897,2.349,1898,2.349,1899,2.349,1900,2.349]],["title/modules/QuickpanelModule.html",[225,0.768,872,3.341]],["body/modules/QuickpanelModule.html",[2,0.064,3,0.054,4,0.044,14,0.009,34,0.098,37,0.006,38,0.006,53,0.366,55,0.402,62,1.535,63,1.57,66,0.118,120,0.939,218,2.301,225,1.168,227,1.857,228,2.756,229,1.953,230,1.725,235,2.542,236,1.953,237,1.953,240,2.142,241,2.91,242,2.058,246,2.903,247,4.104,248,2.903,249,2.698,408,3.022,800,3.3,872,6.64,1194,5.654,1197,4.2,1543,5.467,1579,5.081,1580,3.903,1587,5.467,1593,5.984,1823,7.304,1901,5.199,1902,5.199,1903,5.199,1904,5.199,1905,5.199,1906,5.199,1907,5.081,1908,3.666,1909,3.3]],["title/injectables/ROPCService.html",[39,1.408,392,3.595]],["body/injectables/ROPCService.html",[2,0.055,3,0.046,4,0.038,6,0.381,9,0.941,13,0.794,14,0.009,15,0.595,17,1.792,34,0.055,37,0.006,38,0.006,39,2.375,44,0.672,45,3.958,46,6.557,48,1.183,49,0.735,53,0.311,54,3.157,55,0.346,66,0.102,84,1.322,94,2.361,99,1.071,197,1.522,210,2.041,278,2.104,289,2.714,290,2.714,331,5.86,341,2.987,342,2.987,344,2.879,357,1.639,358,3.157,361,4.598,379,3.642,392,4.947,427,4.087,653,2.166,916,1.981,923,4.598,1070,3.958,1128,3.958,1439,3.958,1505,2.842,1910,4.476,1911,4.476,1912,6.125,1913,7.507,1914,4.476,1915,4.476,1916,4.476,1917,4.476,1918,4.476,1919,4.476,1920,4.476,1921,4.476,1922,4.476,1923,4.476,1924,6.125,1925,6.125,1926,6.125,1927,4.476,1928,6.982,1929,3.616,1930,4.476,1931,4.476,1932,4.476,1933,6.125,1934,6.125,1935,6.125,1936,4.476,1937,4.476,1938,4.476,1939,4.476,1940,4.476,1941,4.476,1942,4.476,1943,4.476,1944,4.476]],["title/components/RainbowComponent.html",[69,0.52,132,1.255]],["body/components/RainbowComponent.html",[2,0.058,3,0.066,4,0.04,6,0.399,7,1.016,14,0.008,15,0.609,34,0.058,37,0.006,38,0.006,44,1.072,49,0.857,50,1.206,51,1.481,53,0.194,55,0.362,56,1.233,66,0.106,69,0.933,71,1.413,72,1.413,73,1.18,75,1.522,76,2.208,77,1.18,78,1.934,79,2.428,81,1.863,84,1.363,85,2.364,94,2.433,99,0.637,100,1.233,107,2.498,119,1.381,120,0.845,121,1.907,122,1.863,123,1.333,124,2.309,125,1.413,126,1.381,127,1.381,128,1.907,129,1.35,130,1.413,131,1.381,132,2.156,133,1.413,134,1.35,135,1.381,136,1.32,137,1.413,138,1.32,139,1.413,140,1.29,141,1.413,142,1.381,143,1.413,144,1.32,145,1.413,146,1.29,147,1.413,148,1.32,149,1.381,150,1.413,187,1.951,953,5.099,1786,4.739,1945,4.68,1946,5.581,1947,5.581,1948,5.581,1949,6.176,1950,6.312,1951,4.68,1952,5.581,1953,5.581,1954,5.099,1955,5.581,1956,5.581]],["title/components/RainbowComponent-1.html",[69,0.433,132,1.044,1363,2.068]],["body/components/RainbowComponent-1.html",[2,0.058,3,0.065,4,0.039,6,0.398,7,1.015,14,0.008,15,0.608,34,0.058,37,0.006,38,0.006,44,1.07,49,0.856,50,1.204,51,1.477,53,0.193,55,0.361,56,1.231,66,0.106,69,0.932,71,1.41,72,1.41,73,1.177,75,1.52,76,2.206,77,1.177,78,1.933,79,2.426,81,1.86,84,1.361,85,2.361,94,2.43,99,0.636,100,1.231,107,2.495,119,1.378,120,0.843,121,1.904,122,1.86,123,1.331,124,2.307,125,1.41,126,1.378,127,1.378,128,1.904,129,1.347,130,1.41,131,1.378,132,2.154,133,1.41,134,1.347,135,1.378,136,1.317,137,1.41,138,1.317,139,1.41,140,1.287,141,1.41,142,1.378,143,1.41,144,1.317,145,1.41,146,1.287,147,1.41,148,1.317,149,1.378,150,1.41,187,1.948,953,5.091,1363,2.607,1786,4.731,1946,5.572,1947,5.572,1948,5.572,1949,6.17,1952,5.572,1953,5.572,1954,5.091,1955,5.572,1956,5.572,1957,4.669,1958,6.303,1959,4.669]],["title/components/RecentSalesComponent.html",[69,0.52,1960,3.595]],["body/components/RecentSalesComponent.html",[2,0.042,3,0.052,4,0.029,6,0.288,7,0.807,9,0.52,13,0.841,14,0.009,15,0.63,34,0.042,37,0.005,38,0.005,39,1.07,44,0.507,48,0.653,49,0.793,51,1.587,53,0.273,55,0.261,56,0.891,66,0.077,69,0.825,71,1.021,72,1.021,73,0.852,75,1.209,76,1.847,77,0.852,78,1.83,79,2.182,81,1.48,84,1.083,85,2.043,87,2.43,96,6.349,99,0.961,100,0.891,102,2.365,107,1.338,119,0.998,120,0.611,121,1.514,122,1.48,123,1.059,124,1.996,125,1.021,126,0.998,127,0.998,128,1.514,129,0.976,130,1.021,131,1.48,132,0.954,133,1.021,134,0.976,135,0.998,136,0.954,137,1.021,138,0.954,139,1.021,140,0.932,141,1.021,142,0.998,143,1.021,144,0.954,145,1.021,146,0.932,147,1.021,148,0.954,149,0.998,150,1.021,162,3.346,165,3.663,187,1.55,653,1.724,755,2.256,758,2.147,853,4.484,859,4.869,1066,3.764,1091,2.731,1454,2.731,1469,4.214,1483,2.385,1486,3.536,1496,2.385,1498,2.256,1500,2.385,1501,2.385,1504,2.385,1505,2.147,1506,4.214,1507,2.385,1508,2.385,1509,2.385,1510,2.385,1511,2.385,1513,2.385,1518,2.385,1695,4.433,1871,4.433,1960,4.827,1961,7.654,1962,7.654,1963,3.382,1964,7.654,1965,5.014,1966,5.014,1967,5.283,1968,2.99,1969,5.014,1970,3.382,1971,3.382,1972,3.382,1973,3.382,1974,3.382,1975,3.382,1976,3.382,1977,2.99,1978,2.99,1979,3.382,1980,2.99,1981,5.014,1982,3.382,1983,2.539,1984,2.539,1985,2.539,1986,2.539,1987,2.539,1988,2.539,1989,3.382,1990,3.382,1991,3.382,1992,3.382,1993,2.539,1994,3.382,1995,5.014,1996,5.014,1997,3.382,1998,5.014,1999,3.382]],["title/interfaces/RouterStateModel.html",[0,1.284,1209,3.341]],["body/interfaces/RouterStateModel.html",[0,1.603,2,0.048,3,0.04,4,0.033,6,0.332,7,0.894,9,1.193,13,0.804,14,0.009,15,0.602,17,1.43,34,0.087,36,2.388,37,0.005,38,0.005,42,2.141,49,0.467,50,1.003,53,0.292,56,1.464,60,2.361,66,0.147,94,1.501,99,0.962,174,2.199,197,1.323,201,2.745,210,3.644,259,2.093,274,1.627,294,4.537,332,3.044,338,4.17,340,4.709,343,1.583,357,2.034,369,3.246,378,2.259,433,3.617,446,2.174,451,3.102,653,1.123,657,2.361,683,2.262,807,2.922,1067,2.745,1093,5.83,1117,2.745,1198,4.17,1199,3.144,1203,4.17,1204,6.033,1205,4.487,1206,4.487,1207,3.144,1208,3.144,1209,4.862,1210,6.718,1211,4.862,1212,4.487,1213,3.144,1214,5.232,1215,3.144,1216,3.144,1217,3.144,1218,3.144,1219,3.144,1220,3.144,1221,4.487,1222,3.144,1223,3.144,1224,3.144,1225,4.487,1226,3.144,1227,3.144,1228,3.144,1229,3.144,1230,3.144,1231,3.144,1232,3.144,1233,3.144,1234,3.144,1235,3.144,1236,3.144,2000,3.893,2001,3.893,2002,3.893,2003,3.893]],["title/modules/ScrollToTopModule.html",[225,0.768,1326,3.341]],["body/modules/ScrollToTopModule.html",[2,0.07,3,0.059,4,0.048,14,0.009,34,0.102,37,0.007,38,0.007,53,0.352,55,0.442,66,0.13,120,1.033,218,2.531,225,1.241,227,2.042,228,2.882,229,2.148,230,1.898,235,2.702,236,2.148,237,2.148,240,2.276,241,3.093,242,2.263,246,4.017,408,4.181,802,4.619,1326,6.62,1594,5.401,2004,5.719,2005,5.719,2006,5.719,2007,9.164,2008,5.056,2009,5.056,2010,5.719,2011,5.719]],["title/components/ScrollbarComponent.html",[69,0.52,2012,3.595]],["body/components/ScrollbarComponent.html",[2,0.053,3,0.062,4,0.036,6,0.367,7,0.96,9,1.135,13,0.779,14,0.009,15,0.629,34,0.053,37,0.006,38,0.006,44,0.646,48,0.832,49,0.886,53,0.283,55,0.333,56,1.135,66,0.098,69,0.906,71,1.301,72,1.301,73,1.086,75,1.439,76,2.115,77,1.086,78,1.91,79,2.368,81,1.761,84,1.288,85,2.283,99,0.587,100,1.135,119,1.271,120,0.778,121,1.802,122,2.368,123,1.26,124,2.231,125,1.301,126,1.271,127,1.271,128,1.802,129,1.243,130,1.301,131,1.271,132,1.215,133,1.301,134,1.243,135,1.271,136,1.215,137,1.301,138,1.215,139,1.301,140,1.188,141,1.301,142,1.271,143,1.301,144,1.215,145,1.301,146,1.188,147,1.301,148,1.215,149,1.271,150,1.301,187,1.844,197,1.464,357,1.577,653,1.243,680,5.488,1909,5.322,2012,5.527,2013,4.308,2014,5.965,2015,5.965,2016,6.53,2017,3.809,2018,6.049,2019,6.53,2020,5.965,2021,5.274,2022,4.308,2023,4.308,2024,3.48,2025,5.274,2026,4.308,2027,4.308,2028,3.809,2029,3.809,2030,4.308]],["title/directives/ScrollbarDirective.html",[123,0.94,148,1.255]],["body/directives/ScrollbarDirective.html",[2,0.062,3,0.052,4,0.043,6,0.43,7,1.069,9,1.291,13,0.844,14,0.009,15,0.671,34,0.062,37,0.006,38,0.006,44,0.757,48,0.975,49,0.605,53,0.326,55,0.39,66,0.115,75,1.601,77,1.272,78,1.433,84,1.433,87,3.016,99,0.687,100,1.33,123,1.566,148,1.872,149,2.326,197,1.715,357,1.848,653,1.915,680,5.258,933,5.868,1909,5.335,2016,6.967,2017,4.462,2018,6.558,2019,6.967,2021,5.868,2024,5.362,2025,6.967,2028,4.462,2029,4.462,2031,5.047,2032,7.417,2033,7.88,2034,6.638,2035,5.047,2036,5.047,2037,5.047,2038,5.047,2039,5.047,2040,5.047,2041,5.047]],["title/modules/ScrollbarModule.html",[225,0.768,2042,3.341]],["body/modules/ScrollbarModule.html",[2,0.069,3,0.058,4,0.047,14,0.009,34,0.101,37,0.007,38,0.007,53,0.35,55,0.432,66,0.127,120,1.01,148,2.576,225,1.224,227,1.998,228,2.853,229,2.101,230,1.856,235,2.665,236,2.101,237,2.101,240,2.245,241,3.05,242,2.214,2012,7.38,2042,6.781,2043,5.595,2044,5.595,2045,5.595,2046,5.595,2047,5.595,2048,5.595]],["title/components/SearchBarComponent.html",[69,0.52,2049,3.595]],["body/components/SearchBarComponent.html",[2,0.041,3,0.051,4,0.028,6,0.502,7,0.794,9,0.508,13,0.744,14,0.009,15,0.647,17,1.302,34,0.041,37,0.006,38,0.005,44,0.496,48,0.639,49,0.784,50,0.852,51,1.046,53,0.244,55,0.255,56,0.871,62,0.976,63,0.998,66,0.075,69,0.817,71,0.998,72,0.998,73,0.833,75,1.189,76,1.823,77,0.833,78,1.822,79,2.164,81,1.455,84,1.065,85,2.021,87,2.981,96,3.982,99,0.803,100,1.554,102,1.308,107,1.308,119,0.976,120,0.597,121,1.489,122,1.455,123,1.041,124,1.974,125,0.998,126,0.976,127,0.976,128,1.489,129,0.954,130,0.998,131,0.976,132,0.932,133,0.998,134,0.954,135,2.064,136,0.932,137,0.998,138,0.932,139,0.998,140,0.911,141,0.998,142,0.976,143,0.998,144,0.932,145,0.998,146,0.911,147,0.998,148,0.932,149,0.976,150,0.998,187,1.524,197,1.124,274,1.382,296,4.361,301,4.361,340,4.446,357,1.21,427,4.361,429,2.535,653,1.422,683,1.921,806,2.67,850,5.28,1117,2.331,1203,3.701,1363,2.753,1383,3.515,1386,3.964,1405,2.865,1686,4.359,1806,6.744,1891,5.28,2049,4.763,2050,7.808,2051,6.903,2052,3.306,2053,4.93,2054,4.93,2055,4.93,2056,6.537,2057,6.537,2058,6.537,2059,6.537,2060,3.306,2061,5.896,2062,4.93,2063,3.306,2064,3.306,2065,3.306,2066,3.306,2067,3.306,2068,3.306,2069,3.306,2070,3.306,2071,3.306,2072,3.306,2073,3.306,2074,3.306,2075,3.306,2076,4.93,2077,4.93,2078,5.779,2079,4.93,2080,4.93]],["title/components/SearchComponent.html",[69,0.52,2081,3.595]],["body/components/SearchComponent.html",[2,0.052,3,0.061,4,0.036,6,0.36,7,0.948,9,0.65,13,0.771,14,0.009,15,0.68,34,0.052,37,0.005,38,0.005,44,0.634,48,0.817,49,0.879,53,0.175,55,0.327,56,1.115,66,0.096,69,0.9,71,1.277,72,1.277,73,1.066,75,1.42,76,2.094,77,1.066,78,1.904,79,2.354,81,1.738,84,1.271,85,2.265,87,2.979,99,0.923,100,1.786,102,1.674,107,1.674,108,2.457,119,1.248,120,0.764,121,1.778,122,1.738,123,1.244,124,2.213,125,1.277,126,1.248,127,1.248,128,1.778,129,1.22,130,1.277,131,1.248,132,1.192,133,1.277,134,1.22,135,1.248,136,1.192,137,1.277,138,1.192,139,1.277,140,1.166,141,1.277,142,1.248,143,1.277,144,1.192,145,1.277,146,1.166,147,1.277,148,1.192,149,1.248,150,1.277,187,1.82,197,1.437,215,2.982,429,2.913,680,4.889,1091,3.415,1413,4.258,1739,3.738,1740,6.477,1742,5.206,1774,4.756,1786,5.5,1806,5.918,2081,5.472,2082,4.228,2083,5.888,2084,5.888,2085,7.327,2086,5.888,2087,4.228,2088,4.228,2089,4.228,2090,5.888,2091,4.228,2092,4.228,2093,4.228]],["title/injectables/ServiceWorkerService.html",[39,1.408,191,3.341]],["body/injectables/ServiceWorkerService.html",[2,0.063,3,0.053,4,0.043,6,0.433,9,0.781,13,0.578,14,0.009,15,0.568,34,0.063,37,0.006,38,0.006,39,2.356,44,0.763,48,0.982,49,0.61,53,0.308,55,0.393,66,0.116,84,1.44,86,3.585,94,2.87,99,0.692,100,1.758,110,4.106,191,5.007,197,1.728,198,4.106,200,5.007,201,5.249,288,4.106,289,3.083,290,3.083,317,4.106,357,1.861,767,4.495,791,6.581,833,3.083,1010,5.007,1135,5.007,1142,4.106,1836,4.495,1949,6.802,1954,4.106,2094,7.444,2095,5.084,2096,7.903,2097,5.084,2098,5.084,2099,5.084,2100,5.084,2101,5.084,2102,5.897,2103,5.084,2104,5.084,2105,5.084,2106,5.084,2107,5.084,2108,5.084,2109,5.084,2110,5.084,2111,5.084]],["title/classes/SetIconMode.html",[66,0.101,1390,2.825]],["body/classes/SetIconMode.html",[0,0.94,2,0.04,3,0.034,4,0.028,6,0.278,7,0.785,9,0.501,13,0.555,14,0.009,15,0.416,17,0.719,34,0.093,36,2.097,37,0.005,38,0.005,42,2.915,44,0.489,48,0.63,49,0.585,50,0.84,53,0.269,62,0.962,63,0.984,66,0.172,73,1.96,78,1.262,99,0.946,102,1.931,108,1.894,153,1.658,174,2.751,197,1.108,332,2.748,343,1.325,357,1.786,364,1.894,369,3.67,370,1.691,378,1.325,419,2.446,429,3.136,433,4.073,446,4.073,447,4.936,451,2.724,653,2.005,703,1.634,805,2.069,916,1.442,1363,2.724,1379,3.711,1380,2.174,1383,4.066,1384,2.069,1385,2.069,1386,3.545,1387,2.069,1388,2.069,1389,3.711,1390,4.12,1391,3.711,1392,3.711,1393,3.711,1394,5.669,1395,4.331,1396,2.174,1397,2.174,1398,2.174,1399,2.174,1400,2.174,1401,2.174,1402,2.174,1403,2.174,1404,2.174,1405,4.239,1406,3.255,1407,2.174,1408,2.174,1409,2.174,1410,2.174,1411,2.174,1412,2.174,1413,2.835,1414,3.255,1415,3.255,1416,3.255,1417,2.174,1418,2.174,1419,1.894,1420,1.976,2112,3.259,2113,3.259]],["title/modules/SharedModule.html",[225,0.768,841,2.586]],["body/modules/SharedModule.html",[2,0.049,3,0.041,4,0.034,14,0.009,34,0.088,37,0.005,38,0.005,53,0.364,55,0.308,62,1.938,63,1.983,66,0.091,69,0.767,107,2.238,118,2.663,120,0.721,123,1.387,144,2.419,146,2.365,225,0.976,227,1.425,228,2.404,229,1.499,230,2.179,235,2.124,236,1.499,237,1.499,240,1.789,241,2.823,242,1.58,247,3.982,248,2.229,249,2.071,273,2.934,274,1.668,411,4.999,412,2.814,653,1.894,800,2.533,841,5.258,1151,6.93,1189,6.109,1194,5.78,1197,4.567,1548,6.044,1568,2.996,1907,4.929,1908,2.814,1909,2.533,1929,3.224,2114,3.991,2115,3.991,2116,3.991,2117,3.991,2118,3.991,2119,3.528,2120,4.999,2121,3.991,2122,3.991,2123,3.991,2124,3.991,2125,5.654,2126,5.654,2127,5.654,2128,3.991,2129,3.991]],["title/modules/SidenavModule.html",[225,0.768,870,3.341]],["body/modules/SidenavModule.html",[2,0.055,3,0.047,4,0.038,14,0.009,34,0.093,37,0.006,38,0.006,53,0.368,55,0.347,62,1.327,63,1.358,66,0.102,120,0.812,142,2.61,218,1.989,225,1.06,227,1.605,228,2.562,229,1.689,230,1.492,235,2.307,236,1.689,237,1.689,240,1.944,241,2.641,242,1.779,246,3.43,247,3.725,248,2.511,249,2.333,273,3.187,274,1.879,408,3.57,410,4.612,800,2.854,870,6.787,1575,5.431,1579,4.612,1585,4.962,1587,4.962,1660,6.565,1662,3.975,1907,4.612,1908,3.17,1909,2.854,2042,6.102,2130,4.496,2131,4.496,2132,4.496,2133,4.496,2134,8.128,2135,8.843,2136,4.496,2137,4.496,2138,6.143,2139,4.496,2140,4.496,2141,4.496,2142,4.496,2143,4.496,2144,4.496,2145,4.496]],["title/components/SourceOverviewWidgetComponent.html",[69,0.52,134,1.284]],["body/components/SourceOverviewWidgetComponent.html",[2,0.072,3,0.081,4,0.028,6,0.28,7,0.79,9,1.001,13,0.832,14,0.009,15,0.623,34,0.04,37,0.005,38,0.005,44,0.493,48,0.635,49,0.782,53,0.203,55,0.254,56,0.866,66,0.075,69,0.815,71,0.992,72,0.992,73,0.828,75,1.183,76,1.816,77,0.828,78,1.82,79,2.159,81,1.448,84,1.059,85,2.014,87,2.388,99,0.887,100,0.866,102,2.325,107,1.3,111,3.963,115,3.639,116,4.891,117,3.963,118,3.274,119,2.058,120,0.593,121,1.482,122,1.448,123,1.036,124,1.968,125,0.992,126,0.969,127,0.969,128,1.482,129,0.948,130,0.992,131,1.448,132,0.926,133,0.992,134,1.88,135,2.618,136,0.926,137,0.992,138,0.926,139,0.992,140,0.906,141,0.992,142,0.969,143,0.992,144,0.926,145,0.992,146,0.906,147,0.992,148,0.926,149,0.969,150,0.992,164,2.46,165,3.618,187,1.517,653,0.948,667,2.653,755,2.192,758,2.085,853,3.951,859,4.831,1463,6.124,1466,2.904,1467,4.338,1468,4.338,1469,4.595,1473,3.963,1475,2.653,1476,2.904,1477,2.904,1479,2.904,1480,4.338,1483,2.316,1485,2.653,1486,3.46,1487,2.653,1496,2.316,1498,2.192,1500,2.316,1501,2.316,1504,2.316,1505,2.085,1506,4.142,1507,2.316,1508,2.316,1509,2.316,1510,2.316,1511,2.316,1513,2.316,1518,2.316,1519,2.653,1520,2.653,1522,3.963,1523,3.684,1983,2.466,1984,2.466,1985,2.466,1986,2.466,1987,2.466,1988,2.466,1993,2.466,2146,7.581,2147,7.581,2148,5.874,2149,4.907,2150,3.285,2151,3.285,2152,2.904,2153,2.653,2154,2.653,2155,4.907,2156,4.907]],["title/injectables/StyleManagerService.html",[39,1.408,2157,3.595]],["body/injectables/StyleManagerService.html",[2,0.056,3,0.047,4,0.039,6,0.389,9,0.954,13,0.706,14,0.009,15,0.529,17,1.97,34,0.056,37,0.006,38,0.006,39,2.232,48,1.199,49,0.908,53,0.189,55,0.353,66,0.16,84,1.34,99,1.112,100,1.636,115,3.467,118,5.05,346,5.337,653,1.791,833,3.764,891,5.295,895,6.114,920,5.303,1044,6.236,1142,5.014,1170,3.688,1602,4.66,1809,4.036,2157,5.014,2158,7.053,2159,4.566,2160,8.619,2161,6.208,2162,6.208,2163,6.208,2164,6.208,2165,4.566,2166,7.569,2167,6.208,2168,4.566,2169,4.566,2170,6.208,2171,7.053,2172,4.566,2173,4.566,2174,6.208,2175,4.566,2176,6.208,2177,4.566,2178,4.566,2179,4.566,2180,4.566,2181,4.566]],["title/classes/SvgViewerConfig.html",[66,0.101,2182,3.341]],["body/classes/SvgViewerConfig.html",[2,0.071,3,0.06,4,0.049,6,0.49,7,1.162,9,1.212,13,0.654,14,0.009,15,0.49,17,1.827,34,0.089,37,0.007,38,0.007,39,1.82,44,0.863,53,0.299,55,0.444,66,0.18,67,3.837,242,2.276,916,3.195,1074,6.685,2182,5.924,2183,5.831,2184,5.831,2185,5.084,2186,5.751,2187,6.382,2188,5.084,2189,4.317,2190,5.084,2191,6.976,2192,6.382,2193,5.084,2194,6.382,2195,5.084]],["title/classes/SvgViewerDefaultConfig.html",[66,0.101,2189,3.341]],["body/classes/SvgViewerDefaultConfig.html",[2,0.067,3,0.057,4,0.046,6,0.464,7,1.123,9,1.246,13,0.794,14,0.009,15,0.594,17,1.894,34,0.086,37,0.006,38,0.006,39,1.724,44,1.046,48,1.052,49,0.653,53,0.289,55,0.421,66,0.175,67,4.654,242,2.156,916,3.086,1074,6.553,2182,6.09,2183,5.634,2184,5.634,2185,4.815,2187,7.172,2188,4.815,2189,5.236,2190,4.815,2191,7.172,2192,7.172,2193,4.815,2194,6.166,2195,4.815,2196,5.447,2197,5.447,2198,5.447,2199,5.447]],["title/modules/SvgViewerModule.html",[225,0.768,1328,3.341]],["body/modules/SvgViewerModule.html",[2,0.063,3,0.053,4,0.043,14,0.009,34,0.097,37,0.006,38,0.006,53,0.349,55,0.394,66,0.116,99,0.694,120,0.92,225,1.153,227,1.82,228,2.729,229,1.914,230,2.796,235,2.509,236,1.914,237,1.914,240,2.358,241,2.872,242,2.017,396,5.396,419,2.555,828,3.826,1328,6.676,1568,3.826,2182,5.938,2183,4.117,2184,4.117,2189,5.015,2200,5.096,2201,5.096,2202,5.096,2203,5.096,2204,9.108,2205,8.588,2206,5.096,2207,6.589,2208,5.096,2209,5.096,2210,5.096,2211,5.096,2212,3.826]],["title/modules/ThemePickerModule.html",[225,0.768,1327,3.341]],["body/modules/ThemePickerModule.html",[2,0.064,3,0.054,4,0.044,14,0.009,34,0.098,37,0.006,38,0.006,53,0.357,55,0.403,66,0.119,120,0.941,218,2.307,225,1.17,227,1.861,228,2.759,229,1.958,230,2.5,235,2.547,236,1.958,237,1.958,240,2.145,241,2.915,242,2.063,246,3.786,408,3.94,891,3.913,892,4.21,904,6.366,906,5.09,1170,4.21,1327,6.75,1578,5.476,1580,5.09,1594,5.09,2157,6.849,2213,5.212,2214,5.212,2215,5.212,2216,5.212,2217,9.047,2218,5.212,2219,5.212,2220,5.212,2221,5.212]],["title/injectables/ThemeStorageService.html",[39,1.408,904,3.341]],["body/injectables/ThemeStorageService.html",[0,1.35,2,0.058,3,0.049,4,0.04,6,0.399,7,1.016,9,0.719,13,0.813,14,0.009,15,0.68,17,1.762,34,0.078,37,0.006,38,0.006,39,2.26,48,0.904,49,0.561,50,1.971,51,1.997,53,0.194,55,0.362,66,0.106,84,1.363,94,2.433,99,1.041,100,1.664,153,3.025,419,3.582,429,2.714,684,6.175,890,6.644,891,6.175,892,6.644,893,4.137,894,4.137,895,3.78,896,4.137,897,4.137,898,4.137,904,4.739,905,6.76,906,5.362,907,5.581,908,4.451,909,6.76,910,5.581,911,4.137,912,4.137,913,4.137,914,6.76,915,4.137,916,2.071,917,6.76,918,4.137,2222,6.312,2223,4.68,2224,4.68,2225,4.68,2226,4.68,2227,4.68]],["title/classes/ToggleCurrentlyOpened.html",[66,0.101,1391,2.825]],["body/classes/ToggleCurrentlyOpened.html",[0,0.94,2,0.04,3,0.034,4,0.028,6,0.278,7,0.785,9,0.501,13,0.555,14,0.009,15,0.416,17,0.719,34,0.093,36,2.097,37,0.005,38,0.005,42,2.915,44,0.489,48,0.63,49,0.585,50,0.84,53,0.269,62,0.962,63,0.984,66,0.172,73,1.96,78,1.262,99,0.946,102,1.931,108,1.894,153,1.658,174,2.751,197,1.108,332,2.748,343,1.325,357,1.786,364,1.894,369,3.67,370,1.691,378,1.325,419,2.446,429,2.097,433,4.073,446,4.073,447,4.936,451,2.724,653,2.005,703,1.634,805,2.069,916,1.442,1363,2.724,1379,3.711,1380,2.174,1383,4.42,1384,2.069,1385,2.069,1386,3.545,1387,2.069,1388,2.069,1389,3.711,1390,3.711,1391,4.12,1392,3.711,1393,3.711,1394,5.669,1395,4.331,1396,2.174,1397,2.174,1398,2.174,1399,2.174,1400,2.174,1401,2.174,1402,2.174,1403,2.174,1404,2.174,1405,4.239,1406,3.255,1407,2.174,1408,2.174,1409,2.174,1410,2.174,1411,2.174,1412,2.174,1413,2.835,1414,3.255,1415,3.255,1416,3.255,1417,2.174,1418,2.174,1419,1.894,1420,1.976,2228,3.259,2229,3.259]],["title/classes/ToggleCurrentlyOpenedByRoute.html",[66,0.101,1392,2.825]],["body/classes/ToggleCurrentlyOpenedByRoute.html",[0,0.94,2,0.04,3,0.034,4,0.028,6,0.278,7,0.785,9,0.501,13,0.555,14,0.009,15,0.416,17,1.534,34,0.093,36,2.097,37,0.005,38,0.005,42,2.915,44,0.489,48,0.63,49,0.585,50,0.84,53,0.269,62,0.962,63,0.984,66,0.172,73,1.96,78,1.262,99,0.946,102,1.931,108,1.894,153,1.658,174,2.751,197,1.108,332,2.748,343,1.325,357,1.786,364,1.894,369,3.67,370,1.691,378,1.325,419,2.446,429,2.097,433,4.073,446,4.073,447,4.936,451,2.724,653,2.005,703,1.634,805,2.069,916,1.442,1363,2.724,1379,3.711,1380,2.174,1383,4.066,1384,2.069,1385,2.069,1386,3.545,1387,2.069,1388,2.069,1389,3.711,1390,3.711,1391,3.711,1392,4.12,1393,3.711,1394,5.669,1395,4.331,1396,2.174,1397,2.174,1398,2.174,1399,2.174,1400,2.174,1401,2.174,1402,2.174,1403,2.174,1404,2.174,1405,4.239,1406,3.255,1407,2.174,1408,2.174,1409,2.174,1410,2.174,1411,2.174,1412,2.174,1413,2.835,1414,3.255,1415,3.255,1416,3.255,1417,2.174,1418,2.174,1419,1.894,1420,1.976,2230,3.259,2231,3.259]],["title/components/ToolbarComponent.html",[69,0.52,2232,3.595]],["body/components/ToolbarComponent.html",[2,0.05,3,0.059,4,0.034,6,0.345,7,0.919,13,0.753,14,0.009,15,0.703,34,0.05,37,0.005,38,0.005,44,0.993,49,0.794,50,1.705,51,2.093,53,0.314,55,0.313,56,1.066,62,1.194,63,1.222,66,0.092,69,0.885,71,1.222,72,1.222,73,1.02,75,1.377,76,2.045,77,1.02,78,1.89,79,2.321,81,1.685,84,1.233,85,2.221,87,2.69,99,0.551,100,1.066,102,2.844,119,1.194,120,0.731,121,1.724,122,1.685,123,1.206,124,2.17,125,1.222,126,1.194,127,1.194,128,1.724,129,1.167,130,1.222,131,1.194,132,1.141,133,1.222,134,1.167,135,1.194,136,1.141,137,1.222,138,1.141,139,1.222,140,1.115,141,1.222,142,1.194,143,1.222,144,1.141,145,1.222,146,1.115,147,1.222,148,1.141,149,1.194,150,1.222,187,1.765,215,2.853,258,4.358,259,2.176,343,1.645,400,2.7,427,4.795,432,4.026,703,2.862,803,2.568,1179,6.353,1659,5.849,1805,3.577,1825,5.849,2232,5.344,2233,4.046,2234,5.709,2235,5.709,2236,5.709,2237,7.186,2238,8.083,2239,5.709,2240,4.046,2241,4.046,2242,4.046,2243,4.046,2244,4.046,2245,4.046,2246,4.046,2247,4.046,2248,4.046,2249,5.709]],["title/modules/ToolbarModule.html",[225,0.768,871,3.341]],["body/modules/ToolbarModule.html",[2,0.05,3,0.042,4,0.034,14,0.009,34,0.089,37,0.005,38,0.005,53,0.371,55,0.313,62,1.687,63,1.727,66,0.092,118,2.705,120,0.732,136,2.219,218,1.794,225,0.986,227,1.447,228,2.425,229,1.523,230,1.345,235,2.147,236,1.523,237,1.523,240,1.809,241,2.458,242,1.604,246,3.192,247,3.467,248,2.264,249,2.103,273,2.966,274,1.694,408,3.322,409,4.618,410,4.292,412,2.858,627,5.549,673,3.584,720,3.584,800,2.573,871,6.826,884,3.274,1189,5.549,1573,5.054,1578,4.618,1579,4.292,1580,4.292,1585,4.618,1594,4.292,1758,6.356,1907,4.292,1908,2.858,1909,2.573,1929,3.274,2049,6.356,2051,3.584,2081,6.356,2119,3.584,2120,5.054,2232,7.017,2250,4.054,2251,4.054,2252,4.054,2253,4.054,2254,6.356,2255,4.054,2256,4.054,2257,4.054,2258,4.054,2259,4.054,2260,4.054,2261,4.054,2262,3.584,2263,4.054,2264,4.054]],["title/components/TrafficSourcesComponent.html",[69,0.52,2265,3.595]],["body/components/TrafficSourcesComponent.html",[2,0.069,3,0.074,4,0.026,6,0.261,7,0.751,9,0.472,13,0.811,14,0.009,15,0.679,34,0.038,37,0.004,38,0.004,44,0.461,48,0.593,49,0.755,50,1.453,51,1.784,53,0.193,55,0.237,56,0.809,66,0.07,69,0.791,71,0.927,72,0.927,73,0.774,75,1.124,76,1.743,77,0.774,78,1.795,79,2.104,81,1.376,83,5.086,84,1.007,85,1.946,86,4.44,87,2.292,89,5.987,90,4.106,99,0.922,100,1.229,102,2.822,104,2.714,105,2.714,106,4.122,107,1.845,108,1.784,109,2.714,110,3.766,111,3.766,115,3.516,116,4.727,117,3.766,118,3.111,119,1.664,120,0.554,121,1.408,122,1.376,123,0.985,124,1.902,125,0.927,126,0.906,127,0.906,128,1.408,129,0.885,130,0.927,131,1.376,132,0.866,133,0.927,134,0.885,135,0.906,136,0.866,137,0.927,138,0.866,139,0.927,140,0.846,141,0.927,142,0.906,143,0.927,144,0.866,145,0.927,146,0.846,147,0.927,148,0.866,149,0.906,150,0.927,164,2.338,165,3.699,306,4.122,497,4.122,653,0.885,755,2.048,758,1.948,853,3.818,859,4.741,1469,3.976,1473,3.766,1475,2.479,1483,2.164,1486,3.288,1487,2.479,1496,2.164,1498,2.048,1500,2.164,1501,2.164,1504,2.164,1505,1.948,1506,3.976,1507,2.164,1508,2.164,1509,2.164,1510,2.164,1511,2.164,1513,2.164,1518,2.164,1523,3.5,1524,4.122,1967,4.985,1977,2.714,1978,2.714,1983,2.304,1984,2.304,1985,2.304,1986,2.304,1987,2.304,1988,2.304,1993,2.304,2078,4.122,2153,2.479,2154,2.479,2265,4.554,2266,8.104,2267,8.104,2268,3.069,2269,7.13,2270,4.663,2271,5.638,2272,4.663,2273,3.069,2274,3.069,2275,4.663,2276,4.663,2277,3.069,2278,3.069,2279,3.069,2280,3.069,2281,3.069,2282,3.069,2283,3.069,2284,3.069,2285,4.663]],["title/interfaces/TreeConfig.html",[0,1.284,2286,3.595]],["body/interfaces/TreeConfig.html",[0,1.516,2,0.034,3,0.028,4,0.023,6,0.448,7,0.688,9,0.657,13,0.312,14,0.009,15,0.234,17,0.605,34,0.079,37,0.004,38,0.004,53,0.177,66,0.062,73,0.691,75,0.661,84,0.923,99,1.03,165,2.218,175,1.375,186,3.453,275,2.853,357,1.924,429,1.838,462,2.059,624,1.594,653,2.451,832,2.215,885,3.945,908,1.934,916,2.626,920,1.741,927,6.158,1050,1.934,1419,1.594,1420,1.663,1641,2.059,1779,3.453,1895,2.059,2212,3.21,2286,4.793,2287,2.215,2288,5.246,2289,5.196,2290,2.743,2291,3.78,2292,3.78,2293,3.78,2294,3.78,2295,3.78,2296,3.78,2297,2.215,2298,2.215,2299,3.453,2300,2.215,2301,2.215,2302,2.215,2303,2.215,2304,2.215,2305,2.215,2306,2.215,2307,2.215,2308,2.215,2309,6.63,2310,2.215,2311,2.215,2312,2.215,2313,2.215,2314,4.244,2315,2.215,2316,2.215,2317,7.076,2318,2.425,2319,2.425,2320,6.838,2321,2.425,2322,2.425,2323,4.646,2324,2.425,2325,3.78,2326,2.425,2327,2.425,2328,6.509,2329,2.425,2330,2.425,2331,2.425,2332,2.059,2333,2.425,2334,2.425,2335,2.425,2336,2.425,2337,2.425,2338,2.425,2339,2.425,2340,2.425,2341,2.425,2342,3.78,2343,2.425,2344,2.425,2345,2.425,2346,2.425,2347,5.246,2348,5.246,2349,4.646,2350,5.246,2351,2.425,2352,2.425,2353,4.646,2354,2.425,2355,2.425,2356,4.646,2357,2.425,2358,6.687,2359,4.646,2360,5.246,2361,2.425,2362,2.425,2363,2.425,2364,2.425,2365,2.425,2366,2.425,2367,2.425,2368,2.425,2369,2.425,2370,2.425,2371,2.425,2372,2.425,2373,2.425,2374,2.425]],["title/interfaces/TreeNode.html",[0,1.284,1641,3.341]],["body/interfaces/TreeNode.html",[0,1.495,2,0.033,3,0.028,4,0.023,6,0.5,7,0.677,9,0.901,13,0.479,14,0.009,15,0.442,17,0.928,34,0.078,37,0.004,38,0.004,53,0.174,66,0.061,73,0.677,75,0.648,84,0.908,99,1.023,165,2.182,175,1.346,186,3.397,275,2.806,357,1.898,429,1.808,462,2.016,624,1.561,653,2.442,832,2.169,885,5.072,908,1.894,916,2.596,920,2.67,927,6.234,1050,1.894,1419,1.561,1420,1.628,1641,3.157,1779,3.397,1895,2.016,2212,3.157,2286,4.187,2287,2.169,2288,2.374,2289,4.187,2291,3.718,2292,3.718,2293,3.718,2294,3.718,2295,3.718,2296,3.718,2297,2.169,2298,2.169,2299,3.397,2300,2.169,2301,2.169,2302,2.169,2303,2.169,2304,2.169,2305,2.169,2306,2.169,2307,2.169,2308,2.169,2309,6.6,2310,2.169,2311,2.169,2312,2.169,2313,2.169,2314,4.187,2315,2.169,2316,2.169,2317,7.301,2318,2.374,2319,2.374,2320,6.797,2321,2.374,2322,2.374,2323,4.583,2324,2.374,2325,3.718,2326,2.374,2327,2.374,2328,6.462,2329,2.374,2330,2.374,2331,2.374,2332,2.016,2333,2.374,2334,2.374,2335,2.374,2336,2.374,2337,2.374,2338,2.374,2339,2.374,2340,2.374,2341,2.374,2342,3.718,2343,2.374,2344,2.374,2345,2.374,2346,2.374,2347,5.186,2348,5.186,2349,4.583,2350,5.186,2351,2.374,2352,2.374,2353,4.583,2354,2.374,2355,2.374,2356,4.583,2357,2.374,2358,6.644,2359,4.583,2360,5.186,2361,2.374,2362,2.374,2363,2.374,2364,2.374,2365,2.374,2366,2.374,2367,2.374,2368,2.374,2369,2.374,2370,2.374,2371,2.374,2372,2.374,2373,2.374,2374,2.374,2375,4.206,2376,2.685]],["title/classes/UpdateRouterState.html",[66,0.101,1211,3.341]],["body/classes/UpdateRouterState.html",[0,1.147,2,0.049,3,0.041,4,0.034,6,0.339,7,0.908,9,0.611,13,0.642,14,0.009,15,0.48,17,0.878,34,0.088,36,2.424,37,0.005,38,0.005,42,2.749,44,0.596,48,0.768,49,0.676,50,1.025,53,0.295,56,1.486,60,2.411,66,0.162,94,1.532,99,0.971,153,1.917,174,2.232,197,1.351,201,2.803,210,3.25,259,2.138,274,1.662,294,4.325,332,3.08,338,4.233,340,4.742,343,1.616,357,2.065,369,3.542,370,2.063,378,2.293,433,3.659,446,2.22,451,3.149,653,1.147,657,2.411,683,2.31,807,2.984,1067,2.803,1093,4.919,1117,2.803,1198,4.233,1199,3.211,1203,4.233,1204,6.081,1205,4.555,1206,4.555,1207,3.211,1208,3.211,1209,5.87,1210,6.316,1211,5.353,1212,4.555,1213,3.211,1214,5.293,1215,3.211,1216,3.211,1217,3.211,1218,3.211,1219,3.211,1220,3.211,1221,4.555,1222,3.211,1223,3.211,1224,3.211,1225,4.555,1226,3.211,1227,3.211,1228,3.211,1229,3.211,1230,3.211,1231,3.211,1232,3.211,1233,3.211,1234,3.211,1235,3.211,1236,3.211,2377,3.975,2378,3.975]],["title/components/UserMenuComponent.html",[69,0.52,2254,3.595]],["body/components/UserMenuComponent.html",[2,0.045,3,0.055,4,0.031,6,0.31,7,0.852,9,0.559,13,0.602,14,0.009,15,0.667,34,0.045,37,0.005,38,0.005,44,0.546,48,0.703,49,0.821,50,0.938,51,1.151,53,0.258,55,0.281,56,0.959,62,1.074,63,1.099,66,0.083,69,0.85,71,1.099,72,1.099,73,0.917,75,1.276,76,1.927,77,0.917,78,1.856,79,2.021,81,1.562,84,1.142,85,2.116,87,2.784,99,0.932,100,1.804,102,1.44,115,3.823,119,1.074,120,0.657,121,1.598,122,1.562,123,1.117,124,2.068,125,1.099,126,1.074,127,1.074,128,1.598,129,1.05,130,1.099,131,1.074,132,1.026,133,1.099,134,1.05,135,1.074,136,1.026,137,1.099,138,1.026,139,1.099,140,1.003,141,1.099,142,1.074,143,1.099,144,1.026,145,1.099,146,1.003,147,1.099,148,1.026,149,1.074,150,1.099,153,2.12,187,1.636,197,1.237,332,3.567,343,1.479,364,2.114,379,3.894,427,3.531,429,2.68,614,3.972,615,3.972,623,2.731,700,3.217,703,2.653,704,4.678,705,4.678,710,4.678,803,2.31,916,2.341,1135,5.697,1164,3.972,1288,3.217,1413,3.978,1764,6.052,1765,6.052,1774,5.036,2254,5.036,2262,7.095,2379,8.025,2380,6.235,2381,3.638,2382,3.638,2383,3.638,2384,3.638,2385,3.638,2386,5.291,2387,3.638,2388,3.638,2389,3.638,2390,3.638,2391,5.291,2392,4.678,2393,5.291,2394,5.291,2395,6.846,2396,5.291]],["title/components/WidgetComponent.html",[69,0.52,2397,3.595]],["body/components/WidgetComponent.html",[2,0.042,3,0.052,4,0.029,6,0.29,7,0.81,9,1.018,13,0.843,14,0.009,15,0.631,34,0.042,37,0.005,38,0.005,44,0.51,48,0.657,49,0.795,53,0.208,55,0.263,56,0.896,66,0.077,69,0.827,71,1.026,72,1.026,73,0.857,75,1.214,76,1.853,77,0.857,78,1.832,79,2.186,81,1.485,84,1.087,85,2.048,87,2.437,99,0.902,100,0.896,102,2.372,107,1.345,119,2.263,120,0.614,121,1.52,122,1.485,123,1.063,124,2.001,125,1.026,126,1.003,127,1.003,128,1.52,129,0.98,130,1.026,131,1.485,132,0.958,133,1.026,134,0.98,135,1.003,136,0.958,137,1.026,138,0.958,139,1.026,140,0.937,141,1.026,142,1.003,143,1.026,144,0.958,145,1.026,146,0.937,147,1.026,148,0.958,149,1.003,150,1.026,164,2.523,165,3.977,187,1.556,210,2.732,755,2.268,758,2.157,853,4.289,859,4.875,1463,6.192,1469,4.672,1483,2.396,1484,3.005,1485,2.745,1486,3.549,1496,2.396,1498,2.268,1500,2.396,1501,2.396,1502,3.005,1504,2.396,1505,2.157,1506,4.226,1507,2.396,1508,2.396,1509,2.396,1510,2.396,1511,2.396,1513,2.396,1518,2.396,1519,2.745,1520,2.745,1521,4.449,1522,4.065,1523,3.778,1968,4.449,1980,3.005,1983,2.551,1984,2.551,1985,2.551,1986,2.551,1987,2.551,1988,2.551,1993,2.551,2152,3.005,2153,2.745,2154,2.745,2397,4.841,2398,8.562,2399,3.398,2400,5.033,2401,5.033,2402,5.033,2403,5.033,2404,3.398,2405,3.398,2406,3.398,2407,3.398,2408,5.033,2409,5.033,2410,5.033,2411,5.033,2412,5.033]],["title/modules/WidgetsModule.html",[225,0.768,2413,3.595]],["body/modules/WidgetsModule.html",[2,0.048,3,0.04,4,0.033,14,0.009,34,0.068,37,0.005,38,0.005,53,0.353,55,0.3,62,1.637,63,1.676,64,2.356,66,0.088,69,0.825,70,6.269,119,1.637,120,0.702,126,2.291,129,2.239,134,2.239,179,2.09,210,1.771,225,0.957,227,1.387,228,2.369,229,1.459,230,2.147,235,2.084,236,1.459,237,1.459,240,1.755,273,2.016,274,1.624,289,2.356,290,2.356,294,2.983,297,2.356,298,2.356,653,1.121,727,2.917,841,4.51,848,2.466,849,2.466,853,4.706,873,5.473,883,3.435,1960,6.269,2265,6.269,2397,6.269,2413,7.501,2414,3.886,2415,3.886,2416,3.886,2417,3.886,2418,7.989,2419,7.761,2420,7.761,2421,7.761,2422,7.761,2423,3.886,2424,3.886,2425,3.435,2426,3.886,2427,3.886,2428,3.886,2429,3.886,2430,3.886]],["title/pipes/WordsPipe.html",[657,2.699,1792,3.595]],["body/pipes/WordsPipe.html",[2,0.069,3,0.059,4,0.048,9,0.867,13,0.642,14,0.009,15,0.481,17,1.964,34,0.069,37,0.007,38,0.007,48,1.09,49,0.938,50,1.454,51,2.601,53,0.233,55,0.436,66,0.128,75,1.36,77,1.422,84,1.218,99,0.768,164,3.921,653,1.627,657,4.742,659,5.761,662,4.987,663,6.305,664,7.265,665,6.914,667,5.761,668,6.305,1792,5.761,2431,5.641,2432,7.821,2433,5.641,2434,5.641,2435,5.641,2436,5.641]],["title/changelog.html",[753,2.612,2332,2.78,2437,3.704]],["body/changelog.html",[4,0.058,14,0.007,37,0.007,38,0.007,1010,5.185,1166,6.107,1171,6.107,1602,6.056,1841,5.579,2438,6.908,2439,6.908,2440,6.908,2441,6.908,2442,6.908,2443,6.908,2444,6.908,2445,6.908,2446,6.908]],["title/dependencies.html",[227,1.914,2447,3.704]],["body/dependencies.html",[14,0.009,37,0.006,38,0.006,55,0.372,131,1.42,162,4.291,165,2.496,179,2.587,200,3.611,218,2.846,227,1.718,242,1.904,248,2.686,249,2.496,259,3.458,274,2.011,277,3.611,278,3.405,283,4.535,284,3.899,288,3.886,341,3.21,342,3.21,343,1.956,412,3.392,779,3.886,780,4.535,781,3.886,797,4.253,798,4.253,800,4.082,801,3.392,802,3.886,859,2.917,862,4.253,1036,3.886,1184,4.253,1552,4.253,1908,3.392,1909,4.082,2024,3.886,2425,4.253,2448,4.811,2449,4.811,2450,4.811,2451,9.039,2452,8.712,2453,4.811,2454,8.059,2455,4.811,2456,4.811,2457,4.811,2458,4.811,2459,6.431,2460,4.811,2461,4.811,2462,4.811,2463,4.811,2464,4.811,2465,4.811,2466,4.811,2467,4.811,2468,4.811,2469,4.811,2470,4.811,2471,6.431,2472,4.811,2473,4.811,2474,4.811,2475,4.811,2476,4.811,2477,4.811,2478,4.811,2479,4.811,2480,4.811,2481,4.811,2482,4.811,2483,4.811]],["title/miscellaneous/enumerations.html",[2484,2.78,2485,4.738]],["body/miscellaneous/enumerations.html",[6,0.43,14,0.009,37,0.006,38,0.006,51,2.91,99,0.687,152,4.462,168,5.868,176,4.462,177,3.788,178,5.868,368,2.818,371,3.57,374,3.707,375,2.818,376,2.818,377,3.707,462,3.788,624,3.857,653,1.915,1261,5.362,1419,2.933,1639,4.462,1640,5.868,1643,5.868,1651,5.868,1653,5.868,1654,5.868,1655,5.868,1895,3.788,2008,4.462,2009,4.462,2287,4.076,2297,4.076,2298,4.076,2299,5.362,2300,4.076,2301,4.076,2302,4.076,2303,4.076,2304,4.076,2305,4.076,2306,4.076,2307,4.076,2308,4.076,2309,4.076,2310,4.076,2311,4.076,2312,4.076,2313,4.076,2314,5.362,2315,4.076,2316,4.076,2484,3.788,2485,4.462,2486,5.047,2487,5.047,2488,5.047,2489,6.638,2490,5.047,2491,6.638,2492,6.638,2493,5.047,2494,6.638,2495,5.047,2496,6.638,2497,6.638,2498,5.047,2499,6.638,2500,6.638,2501,6.638,2502,6.638]],["title/index.html",[6,0.316,753,2.612,2332,2.78]],["body/index.html",[3,0.054,4,0.044,14,0.006,37,0.006,38,0.006,62,1.531,86,3.657,177,3.893,185,4.042,278,2.438,324,4.585,332,2.438,493,4.585,753,3.657,801,3.657,818,4.585,822,4.585,1028,6.645,1036,4.189,1039,6.84,1050,4.765,1055,4.585,1255,7.301,1259,5.974,1286,4.585,1437,8.196,1602,3.893,1841,5.458,1891,6.071,2212,3.893,2392,5.974,2503,5.186,2504,5.186,2505,5.186,2506,5.186,2507,8.624,2508,6.758,2509,5.186,2510,5.186,2511,5.186,2512,5.186,2513,6.758,2514,5.186,2515,5.186,2516,5.186,2517,5.186,2518,5.186,2519,5.186,2520,5.186,2521,6.758,2522,7.517,2523,6.758,2524,7.517,2525,5.186,2526,7.964,2527,5.186,2528,5.186,2529,7.517,2530,5.186,2531,5.186,2532,5.186,2533,5.186]],["title/modules.html",[225,1.053]],["body/modules.html",[14,0.006,37,0.006,38,0.006,225,0.858,226,3.734,266,3.734,271,3.734,284,5.646,387,3.734,627,3.507,633,4.017,714,4.017,804,3.734,834,4.017,841,2.89,864,4.017,870,3.734,871,3.734,872,3.734,873,3.507,983,3.734,1061,8.231,1189,3.507,1194,3.319,1320,4.017,1326,3.734,1327,3.734,1328,3.734,1548,3.734,1751,4.017,1788,4.017,2042,3.734,2102,6.927,2207,8.231,2413,4.017,2534,9.365,2535,7.835]],["title/miscellaneous/typealiases.html",[2484,2.78,2536,5.36]],["body/miscellaneous/typealiases.html",[5,4.834,6,0.51,12,6.49,13,0.681,14,0.009,21,6.49,22,5.978,23,6.49,24,5.978,25,6.49,26,4.834,27,4.834,28,5.978,29,4.834,30,4.834,31,4.834,32,4.834,33,4.834,37,0.007,38,0.007,346,4.22,854,5.291,859,4.872,861,7.103,2289,6.49,2484,4.493,2537,5.985,2538,8.394,2539,5.985,2540,7.401,2541,7.401,2542,5.985]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"injectables/AccountService.html":{},"components/ActivityComponent.html":{},"classes/Address.html":{},"classes/Animations.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"modules/AppConfirmModule.html":{},"injectables/AppConfirmService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/AuthGuard.html":{},"classes/AuthModeChanged.html":{},"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AuthorizationErrorResponse.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"modules/BreadcrumbsModule.html":{},"modules/CdkModule.html":{},"classes/ChangeAuthMode.html":{},"pipes/CharactersPipe.html":{},"directives/ClickOutsideDirective.html":{},"components/ContextMenuComponent.html":{},"modules/ContextMenuModule.html":{},"directives/ContextMenuTriggerDirective.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"interfaces/Crumb.html":{},"injectables/D3ChartService.html":{},"modules/DashboardModule.html":{},"interfaces/DocsSiteTheme.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventBus.html":{},"components/ExperimentsComponent.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"modules/FullscreenModule.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"modules/HomeModule.html":{},"injectables/InMemoryDataService.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"classes/LoadProfile.html":{},"components/LoadingOverlayComponent.html":{},"modules/LoadingOverlayModule.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"modules/MaterialDateModule.html":{},"modules/MaterialModule.html":{},"injectables/MediaQueryService.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"directives/MinValidatorDirective.html":{},"classes/MyHammerConfig.html":{},"modules/NavigatorModule.html":{},"classes/NextCurrentlyOpened.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/NotificationsComponent.html":{},"modules/NxPipesModule.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"classes/ProfileLoaded.html":{},"components/QuickpanelComponent.html":{},"modules/QuickpanelModule.html":{},"injectables/ROPCService.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"interfaces/RouterStateModel.html":{},"modules/ScrollToTopModule.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"modules/ScrollbarModule.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"classes/SetIconMode.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"modules/WidgetsModule.html":{},"pipes/WordsPipe.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":165,"title":{},"body":{"classes/Address.html":{},"injectables/AuthGuard.html":{},"interfaces/Filter.html":{},"components/HomeLayoutComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"components/WidgetComponent.html":{},"dependencies.html":{}}}],["0.1.1",{"_index":2444,"title":{},"body":{"changelog.html":{}}}],["0.5.2",{"_index":2465,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":2466,"title":{},"body":{"dependencies.html":{}}}],["0.8.24",{"_index":2483,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":2461,"title":{},"body":{"dependencies.html":{}}}],["02",{"_index":2445,"title":{},"body":{"changelog.html":{}}}],["05:00",{"_index":1834,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["0;then",{"_index":1775,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["1",{"_index":1363,"title":{"components/RainbowComponent-1.html":{}},"body":{"injectables/InMemoryDataService.html":{},"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"components/RainbowComponent-1.html":{},"components/SearchBarComponent.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["1.0",{"_index":1523,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["1.0.0",{"_index":2448,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":2469,"title":{},"body":{"dependencies.html":{}}}],["1.8.6",{"_index":2477,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":2152,"title":{},"body":{"components/SourceOverviewWidgetComponent.html":{},"components/WidgetComponent.html":{}}}],["100",{"_index":1091,"title":{},"body":{"interfaces/Filter.html":{},"components/RecentSalesComponent.html":{},"components/SearchComponent.html":{}}}],["10000",{"_index":967,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["2",{"_index":1279,"title":{},"body":{"directives/HammertimeDirective.html":{},"injectables/InMemoryDataService.html":{},"components/LineChartWidgetComponent.html":{}}}],["2.0.0",{"_index":2459,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":2474,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":2481,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":2472,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1503,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["2000",{"_index":349,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["2010",{"_index":1165,"title":{},"body":{"components/FooterComponent.html":{}}}],["2018",{"_index":1166,"title":{},"body":{"components/FooterComponent.html":{},"changelog.html":{}}}],["25",{"_index":2446,"title":{},"body":{"changelog.html":{}}}],["2939",{"_index":1931,"title":{},"body":{"injectables/ROPCService.html":{}}}],["3",{"_index":1104,"title":{},"body":{"interfaces/Filter.html":{},"directives/HammertimeDirective.html":{},"injectables/InMemoryDataService.html":{}}}],["3.1.4",{"_index":2467,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":2479,"title":{},"body":{"dependencies.html":{}}}],["3.5.17",{"_index":2473,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":109,"title":{},"body":{"components/ActivityComponent.html":{},"components/TrafficSourcesComponent.html":{}}}],["360",{"_index":1431,"title":{},"body":{"components/LandingComponent.html":{}}}],["380px",{"_index":263,"title":{},"body":{"injectables/AppConfirmService.html":{}}}],["3p0",{"_index":604,"title":{},"body":{"components/BlogComponent.html":{}}}],["3po",{"_index":591,"title":{},"body":{"components/BlogComponent.html":{}}}],["4.0",{"_index":1173,"title":{},"body":{"components/FooterComponent.html":{}}}],["4.0.2",{"_index":2475,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":667,"title":{},"body":{"pipes/CharactersPipe.html":{},"components/SourceOverviewWidgetComponent.html":{},"pipes/WordsPipe.html":{}}}],["400",{"_index":1499,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["404",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"components/NotFoundComponent.html":{}}}],["48px",{"_index":1679,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["5",{"_index":2074,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["5.0.0",{"_index":2456,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2284,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["500",{"_index":826,"title":{},"body":{"modules/CoreModule.html":{}}}],["56",{"_index":1683,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["6.0.0",{"_index":2451,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1502,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/WidgetComponent.html":{}}}],["7.1.1",{"_index":2463,"title":{},"body":{"dependencies.html":{}}}],["8.2.7",{"_index":2480,"title":{},"body":{"dependencies.html":{}}}],["_blank",{"_index":1022,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["_chang",{"_index":1599,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["_context",{"_index":1719,"title":{},"body":{"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{}}}],["_destroy",{"_index":724,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["_element",{"_index":2021,"title":{},"body":{"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{}}}],["_elementref",{"_index":682,"title":{},"body":{"directives/ClickOutsideDirective.html":{},"directives/ContextMenuTriggerDirective.html":{}}}],["_lowerthanlarg",{"_index":1600,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["_lowerthanmedium",{"_index":1601,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["_node",{"_index":2349,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["_node.children",{"_index":2352,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["_overlay",{"_index":731,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["_pagetitleservic",{"_index":1425,"title":{},"body":{"components/LandingComponent.html":{}}}],["_param",{"_index":1226,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["_postorder(nod",{"_index":2362,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["_preorder(nod",{"_index":2357,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["_queryparam",{"_index":1225,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["_templateref",{"_index":1724,"title":{},"body":{"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{}}}],["_titl",{"_index":1811,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["_tree",{"_index":1396,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["_vcr",{"_index":728,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{},"directives/NgLetDirective.html":{}}}],["_vcr.createembeddedview(_templateref",{"_index":1725,"title":{},"body":{"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{}}}],["a11ymodul",{"_index":639,"title":{},"body":{"modules/CdkModule.html":{}}}],["aapl",{"_index":1366,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["aayla",{"_index":592,"title":{},"body":{"components/BlogComponent.html":{}}}],["abc",{"_index":1842,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["abil",{"_index":1258,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["aboutcompon",{"_index":1325,"title":{},"body":{"modules/HomeModule.html":{}}}],["abov",{"_index":1810,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["abstract",{"_index":1073,"title":{},"body":{"interfaces/Filter.html":{}}}],["abstractcontrol",{"_index":1698,"title":{},"body":{"directives/MinValidatorDirective.html":{}}}],["accent",{"_index":894,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"injectables/ThemeStorageService.html":{}}}],["access",{"_index":1455,"title":{},"body":{"components/LandingComponent.html":{}}}],["access_deni",{"_index":26,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{},"miscellaneous/typealiases.html":{}}}],["access_token",{"_index":1935,"title":{},"body":{"injectables/ROPCService.html":{}}}],["accessor",{"_index":1156,"title":{},"body":{"components/FooterComponent.html":{},"injectables/MediaQueryService.html":{},"directives/NgLetDirective.html":{},"injectables/PageTitleService.html":{}}}],["accesstokenerror",{"_index":12,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{},"miscellaneous/typealiases.html":{}}}],["accesstokenerrorrespons",{"_index":1,"title":{"interfaces/AccessTokenErrorResponse.html":{}},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{}}}],["accordingli",{"_index":1123,"title":{},"body":{"interfaces/Filter.html":{}}}],["account",{"_index":52,"title":{},"body":{"injectables/AccountService.html":{},"classes/Address.html":{},"modules/CrudModule.html":{},"injectables/InMemoryDataService.html":{}}}],["account.model",{"_index":65,"title":{},"body":{"injectables/AccountService.html":{}}}],["account_circl",{"_index":2394,"title":{},"body":{"components/UserMenuComponent.html":{}}}],["accountformcompon",{"_index":840,"title":{},"body":{"modules/CrudModule.html":{}}}],["accountscompon",{"_index":839,"title":{},"body":{"modules/CrudModule.html":{}}}],["accountservic",{"_index":40,"title":{"injectables/AccountService.html":{}},"body":{"injectables/AccountService.html":{},"modules/CrudModule.html":{}}}],["ackbar",{"_index":537,"title":{},"body":{"components/BlogComponent.html":{}}}],["action",{"_index":378,"title":{},"body":{"classes/AuthModeChanged.html":{},"interfaces/AuthStateModel.html":{},"classes/ChangeAuthMode.html":{},"injectables/EventBus.html":{},"classes/Go.html":{},"classes/InitializeData.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/ProfileLoaded.html":{},"interfaces/RouterStateModel.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"classes/UpdateRouterState.html":{}}}],["action([logoutsuccess",{"_index":450,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["action(authmodechang",{"_index":455,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["action(changeauthmod",{"_index":456,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["action(go",{"_index":1234,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["action(initializedata",{"_index":1409,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["action(login",{"_index":469,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["action(loginsuccess",{"_index":445,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["action(logout",{"_index":467,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["action(nextcurrentlyopen",{"_index":1411,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["action(seticonmod",{"_index":1410,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["action(togglecurrentlyopen",{"_index":1412,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["action(togglecurrentlyopenedbyrout",{"_index":1417,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["action(updaterouterst",{"_index":1233,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["activ",{"_index":80,"title":{},"body":{"components/ActivityComponent.html":{}}}],["activatedrout",{"_index":1204,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["activatedroutesnapshot",{"_index":335,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["activity.component.html",{"_index":82,"title":{},"body":{"components/ActivityComponent.html":{}}}],["activitycompon",{"_index":70,"title":{"components/ActivityComponent.html":{}},"body":{"components/ActivityComponent.html":{},"modules/WidgetsModule.html":{}}}],["actual_compon",{"_index":150,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["adapt",{"_index":1552,"title":{},"body":{"modules/MaterialDateModule.html":{},"dependencies.html":{}}}],["add",{"_index":2327,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["add(nod",{"_index":2341,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["added:4",{"_index":1869,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["addparentlinks(par",{"_index":2322,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["address",{"_index":151,"title":{"classes/Address.html":{}},"body":{"classes/Address.html":{}}}],["admin/overview",{"_index":2312,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["adminmenu",{"_index":813,"title":{},"body":{"modules/CoreModule.html":{}}}],["aftercontentinit",{"_index":2032,"title":{},"body":{"directives/ScrollbarDirective.html":{}}}],["again",{"_index":1141,"title":{},"body":{"interfaces/Filter.html":{}}}],["agm/cor",{"_index":2425,"title":{},"body":{"modules/WidgetsModule.html":{},"dependencies.html":{}}}],["agmcoremodul",{"_index":2424,"title":{},"body":{"modules/WidgetsModule.html":{}}}],["agmcoremodule.forroot",{"_index":2427,"title":{},"body":{"modules/WidgetsModule.html":{}}}],["ago",{"_index":1871,"title":{},"body":{"components/QuickpanelComponent.html":{},"components/RecentSalesComponent.html":{}}}],["ahsoka",{"_index":596,"title":{},"body":{"components/BlogComponent.html":{}}}],["alderaan",{"_index":606,"title":{},"body":{"components/BlogComponent.html":{}}}],["alias",{"_index":2537,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all._param",{"_index":1231,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["all._queryparam",{"_index":1232,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["all.data",{"_index":1230,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["all.path",{"_index":1229,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["allowedurl",{"_index":416,"title":{},"body":{"modules/AuthModule.html":{}}}],["alreadi",{"_index":832,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["alway",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["amet",{"_index":526,"title":{},"body":{"components/BlogComponent.html":{}}}],["amidala",{"_index":533,"title":{},"body":{"components/BlogComponent.html":{}}}],["ancestor",{"_index":1406,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["ancestors.shift",{"_index":1408,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["angular",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{},"modules/CoreModule.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/HammerCardComponent.html":{},"injectables/InMemoryDataService.html":{},"components/LandingComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"injectables/ROPCService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":2450,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2453,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11i",{"_index":640,"title":{},"body":{"modules/CdkModule.html":{}}}],["angular/cdk/accordion",{"_index":638,"title":{},"body":{"modules/CdkModule.html":{}}}],["angular/cdk/bidi",{"_index":642,"title":{},"body":{"modules/CdkModule.html":{}}}],["angular/cdk/observ",{"_index":648,"title":{},"body":{"modules/CdkModule.html":{}}}],["angular/cdk/overlay",{"_index":644,"title":{},"body":{"modules/CdkModule.html":{},"modules/ContextMenuModule.html":{},"directives/ContextMenuTriggerDirective.html":{}}}],["angular/cdk/platform",{"_index":646,"title":{},"body":{"modules/CdkModule.html":{}}}],["angular/cdk/port",{"_index":650,"title":{},"body":{"modules/CdkModule.html":{},"modules/ContextMenuModule.html":{},"directives/ContextMenuTriggerDirective.html":{}}}],["angular/cdk/scrol",{"_index":652,"title":{},"body":{"modules/CdkModule.html":{}}}],["angular/cdk/t",{"_index":636,"title":{},"body":{"modules/CdkModule.html":{}}}],["angular/common",{"_index":242,"title":{},"body":{"modules/AppConfirmModule.html":{},"modules/AuthModule.html":{},"modules/BreadcrumbsModule.html":{},"modules/ContextMenuModule.html":{},"modules/CoreModule.html":{},"modules/FullscreenModule.html":{},"modules/LoadingOverlayModule.html":{},"modules/NavigatorModule.html":{},"modules/NotFoundModule.html":{},"modules/NxPipesModule.html":{},"modules/QuickpanelModule.html":{},"modules/ScrollToTopModule.html":{},"modules/ScrollbarModule.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"modules/ToolbarModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":54,"title":{},"body":{"injectables/AccountService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Filter.html":{},"injectables/ROPCService.html":{}}}],["angular/compil",{"_index":2455,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":55,"title":{},"body":{"injectables/AccountService.html":{},"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"modules/AppConfirmModule.html":{},"injectables/AppConfirmService.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"modules/BreadcrumbsModule.html":{},"modules/CdkModule.html":{},"pipes/CharactersPipe.html":{},"directives/ClickOutsideDirective.html":{},"components/ContextMenuComponent.html":{},"modules/ContextMenuModule.html":{},"directives/ContextMenuTriggerDirective.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"interfaces/Crumb.html":{},"injectables/D3ChartService.html":{},"modules/DashboardModule.html":{},"interfaces/DocsSiteTheme.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventBus.html":{},"components/ExperimentsComponent.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"modules/FullscreenModule.html":{},"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"modules/HomeModule.html":{},"injectables/InMemoryDataService.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"modules/LoadingOverlayModule.html":{},"modules/MaterialDateModule.html":{},"modules/MaterialModule.html":{},"injectables/MediaQueryService.html":{},"components/MenuItemComponent.html":{},"directives/MinValidatorDirective.html":{},"classes/MyHammerConfig.html":{},"modules/NavigatorModule.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/NotificationsComponent.html":{},"modules/NxPipesModule.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"components/QuickpanelComponent.html":{},"modules/QuickpanelModule.html":{},"injectables/ROPCService.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"modules/ScrollToTopModule.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"modules/ScrollbarModule.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"injectables/ThemeStorageService.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"modules/WidgetsModule.html":{},"pipes/WordsPipe.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":248,"title":{},"body":{"modules/AppConfirmModule.html":{},"modules/AuthModule.html":{},"modules/BreadcrumbsModule.html":{},"modules/FullscreenModule.html":{},"injectables/MediaQueryService.html":{},"modules/QuickpanelModule.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/ToolbarModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":412,"title":{},"body":{"modules/AuthModule.html":{},"directives/MinValidatorDirective.html":{},"modules/SharedModule.html":{},"modules/ToolbarModule.html":{},"dependencies.html":{}}}],["angular/materi",{"_index":218,"title":{},"body":{"components/AppConfirmComponent.html":{},"modules/AppConfirmModule.html":{},"injectables/AppConfirmService.html":{},"modules/AuthModule.html":{},"modules/BreadcrumbsModule.html":{},"modules/ContextMenuModule.html":{},"interceptors/ErrorInterceptor.html":{},"modules/LoadingOverlayModule.html":{},"modules/MaterialDateModule.html":{},"modules/MaterialModule.html":{},"modules/NotFoundModule.html":{},"modules/QuickpanelModule.html":{},"modules/ScrollToTopModule.html":{},"modules/SidenavModule.html":{},"modules/ThemePickerModule.html":{},"modules/ToolbarModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{},"injectables/PageTitleService.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthStateModel.html":{},"modules/BreadcrumbsModule.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"classes/Go.html":{},"modules/HomeModule.html":{},"classes/MyHammerConfig.html":{},"modules/NotFoundModule.html":{},"interfaces/RouterStateModel.html":{},"components/SearchBarComponent.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/ToolbarModule.html":{},"classes/UpdateRouterState.html":{},"modules/WidgetsModule.html":{},"dependencies.html":{}}}],["angular/servic",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"injectables/ServiceWorkerService.html":{},"dependencies.html":{}}}],["angular2",{"_index":2468,"title":{},"body":{"dependencies.html":{}}}],["anim",{"_index":179,"title":{"classes/Animations.html":{}},"body":{"classes/Animations.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"components/HammerCardComponent.html":{},"components/HomeLayoutComponent.html":{},"modules/HomeModule.html":{},"classes/MyHammerConfig.html":{},"modules/WidgetsModule.html":{},"dependencies.html":{}}}],["animate_on_route_ent",{"_index":1015,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["animateonrouteent",{"_index":1009,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["animations/blob/master/src/app/app.module.t",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["animationst",{"_index":1242,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["anm",{"_index":1005,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["antil",{"_index":549,"title":{},"body":{"components/BlogComponent.html":{}}}],["api",{"_index":781,"title":{},"body":{"modules/CoreModule.html":{},"injectables/InMemoryDataService.html":{},"dependencies.html":{}}}],["api/accounts/1",{"_index":1354,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["api/blob/master/src/app/hero",{"_index":1357,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["api/symbols/1",{"_index":1355,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["apibas",{"_index":827,"title":{},"body":{"modules/CoreModule.html":{}}}],["apikey",{"_index":2428,"title":{},"body":{"modules/WidgetsModule.html":{}}}],["app",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"modules/AppConfirmModule.html":{},"injectables/AppConfirmService.html":{},"components/ExperimentsComponent.html":{},"components/FooterComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"index.html":{}}}],["app.compon",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["app_base_href",{"_index":2188,"title":{},"body":{"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{}}}],["app_initi",{"_index":395,"title":{},"body":{"modules/AuthModule.html":{}}}],["appbas",{"_index":2191,"title":{},"body":{"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{}}}],["appcompon",{"_index":181,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["appconfirmcompon",{"_index":203,"title":{"components/AppConfirmComponent.html":{}},"body":{"components/AppConfirmComponent.html":{},"modules/AppConfirmModule.html":{},"injectables/AppConfirmService.html":{}}}],["appconfirmmodul",{"_index":226,"title":{"modules/AppConfirmModule.html":{}},"body":{"modules/AppConfirmModule.html":{},"modules/CrudModule.html":{},"modules.html":{}}}],["appconfirmservic",{"_index":234,"title":{"injectables/AppConfirmService.html":{}},"body":{"modules/AppConfirmModule.html":{},"injectables/AppConfirmService.html":{}}}],["appear",{"_index":1658,"title":{},"body":{"interfaces/MenuItem.html":{},"injectables/PageTitleService.html":{}}}],["appl",{"_index":1367,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["applic",{"_index":1256,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["application/x",{"_index":1943,"title":{},"body":{"injectables/ROPCService.html":{}}}],["appmin],[formcontrolname],[formcontrol],[ngmodel",{"_index":1694,"title":{},"body":{"directives/MinValidatorDirective.html":{}}}],["appmin],[formcontrolname],[formcontrol],[ngmodel]'},{'nam",{"_index":145,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["appmodul",{"_index":266,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{}}}],["apppag",{"_index":318,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{}}}],["apps/default/e2e/app.po.t",{"_index":319,"title":{},"body":{"classes/AppPage.html":{}}}],["apps/default/e2e/app.po.ts:4",{"_index":322,"title":{},"body":{"classes/AppPage.html":{}}}],["apps/default/e2e/app.po.ts:8",{"_index":323,"title":{},"body":{"classes/AppPage.html":{}}}],["apps/default/src/app/app.component.t",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/default/src/app/app.component.ts:10",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/default/src/app/app.component.ts:13",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/default/src/app/app.module.t",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/default/src/app/core/core.module.t",{"_index":776,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/default/src/app/core/interceptors/error.interceptor.t",{"_index":939,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apps/default/src/app/core/interceptors/error.interceptor.ts:15",{"_index":947,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apps/default/src/app/core/interceptors/error.interceptor.ts:19",{"_index":958,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apps/default/src/app/core/interceptors/error.interceptor.ts:9",{"_index":942,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apps/default/src/app/core/services/in",{"_index":1341,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["apps/default/src/app/core/services/mediareplay/media",{"_index":1597,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["apps/default/src/app/core/services/pag",{"_index":1807,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["apps/default/src/app/core/services/servic",{"_index":2094,"title":{},"body":{"injectables/ServiceWorkerService.html":{}}}],["apps/default/src/app/core/state/eventbus.t",{"_index":971,"title":{},"body":{"injectables/EventBus.html":{}}}],["apps/default/src/app/core/state/eventbus.ts:6",{"_index":973,"title":{},"body":{"injectables/EventBus.html":{}}}],["apps/default/src/app/core/state/router.state.t",{"_index":1199,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["apps/default/src/app/core/state/router.state.ts:10",{"_index":2001,"title":{},"body":{"interfaces/RouterStateModel.html":{}}}],["apps/default/src/app/core/state/router.state.ts:11",{"_index":2003,"title":{},"body":{"interfaces/RouterStateModel.html":{}}}],["apps/default/src/app/core/state/router.state.ts:15",{"_index":2377,"title":{},"body":{"classes/UpdateRouterState.html":{}}}],["apps/default/src/app/core/state/router.state.ts:16",{"_index":2378,"title":{},"body":{"classes/UpdateRouterState.html":{}}}],["apps/default/src/app/core/state/router.state.ts:19",{"_index":1201,"title":{},"body":{"classes/Go.html":{}}}],["apps/default/src/app/core/state/router.state.ts:20",{"_index":1202,"title":{},"body":{"classes/Go.html":{}}}],["apps/default/src/app/core/state/router.state.ts:8",{"_index":2002,"title":{},"body":{"interfaces/RouterStateModel.html":{}}}],["apps/default/src/app/core/state/router.state.ts:9",{"_index":2000,"title":{},"body":{"interfaces/RouterStateModel.html":{}}}],["appvers",{"_index":1161,"title":{},"body":{"components/FooterComponent.html":{}}}],["argument",{"_index":685,"title":{},"body":{"directives/ClickOutsideDirective.html":{},"directives/ContextMenuTriggerDirective.html":{},"directives/HammertimeDirective.html":{}}}],["array",{"_index":2149,"title":{},"body":{"components/SourceOverviewWidgetComponent.html":{}}}],["artifact",{"_index":2516,"title":{},"body":{"index.html":{}}}],["asc",{"_index":1088,"title":{},"body":{"interfaces/Filter.html":{}}}],["ashik",{"_index":1858,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["ask",{"_index":1836,"title":{},"body":{"components/QuickpanelComponent.html":{},"injectables/ServiceWorkerService.html":{}}}],["asobserv",{"_index":1623,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["assets/img/avatars/1.png",{"_index":1846,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["assets/img/avatars/10.png",{"_index":1861,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["assets/img/avatars/11.png",{"_index":1855,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["assets/img/avatars/15.png",{"_index":1859,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["assets/img/avatars/5.png",{"_index":1850,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["assets/img/avatars/8.png",{"_index":1852,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["assets/img/avatars/us",{"_index":2389,"title":{},"body":{"components/UserMenuComponent.html":{}}}],["assign",{"_index":2345,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["async",{"_index":358,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/AuthStateModel.html":{},"components/FeaturesComponent.html":{},"injectables/InMemoryDataService.html":{},"injectables/ROPCService.html":{}}}],["auth",{"_index":437,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["auth.act",{"_index":345,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/AuthStateModel.html":{}}}],["auth.guard",{"_index":413,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.servic",{"_index":404,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{}}}],["auth.stat",{"_index":401,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/realms//protocol/openid",{"_index":1921,"title":{},"body":{"injectables/ROPCService.html":{}}}],["authconfigimplicit",{"_index":434,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["authconfigpassword",{"_index":435,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["authguard",{"_index":327,"title":{"injectables/AuthGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{}}}],["authmod",{"_index":371,"title":{},"body":{"classes/AuthModeChanged.html":{},"interfaces/AuthStateModel.html":{},"classes/ChangeAuthMode.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"classes/ProfileLoaded.html":{},"miscellaneous/enumerations.html":{}}}],["authmode(st",{"_index":443,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["authmode.implicitflow",{"_index":438,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["authmode.passwordflow",{"_index":460,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["authmodechang",{"_index":367,"title":{"classes/AuthModeChanged.html":{}},"body":{"classes/AuthModeChanged.html":{},"interfaces/AuthStateModel.html":{},"classes/ChangeAuthMode.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"classes/ProfileLoaded.html":{}}}],["authmodechanged(payload",{"_index":466,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["authmodul",{"_index":387,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules.html":{}}}],["authmodule.forroot",{"_index":820,"title":{},"body":{"modules/CoreModule.html":{}}}],["author",{"_index":1932,"title":{},"body":{"injectables/ROPCService.html":{}}}],["authorizationcodeflow",{"_index":377,"title":{},"body":{"classes/AuthModeChanged.html":{},"classes/ChangeAuthMode.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"classes/ProfileLoaded.html":{},"miscellaneous/enumerations.html":{}}}],["authorizationerror",{"_index":25,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{},"miscellaneous/typealiases.html":{}}}],["authorizationerrorrespons",{"_index":35,"title":{"interfaces/AuthorizationErrorResponse.html":{}},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{}}}],["authservic",{"_index":393,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{}}}],["authstat",{"_index":400,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{},"modules/CoreModule.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/ToolbarComponent.html":{}}}],["authstatemodel",{"_index":424,"title":{"interfaces/AuthStateModel.html":{}},"body":{"interfaces/AuthStateModel.html":{}}}],["automat",{"_index":2511,"title":{},"body":{"index.html":{}}}],["avaialbl",{"_index":1953,"title":{},"body":{"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{}}}],["avail",{"_index":2102,"title":{},"body":{"injectables/ServiceWorkerService.html":{},"modules.html":{}}}],["await",{"_index":361,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/AuthStateModel.html":{},"injectables/InMemoryDataService.html":{},"injectables/ROPCService.html":{}}}],["axislabel",{"_index":1988,"title":{},"body":{"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["b",{"_index":1490,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["b.valu",{"_index":1491,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["baba",{"_index":547,"title":{},"body":{"components/BlogComponent.html":{}}}],["back",{"_index":1748,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["backend",{"_index":1126,"title":{},"body":{"interfaces/Filter.html":{}}}],["bad",{"_index":1138,"title":{},"body":{"interfaces/Filter.html":{}}}],["badg",{"_index":1642,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["bar",{"_index":2053,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.compon",{"_index":2259,"title":{},"body":{"modules/ToolbarModule.html":{}}}],["bar.component.html",{"_index":2055,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.scss",{"_index":2054,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.t",{"_index":2052,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:11",{"_index":2067,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:12",{"_index":2066,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:14",{"_index":2062,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:18",{"_index":2064,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:39",{"_index":2065,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:43",{"_index":2063,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar/search",{"_index":2051,"title":{},"body":{"components/SearchBarComponent.html":{},"modules/ToolbarModule.html":{}}}],["barchartcompon",{"_index":2419,"title":{},"body":{"modules/WidgetsModule.html":{}}}],["baseurl",{"_index":1074,"title":{},"body":{"interfaces/Filter.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{}}}],["battl",{"_index":1038,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["bearer",{"_index":1933,"title":{},"body":{"injectables/ROPCService.html":{}}}],["befor",{"_index":493,"title":{},"body":{"components/BlogComponent.html":{},"index.html":{}}}],["behaviorsubject",{"_index":1071,"title":{},"body":{"interfaces/Filter.html":{}}}],["behaviorsubject(fals",{"_index":1077,"title":{},"body":{"interfaces/Filter.html":{}}}],["ben",{"_index":601,"title":{},"body":{"components/BlogComponent.html":{}}}],["beta.14",{"_index":2457,"title":{},"body":{"dependencies.html":{}}}],["beta.2",{"_index":2449,"title":{},"body":{"dependencies.html":{}}}],["bidimodul",{"_index":641,"title":{},"body":{"modules/CdkModule.html":{}}}],["big",{"_index":508,"title":{},"body":{"components/BlogComponent.html":{}}}],["bigg",{"_index":594,"title":{},"body":{"components/BlogComponent.html":{}}}],["bink",{"_index":532,"title":{},"body":{"components/BlogComponent.html":{}}}],["blog",{"_index":479,"title":{},"body":{"components/BlogComponent.html":{},"components/FeaturesComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{}}}],["blog.component.html",{"_index":481,"title":{},"body":{"components/BlogComponent.html":{}}}],["blog.component.scss",{"_index":480,"title":{},"body":{"components/BlogComponent.html":{}}}],["blogcompon",{"_index":477,"title":{"components/BlogComponent.html":{}},"body":{"components/BlogComponent.html":{},"modules/HomeModule.html":{}}}],["boba",{"_index":569,"title":{},"body":{"components/BlogComponent.html":{}}}],["bodi",{"_index":1128,"title":{},"body":{"interfaces/Filter.html":{},"injectables/ROPCService.html":{}}}],["body.tostr",{"_index":1941,"title":{},"body":{"injectables/ROPCService.html":{}}}],["bodytitl",{"_index":1814,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["boolean",{"_index":429,"title":{},"body":{"interfaces/AuthStateModel.html":{},"interfaces/DocsSiteTheme.html":{},"classes/InitializeData.html":{},"components/LoadingOverlayComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"components/NotificationsComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"classes/SetIconMode.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"components/UserMenuComponent.html":{}}}],["bootstrap",{"_index":229,"title":{},"body":{"modules/AppConfirmModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BreadcrumbsModule.html":{},"modules/ContextMenuModule.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"modules/FullscreenModule.html":{},"modules/HomeModule.html":{},"modules/LoadingOverlayModule.html":{},"modules/NotFoundModule.html":{},"modules/NxPipesModule.html":{},"modules/QuickpanelModule.html":{},"modules/ScrollToTopModule.html":{},"modules/ScrollbarModule.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"modules/ToolbarModule.html":{},"modules/WidgetsModule.html":{}}}],["bothan",{"_index":587,"title":{},"body":{"components/BlogComponent.html":{}}}],["bottom",{"_index":755,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{},"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["box",{"_index":512,"title":{},"body":{"components/BlogComponent.html":{}}}],["brand",{"_index":1452,"title":{},"body":{"components/LandingComponent.html":{}}}],["breadcrumb",{"_index":616,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Crumb.html":{}}}],["breadcrumbs.compon",{"_index":632,"title":{},"body":{"modules/BreadcrumbsModule.html":{}}}],["breadcrumbs.component.html",{"_index":618,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Crumb.html":{}}}],["breadcrumbs.component.scss",{"_index":617,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Crumb.html":{}}}],["breadcrumbscompon",{"_index":612,"title":{"components/BreadcrumbsComponent.html":{}},"body":{"components/BreadcrumbsComponent.html":{},"modules/BreadcrumbsModule.html":{},"interfaces/Crumb.html":{}}}],["breadcrumbsmodul",{"_index":627,"title":{"modules/BreadcrumbsModule.html":{}},"body":{"modules/BreadcrumbsModule.html":{},"modules/DashboardModule.html":{},"modules/ToolbarModule.html":{},"modules.html":{}}}],["break",{"_index":462,"title":{},"body":{"interfaces/AuthStateModel.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["brew",{"_index":502,"title":{},"body":{"components/BlogComponent.html":{}}}],["bright",{"_index":517,"title":{},"body":{"components/BlogComponent.html":{}}}],["brown",{"_index":495,"title":{},"body":{"components/BlogComponent.html":{}}}],["brows",{"_index":2534,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/ExperimentsModule.html":{},"components/LandingComponent.html":{},"classes/MyHammerConfig.html":{},"injectables/PageTitleService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.findelement(by.css('body')).gettext",{"_index":326,"title":{},"body":{"classes/AppPage.html":{}}}],["browser.get",{"_index":325,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["bug",{"_index":1059,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["build",{"_index":1255,"title":{},"body":{"components/HammerCardComponent.html":{},"index.html":{}}}],["build:prod",{"_index":2515,"title":{},"body":{"index.html":{}}}],["built",{"_index":1459,"title":{},"body":{"components/LandingComponent.html":{}}}],["busi",{"_index":1832,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["c",{"_index":593,"title":{},"body":{"components/BlogComponent.html":{}}}],["cake",{"_index":1303,"title":{},"body":{"components/HeaderComponent.html":{}}}],["calamari",{"_index":540,"title":{},"body":{"components/BlogComponent.html":{}}}],["calrissian",{"_index":541,"title":{},"body":{"components/BlogComponent.html":{}}}],["canactiv",{"_index":329,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/DashboardModule.html":{}}}],["canactivate(rout",{"_index":334,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["cancel",{"_index":224,"title":{},"body":{"components/AppConfirmComponent.html":{}}}],["card",{"_index":1239,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["card.compon",{"_index":992,"title":{},"body":{"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{}}}],["card.component.html",{"_index":1241,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["card.component.scss",{"_index":1240,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["card.component.t",{"_index":1238,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["card.component.ts:11",{"_index":1245,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["card.component.ts:15",{"_index":1246,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["card.component.ts:17",{"_index":1249,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["card.component.ts:24",{"_index":1247,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["card/hamm",{"_index":991,"title":{},"body":{"modules/ExperimentsModule.html":{},"components/HammerCardComponent.html":{},"classes/MyHammerConfig.html":{}}}],["cardanim",{"_index":1250,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["cardin",{"_index":1520,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/WidgetComponent.html":{}}}],["carrom",{"_index":1874,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["case",{"_index":459,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["catcherror",{"_index":58,"title":{},"body":{"injectables/AccountService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Filter.html":{}}}],["catcherror(this.handleerror",{"_index":1105,"title":{},"body":{"interfaces/Filter.html":{}}}],["catherin",{"_index":1844,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["cc",{"_index":1172,"title":{},"body":{"components/FooterComponent.html":{}}}],["cdk_modul",{"_index":654,"title":{},"body":{"modules/CdkModule.html":{}}}],["cdkaccordionmodul",{"_index":637,"title":{},"body":{"modules/CdkModule.html":{}}}],["cdkmodul",{"_index":633,"title":{"modules/CdkModule.html":{}},"body":{"modules/CdkModule.html":{},"modules.html":{}}}],["cdktablemodul",{"_index":635,"title":{},"body":{"modules/CdkModule.html":{}}}],["chang",{"_index":1602,"title":{},"body":{"injectables/MediaQueryService.html":{},"injectables/StyleManagerService.html":{},"changelog.html":{},"index.html":{}}}],["change.mqalia",{"_index":1632,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["changeauthmod",{"_index":381,"title":{"classes/ChangeAuthMode.html":{}},"body":{"classes/AuthModeChanged.html":{},"interfaces/AuthStateModel.html":{},"classes/ChangeAuthMode.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"classes/ProfileLoaded.html":{}}}],["changedetect",{"_index":614,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"interfaces/Crumb.html":{},"components/UserMenuComponent.html":{}}}],["changedetectionstrategi",{"_index":623,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"interfaces/Crumb.html":{},"components/UserMenuComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":615,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"interfaces/Crumb.html":{},"components/UserMenuComponent.html":{}}}],["changelog",{"_index":2437,"title":{"changelog.html":{}},"body":{}}],["charact",{"_index":661,"title":{},"body":{"pipes/CharactersPipe.html":{}}}],["characterspip",{"_index":658,"title":{"pipes/CharactersPipe.html":{}},"body":{"pipes/CharactersPipe.html":{},"modules/NxPipesModule.html":{}}}],["chart",{"_index":131,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"dependencies.html":{}}}],["chartdata",{"_index":1967,"title":{},"body":{"components/RecentSalesComponent.html":{},"components/TrafficSourcesComponent.html":{}}}],["chartdata[0].key",{"_index":2155,"title":{},"body":{"components/SourceOverviewWidgetComponent.html":{}}}],["chartdata[0].sum",{"_index":2156,"title":{},"body":{"components/SourceOverviewWidgetComponent.html":{}}}],["chartdataarray",{"_index":2148,"title":{},"body":{"components/SourceOverviewWidgetComponent.html":{}}}],["chartopt",{"_index":1469,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["charts/nvd3/nvd3.servic",{"_index":1483,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["chechforchildmenu",{"_index":1666,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["check",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/QuickpanelComponent.html":{},"injectables/ServiceWorkerService.html":{}}}],["checkswupd",{"_index":2096,"title":{},"body":{"injectables/ServiceWorkerService.html":{}}}],["chevron_right",{"_index":626,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["chewbacca",{"_index":545,"title":{},"body":{"components/BlogComponent.html":{}}}],["child",{"_index":2328,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["children",{"_index":885,"title":{},"body":{"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["citi",{"_index":154,"title":{},"body":{"classes/Address.html":{}}}],["class",{"_index":66,"title":{"classes/Address.html":{},"classes/Animations.html":{},"classes/AppPage.html":{},"classes/AuthModeChanged.html":{},"classes/ChangeAuthMode.html":{},"classes/EntityColumnDef.html":{},"classes/Go.html":{},"classes/InitializeData.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"classes/MyHammerConfig.html":{},"classes/NextCurrentlyOpened.html":{},"classes/NgLetContext.html":{},"classes/ProfileLoaded.html":{},"classes/SetIconMode.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"classes/UpdateRouterState.html":{}},"body":{"injectables/AccountService.html":{},"components/ActivityComponent.html":{},"classes/Address.html":{},"classes/Animations.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"modules/AppConfirmModule.html":{},"injectables/AppConfirmService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/AuthGuard.html":{},"classes/AuthModeChanged.html":{},"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"modules/BreadcrumbsModule.html":{},"modules/CdkModule.html":{},"classes/ChangeAuthMode.html":{},"pipes/CharactersPipe.html":{},"directives/ClickOutsideDirective.html":{},"components/ContextMenuComponent.html":{},"modules/ContextMenuModule.html":{},"directives/ContextMenuTriggerDirective.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"interfaces/Crumb.html":{},"injectables/D3ChartService.html":{},"modules/DashboardModule.html":{},"interfaces/DocsSiteTheme.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventBus.html":{},"components/ExperimentsComponent.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"modules/FullscreenModule.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"modules/HomeModule.html":{},"injectables/InMemoryDataService.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"classes/LoadProfile.html":{},"components/LoadingOverlayComponent.html":{},"modules/LoadingOverlayModule.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"modules/MaterialDateModule.html":{},"modules/MaterialModule.html":{},"injectables/MediaQueryService.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"directives/MinValidatorDirective.html":{},"classes/MyHammerConfig.html":{},"modules/NavigatorModule.html":{},"classes/NextCurrentlyOpened.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/NotificationsComponent.html":{},"modules/NxPipesModule.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"classes/ProfileLoaded.html":{},"components/QuickpanelComponent.html":{},"modules/QuickpanelModule.html":{},"injectables/ROPCService.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"interfaces/RouterStateModel.html":{},"modules/ScrollToTopModule.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"modules/ScrollbarModule.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"classes/SetIconMode.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"modules/WidgetsModule.html":{},"pipes/WordsPipe.html":{}}}],["class.mat",{"_index":707,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["class.red]=\"options.gain",{"_index":2409,"title":{},"body":{"components/WidgetComponent.html":{}}}],["clearstorag",{"_index":917,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"injectables/ThemeStorageService.html":{}}}],["cli",{"_index":1036,"title":{},"body":{"components/FeaturesComponent.html":{},"dependencies.html":{},"index.html":{}}}],["click",{"_index":765,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["clickedinsid",{"_index":694,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["clickoutsidedirect",{"_index":136,"title":{"directives/ClickOutsideDirective.html":{}},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["client",{"_index":1119,"title":{},"body":{"interfaces/Filter.html":{}}}],["client_id",{"_index":1927,"title":{},"body":{"injectables/ROPCService.html":{}}}],["close",{"_index":1786,"title":{},"body":{"components/NotificationsComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/SearchComponent.html":{}}}],["closedropdown",{"_index":2058,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["clue",{"_index":1130,"title":{},"body":{"interfaces/Filter.html":{}}}],["cluster",{"_index":1373,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["cluster_appconfirmmodul",{"_index":231,"title":{},"body":{"modules/AppConfirmModule.html":{}}}],["cluster_appconfirmmodule_declar",{"_index":232,"title":{},"body":{"modules/AppConfirmModule.html":{}}}],["cluster_appconfirmmodule_provid",{"_index":233,"title":{},"body":{"modules/AppConfirmModule.html":{}}}],["cluster_appmodul",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule_bootstrap",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule_declar",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule_import",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_authmodul",{"_index":388,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_declar",{"_index":389,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_provid",{"_index":390,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_breadcrumbsmodul",{"_index":628,"title":{},"body":{"modules/BreadcrumbsModule.html":{}}}],["cluster_breadcrumbsmodule_declar",{"_index":629,"title":{},"body":{"modules/BreadcrumbsModule.html":{}}}],["cluster_breadcrumbsmodule_export",{"_index":630,"title":{},"body":{"modules/BreadcrumbsModule.html":{}}}],["cluster_contextmenumodul",{"_index":715,"title":{},"body":{"modules/ContextMenuModule.html":{}}}],["cluster_contextmenumodule_declar",{"_index":716,"title":{},"body":{"modules/ContextMenuModule.html":{}}}],["cluster_contextmenumodule_export",{"_index":717,"title":{},"body":{"modules/ContextMenuModule.html":{}}}],["cluster_coremodul",{"_index":769,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_coremodule_import",{"_index":770,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_coremodule_provid",{"_index":771,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_crudmodul",{"_index":835,"title":{},"body":{"modules/CrudModule.html":{}}}],["cluster_crudmodule_declar",{"_index":836,"title":{},"body":{"modules/CrudModule.html":{}}}],["cluster_crudmodule_import",{"_index":837,"title":{},"body":{"modules/CrudModule.html":{}}}],["cluster_crudmodule_provid",{"_index":838,"title":{},"body":{"modules/CrudModule.html":{}}}],["cluster_dashboardmodul",{"_index":865,"title":{},"body":{"modules/DashboardModule.html":{}}}],["cluster_dashboardmodule_declar",{"_index":866,"title":{},"body":{"modules/DashboardModule.html":{}}}],["cluster_dashboardmodule_import",{"_index":867,"title":{},"body":{"modules/DashboardModule.html":{}}}],["cluster_experimentsmodul",{"_index":984,"title":{},"body":{"modules/ExperimentsModule.html":{}}}],["cluster_experimentsmodule_declar",{"_index":985,"title":{},"body":{"modules/ExperimentsModule.html":{}}}],["cluster_experimentsmodule_import",{"_index":986,"title":{},"body":{"modules/ExperimentsModule.html":{}}}],["cluster_fullscreenmodul",{"_index":1190,"title":{},"body":{"modules/FullscreenModule.html":{}}}],["cluster_fullscreenmodule_declar",{"_index":1191,"title":{},"body":{"modules/FullscreenModule.html":{}}}],["cluster_fullscreenmodule_export",{"_index":1193,"title":{},"body":{"modules/FullscreenModule.html":{}}}],["cluster_fullscreenmodule_import",{"_index":1192,"title":{},"body":{"modules/FullscreenModule.html":{}}}],["cluster_homemodul",{"_index":1321,"title":{},"body":{"modules/HomeModule.html":{}}}],["cluster_homemodule_declar",{"_index":1322,"title":{},"body":{"modules/HomeModule.html":{}}}],["cluster_homemodule_import",{"_index":1323,"title":{},"body":{"modules/HomeModule.html":{}}}],["cluster_loadingoverlaymodul",{"_index":1538,"title":{},"body":{"modules/LoadingOverlayModule.html":{}}}],["cluster_loadingoverlaymodule_declar",{"_index":1539,"title":{},"body":{"modules/LoadingOverlayModule.html":{}}}],["cluster_loadingoverlaymodule_export",{"_index":1540,"title":{},"body":{"modules/LoadingOverlayModule.html":{}}}],["cluster_notfoundmodul",{"_index":1752,"title":{},"body":{"modules/NotFoundModule.html":{}}}],["cluster_notfoundmodule_declar",{"_index":1753,"title":{},"body":{"modules/NotFoundModule.html":{}}}],["cluster_nxpipesmodul",{"_index":1789,"title":{},"body":{"modules/NxPipesModule.html":{}}}],["cluster_nxpipesmodule_declar",{"_index":1790,"title":{},"body":{"modules/NxPipesModule.html":{}}}],["cluster_nxpipesmodule_export",{"_index":1791,"title":{},"body":{"modules/NxPipesModule.html":{}}}],["cluster_quickpanelmodul",{"_index":1901,"title":{},"body":{"modules/QuickpanelModule.html":{}}}],["cluster_quickpanelmodule_declar",{"_index":1902,"title":{},"body":{"modules/QuickpanelModule.html":{}}}],["cluster_quickpanelmodule_export",{"_index":1904,"title":{},"body":{"modules/QuickpanelModule.html":{}}}],["cluster_quickpanelmodule_import",{"_index":1903,"title":{},"body":{"modules/QuickpanelModule.html":{}}}],["cluster_scrollbarmodul",{"_index":2043,"title":{},"body":{"modules/ScrollbarModule.html":{}}}],["cluster_scrollbarmodule_declar",{"_index":2044,"title":{},"body":{"modules/ScrollbarModule.html":{}}}],["cluster_scrollbarmodule_export",{"_index":2045,"title":{},"body":{"modules/ScrollbarModule.html":{}}}],["cluster_scrolltotopmodul",{"_index":2004,"title":{},"body":{"modules/ScrollToTopModule.html":{}}}],["cluster_scrolltotopmodule_declar",{"_index":2005,"title":{},"body":{"modules/ScrollToTopModule.html":{}}}],["cluster_scrolltotopmodule_export",{"_index":2006,"title":{},"body":{"modules/ScrollToTopModule.html":{}}}],["cluster_sharedmodul",{"_index":2114,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_sharedmodule_declar",{"_index":2115,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_sharedmodule_export",{"_index":2117,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_sharedmodule_import",{"_index":2116,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_sidenavmodul",{"_index":2130,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_declar",{"_index":2131,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_export",{"_index":2133,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_import",{"_index":2132,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_svgviewermodul",{"_index":2200,"title":{},"body":{"modules/SvgViewerModule.html":{}}}],["cluster_svgviewermodule_declar",{"_index":2201,"title":{},"body":{"modules/SvgViewerModule.html":{}}}],["cluster_svgviewermodule_export",{"_index":2203,"title":{},"body":{"modules/SvgViewerModule.html":{}}}],["cluster_svgviewermodule_svgviewercomponent_provid",{"_index":2202,"title":{},"body":{"modules/SvgViewerModule.html":{}}}],["cluster_themepickermodul",{"_index":2213,"title":{},"body":{"modules/ThemePickerModule.html":{}}}],["cluster_themepickermodule_declar",{"_index":2214,"title":{},"body":{"modules/ThemePickerModule.html":{}}}],["cluster_themepickermodule_export",{"_index":2215,"title":{},"body":{"modules/ThemePickerModule.html":{}}}],["cluster_themepickermodule_provid",{"_index":2216,"title":{},"body":{"modules/ThemePickerModule.html":{}}}],["cluster_toolbarmodul",{"_index":2250,"title":{},"body":{"modules/ToolbarModule.html":{}}}],["cluster_toolbarmodule_declar",{"_index":2251,"title":{},"body":{"modules/ToolbarModule.html":{}}}],["cluster_toolbarmodule_export",{"_index":2253,"title":{},"body":{"modules/ToolbarModule.html":{}}}],["cluster_toolbarmodule_import",{"_index":2252,"title":{},"body":{"modules/ToolbarModule.html":{}}}],["cluster_widgetsmodul",{"_index":2414,"title":{},"body":{"modules/WidgetsModule.html":{}}}],["cluster_widgetsmodule_declar",{"_index":2415,"title":{},"body":{"modules/WidgetsModule.html":{}}}],["cluster_widgetsmodule_import",{"_index":2416,"title":{},"body":{"modules/WidgetsModule.html":{}}}],["cluster_widgetsmodule_provid",{"_index":2417,"title":{},"body":{"modules/WidgetsModule.html":{}}}],["code",{"_index":1029,"title":{},"body":{"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/FooterComponent.html":{},"components/HammerCardComponent.html":{},"injectables/InMemoryDataService.html":{}}}],["collaps",{"_index":2500,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["collapsedhov",{"_index":2501,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["collect",{"_index":1049,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["color",{"_index":1454,"title":{},"body":{"components/LandingComponent.html":{},"interfaces/MenuItem.html":{},"components/RecentSalesComponent.html":{}}}],["combinelatest",{"_index":1207,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["combinelatest(param",{"_index":1223,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["commit",{"_index":2442,"title":{},"body":{"changelog.html":{}}}],["commonmodul",{"_index":241,"title":{},"body":{"modules/AppConfirmModule.html":{},"modules/AuthModule.html":{},"modules/BreadcrumbsModule.html":{},"modules/ContextMenuModule.html":{},"modules/CoreModule.html":{},"modules/FullscreenModule.html":{},"modules/LoadingOverlayModule.html":{},"modules/NavigatorModule.html":{},"modules/NotFoundModule.html":{},"modules/NxPipesModule.html":{},"modules/QuickpanelModule.html":{},"modules/ScrollToTopModule.html":{},"modules/ScrollbarModule.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"modules/ToolbarModule.html":{}}}],["compani",{"_index":173,"title":{},"body":{"classes/Address.html":{}}}],["compar",{"_index":2289,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/typealiases.html":{}}}],["compat",{"_index":2478,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":1056,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["compon",{"_index":69,"title":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"modules/CrudModule.html":{},"interfaces/Crumb.html":{},"modules/DashboardModule.html":{},"components/ExperimentsComponent.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"modules/HomeModule.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"classes/MyHammerConfig.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"modules/WidgetsModule.html":{}}}],["component_templ",{"_index":125,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["components/click",{"_index":2263,"title":{},"body":{"modules/ToolbarModule.html":{}}}],["components/footer/footer.compon",{"_index":2124,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/hamm",{"_index":990,"title":{},"body":{"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{}}}],["components/hammertime/hammertime.direct",{"_index":993,"title":{},"body":{"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{}}}],["components/header/header.compon",{"_index":1332,"title":{},"body":{"modules/HomeModule.html":{}}}],["components/icon",{"_index":2141,"title":{},"body":{"modules/SidenavModule.html":{}}}],["components/login/login.compon",{"_index":402,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/menu",{"_index":2137,"title":{},"body":{"modules/SidenavModule.html":{}}}],["components/notifications/notifications.compon",{"_index":2260,"title":{},"body":{"modules/ToolbarModule.html":{}}}],["components/rainbow/rainbow.compon",{"_index":879,"title":{},"body":{"modules/DashboardModule.html":{}}}],["components/search",{"_index":2258,"title":{},"body":{"modules/ToolbarModule.html":{}}}],["components/search/search.compon",{"_index":2257,"title":{},"body":{"modules/ToolbarModule.html":{}}}],["components/sidenav",{"_index":2139,"title":{},"body":{"modules/SidenavModule.html":{}}}],["components/us",{"_index":2261,"title":{},"body":{"modules/ToolbarModule.html":{}}}],["comprehens",{"_index":1438,"title":{},"body":{"components/LandingComponent.html":{}}}],["condit",{"_index":354,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["config",{"_index":2212,"title":{},"body":{"modules/SvgViewerModule.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"index.html":{}}}],["configur",{"_index":997,"title":{},"body":{"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{},"components/QuickpanelComponent.html":{}}}],["confirm",{"_index":207,"title":{},"body":{"components/AppConfirmComponent.html":{},"injectables/AppConfirmService.html":{},"modules/CrudModule.html":{}}}],["confirm(titl",{"_index":255,"title":{},"body":{"injectables/AppConfirmService.html":{}}}],["confirm.compon",{"_index":243,"title":{},"body":{"modules/AppConfirmModule.html":{},"injectables/AppConfirmService.html":{}}}],["confirm.component.html",{"_index":209,"title":{},"body":{"components/AppConfirmComponent.html":{}}}],["confirm.component.scss",{"_index":208,"title":{},"body":{"components/AppConfirmComponent.html":{}}}],["confirm.component.t",{"_index":206,"title":{},"body":{"components/AppConfirmComponent.html":{}}}],["confirm.component.ts:10",{"_index":216,"title":{},"body":{"components/AppConfirmComponent.html":{}}}],["confirm.component.ts:9",{"_index":214,"title":{},"body":{"components/AppConfirmComponent.html":{}}}],["confirm.module.t",{"_index":238,"title":{},"body":{"modules/AppConfirmModule.html":{}}}],["confirm.servic",{"_index":244,"title":{},"body":{"modules/AppConfirmModule.html":{}}}],["confirm.service.t",{"_index":250,"title":{},"body":{"injectables/AppConfirmService.html":{}}}],["confirm.service.ts:11",{"_index":257,"title":{},"body":{"injectables/AppConfirmService.html":{}}}],["confirm.service.ts:8",{"_index":253,"title":{},"body":{"injectables/AppConfirmService.html":{}}}],["confirm/src/app",{"_index":205,"title":{},"body":{"components/AppConfirmComponent.html":{},"modules/AppConfirmModule.html":{},"injectables/AppConfirmService.html":{}}}],["connect/logout",{"_index":1922,"title":{},"body":{"injectables/ROPCService.html":{}}}],["connectedto(this._elementref",{"_index":751,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["consist",{"_index":1441,"title":{},"body":{"components/LandingComponent.html":{}}}],["console.error('an",{"_index":1124,"title":{},"body":{"interfaces/Filter.html":{}}}],["console.error(`backend",{"_index":956,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interfaces/Filter.html":{}}}],["console.log(\"found",{"_index":2313,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["console.log('in",{"_index":1316,"title":{},"body":{"components/HomeLayoutComponent.html":{}}}],["console.log('new",{"_index":976,"title":{},"body":{"injectables/EventBus.html":{}}}],["console.log(`parserequesturl",{"_index":1378,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["console.log(ent",{"_index":1113,"title":{},"body":{"interfaces/Filter.html":{}}}],["console.log(level4",{"_index":2304,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["console.log(level4par",{"_index":2307,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["console.log(nod",{"_index":2299,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["console.log(st",{"_index":1251,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["const",{"_index":653,"title":{},"body":{"modules/CdkModule.html":{},"directives/ClickOutsideDirective.html":{},"directives/ContextMenuTriggerDirective.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Filter.html":{},"components/FooterComponent.html":{},"classes/Go.html":{},"injectables/InMemoryDataService.html":{},"classes/InitializeData.html":{},"modules/MaterialDateModule.html":{},"modules/MaterialModule.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"modules/NxPipesModule.html":{},"injectables/ROPCService.html":{},"components/RecentSalesComponent.html":{},"interfaces/RouterStateModel.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"classes/SetIconMode.html":{},"modules/SharedModule.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"classes/UpdateRouterState.html":{},"modules/WidgetsModule.html":{},"pipes/WordsPipe.html":{},"miscellaneous/enumerations.html":{}}}],["constructor",{"_index":44,"title":{},"body":{"injectables/AccountService.html":{},"components/ActivityComponent.html":{},"classes/Address.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"injectables/AppConfirmService.html":{},"injectables/AuthGuard.html":{},"classes/AuthModeChanged.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"classes/ChangeAuthMode.html":{},"directives/ClickOutsideDirective.html":{},"directives/ContextMenuTriggerDirective.html":{},"modules/CoreModule.html":{},"interfaces/Crumb.html":{},"injectables/D3ChartService.html":{},"classes/EntityColumnDef.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventBus.html":{},"components/ExperimentsComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"classes/LoadProfile.html":{},"components/LoadingOverlayComponent.html":{},"classes/Login.html":{},"classes/LoginSuccess.html":{},"injectables/MediaQueryService.html":{},"components/MenuItemComponent.html":{},"classes/NextCurrentlyOpened.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"components/QuickpanelComponent.html":{},"injectables/ROPCService.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"classes/SetIconMode.html":{},"components/SourceOverviewWidgetComponent.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["constructor(/*priv",{"_index":968,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["constructor(@inject(d3chartservic",{"_index":1979,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["constructor(_el",{"_index":2017,"title":{},"body":{"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{}}}],["constructor(_elementref",{"_index":679,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["constructor(_overlay",{"_index":726,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["constructor(_pagetitleservic",{"_index":1426,"title":{},"body":{"components/LandingComponent.html":{}}}],["constructor(_vcr",{"_index":1723,"title":{},"body":{"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{}}}],["constructor(act",{"_index":972,"title":{},"body":{"injectables/EventBus.html":{}}}],["constructor(appbas",{"_index":2196,"title":{},"body":{"classes/SvgViewerDefaultConfig.html":{}}}],["constructor(bodytitl",{"_index":1812,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["constructor(d3chartservic",{"_index":1968,"title":{},"body":{"components/RecentSalesComponent.html":{},"components/WidgetComponent.html":{}}}],["constructor(dialog",{"_index":251,"title":{},"body":{"injectables/AppConfirmService.html":{}}}],["constructor(dialogref",{"_index":212,"title":{},"body":{"components/AppConfirmComponent.html":{}}}],["constructor(httpcli",{"_index":45,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ROPCService.html":{}}}],["constructor(init",{"_index":932,"title":{},"body":{"classes/EntityColumnDef.html":{}}}],["constructor(init?:parti",{"_index":929,"title":{},"body":{"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{}}}],["constructor(media",{"_index":1605,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["constructor(nvd3servic",{"_index":1473,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{}}}],["constructor(oauthservic",{"_index":330,"title":{},"body":{"injectables/AuthGuard.html":{},"components/OverviewComponent.html":{}}}],["constructor(payload",{"_index":370,"title":{},"body":{"classes/AuthModeChanged.html":{},"classes/ChangeAuthMode.html":{},"classes/Go.html":{},"classes/InitializeData.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginSuccess.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"classes/UpdateRouterState.html":{}}}],["constructor(priv",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfirmService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthStateModel.html":{},"directives/ClickOutsideDirective.html":{},"directives/ContextMenuTriggerDirective.html":{},"injectables/EventBus.html":{},"classes/Go.html":{},"components/HeaderComponent.html":{},"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"components/NotFoundComponent.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"injectables/ROPCService.html":{},"interfaces/RouterStateModel.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{}}}],["constructor(protect",{"_index":1079,"title":{},"body":{"interfaces/Filter.html":{}}}],["constructor(publ",{"_index":174,"title":{},"body":{"classes/Address.html":{},"components/AppConfirmComponent.html":{},"classes/AuthModeChanged.html":{},"classes/ChangeAuthMode.html":{},"classes/Go.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/ProfileLoaded.html":{},"interfaces/RouterStateModel.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"classes/UpdateRouterState.html":{}}}],["constructor(render",{"_index":1739,"title":{},"body":{"components/NotFoundComponent.html":{},"components/SearchComponent.html":{}}}],["constructor(root",{"_index":2319,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["constructor(rout",{"_index":2060,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["constructor(stor",{"_index":1288,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserMenuComponent.html":{}}}],["constructor(street",{"_index":157,"title":{},"body":{"classes/Address.html":{}}}],["constructor(sw",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(swupd",{"_index":2097,"title":{},"body":{"injectables/ServiceWorkerService.html":{}}}],["contain",{"_index":1129,"title":{},"body":{"interfaces/Filter.html":{}}}],["containers/about/about.compon",{"_index":1336,"title":{},"body":{"modules/HomeModule.html":{}}}],["containers/accounts/account",{"_index":844,"title":{},"body":{"modules/CrudModule.html":{}}}],["containers/accounts/account.servic",{"_index":846,"title":{},"body":{"modules/CrudModule.html":{}}}],["containers/accounts/accounts.compon",{"_index":843,"title":{},"body":{"modules/CrudModule.html":{}}}],["containers/blog/blog.compon",{"_index":1335,"title":{},"body":{"modules/HomeModule.html":{}}}],["containers/dashboard",{"_index":875,"title":{},"body":{"modules/DashboardModule.html":{}}}],["containers/experiments/experiments.compon",{"_index":989,"title":{},"body":{"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{}}}],["containers/features/features.compon",{"_index":1340,"title":{},"body":{"modules/HomeModule.html":{}}}],["containers/hom",{"_index":1333,"title":{},"body":{"modules/HomeModule.html":{}}}],["containers/landing/landing.compon",{"_index":1334,"title":{},"body":{"modules/HomeModule.html":{}}}],["containers/not",{"_index":1756,"title":{},"body":{"modules/NotFoundModule.html":{}}}],["containers/overview/overview.compon",{"_index":878,"title":{},"body":{"modules/DashboardModule.html":{}}}],["containers/wizdash/wizdash.compon",{"_index":2426,"title":{},"body":{"modules/WidgetsModule.html":{}}}],["content",{"_index":1848,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["contenttyp",{"_index":1923,"title":{},"body":{"injectables/ROPCService.html":{}}}],["context",{"_index":702,"title":{},"body":{"components/ContextMenuComponent.html":{},"modules/ContextMenuModule.html":{}}}],["contextmenu",{"_index":723,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["contextmenu(ev",{"_index":734,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["contextmenu]'},{'nam",{"_index":139,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["contextmenucompon",{"_index":697,"title":{"components/ContextMenuComponent.html":{}},"body":{"components/ContextMenuComponent.html":{},"modules/ContextMenuModule.html":{}}}],["contextmenumodul",{"_index":714,"title":{"modules/ContextMenuModule.html":{}},"body":{"modules/ContextMenuModule.html":{},"modules.html":{}}}],["contextmenutriggerdirect",{"_index":138,"title":{"directives/ContextMenuTriggerDirective.html":{}},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"modules/ContextMenuModule.html":{},"directives/ContextMenuTriggerDirective.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["control",{"_index":1700,"title":{},"body":{"directives/MinValidatorDirective.html":{}}}],["converttojson(bodi",{"_index":1143,"title":{},"body":{"interfaces/Filter.html":{}}}],["core",{"_index":2470,"title":{},"body":{"dependencies.html":{}}}],["core/core.modul",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["coremodul",{"_index":271,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{}}}],["corusc",{"_index":527,"title":{},"body":{"components/BlogComponent.html":{}}}],["count",{"_index":1446,"title":{},"body":{"components/LandingComponent.html":{}}}],["cpu",{"_index":1893,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["createdb",{"_index":1343,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["createlinkelementwithkey(key",{"_index":2174,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["crud",{"_index":850,"title":{},"body":{"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"components/SearchBarComponent.html":{}}}],["crudmodul",{"_index":834,"title":{"modules/CrudModule.html":{}},"body":{"modules/CrudModule.html":{},"modules.html":{}}}],["crumb",{"_index":619,"title":{"interfaces/Crumb.html":{}},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Crumb.html":{},"components/OverviewComponent.html":{}}}],["crumb.nam",{"_index":625,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["currency:'eur':'symbol",{"_index":1997,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["currency:\\'eur\\':\\'symbol",{"_index":1999,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["current",{"_index":908,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"components/FooterComponent.html":{},"injectables/ThemeStorageService.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["currentlyopen",{"_index":1394,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["currentlyopened(st",{"_index":1401,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["currentlyopened.indexof(payload",{"_index":1414,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["currentlyopened.length",{"_index":1415,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["currentus",{"_index":2380,"title":{},"body":{"components/UserMenuComponent.html":{}}}],["currentuser?.given_nam",{"_index":2391,"title":{},"body":{"components/UserMenuComponent.html":{}}}],["custom",{"_index":1062,"title":{},"body":{"components/FeaturesComponent.html":{},"components/HammerCardComponent.html":{}}}],["d",{"_index":1506,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["d.%m.%y')(new",{"_index":2154,"title":{},"body":{"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["d.date",{"_index":1507,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["d.parent",{"_index":2333,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["d.valu",{"_index":1509,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["d2",{"_index":557,"title":{},"body":{"components/BlogComponent.html":{}}}],["d3",{"_index":859,"title":{},"body":{"injectables/D3ChartService.html":{},"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["d3.format(',.2f",{"_index":1516,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["d3.max(recentcustomersdemovalu",{"_index":1982,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["d3.time.day",{"_index":1987,"title":{},"body":{"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["d3.time.format('%a",{"_index":2153,"title":{},"body":{"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["d3.time.format('%b')(new",{"_index":1512,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["d3.time.format('%h:00')(new",{"_index":1989,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["d3chartservic",{"_index":853,"title":{"injectables/D3ChartService.html":{}},"body":{"injectables/D3ChartService.html":{},"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{},"modules/WidgetsModule.html":{}}}],["d3chartservice.getd3",{"_index":1980,"title":{},"body":{"components/RecentSalesComponent.html":{},"components/WidgetComponent.html":{}}}],["daft",{"_index":486,"title":{},"body":{"components/BlogComponent.html":{}}}],["dagobah",{"_index":552,"title":{},"body":{"components/BlogComponent.html":{}}}],["daili",{"_index":93,"title":{},"body":{"components/ActivityComponent.html":{}}}],["dantooin",{"_index":530,"title":{},"body":{"components/BlogComponent.html":{}}}],["darth",{"_index":531,"title":{},"body":{"components/BlogComponent.html":{}}}],["dashboard",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"components/NotFoundComponent.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"components/SearchBarComponent.html":{}}}],["dashboardlayoutcompon",{"_index":868,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboardmodul",{"_index":864,"title":{"modules/DashboardModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules.html":{}}}],["data",{"_index":210,"title":{},"body":{"components/AppConfirmComponent.html":{},"injectables/AppConfirmService.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"classes/Go.html":{},"modules/HomeModule.html":{},"injectables/InMemoryDataService.html":{},"components/LineChartWidgetComponent.html":{},"classes/MyHammerConfig.html":{},"injectables/ROPCService.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{},"components/WidgetComponent.html":{},"modules/WidgetsModule.html":{}}}],["data.messag",{"_index":221,"title":{},"body":{"components/AppConfirmComponent.html":{}}}],["data.servic",{"_index":784,"title":{},"body":{"modules/CoreModule.html":{}}}],["data.service.t",{"_index":1342,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["data.service.ts:16",{"_index":1345,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["data.service.ts:41",{"_index":1349,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["data.titl",{"_index":220,"title":{},"body":{"components/AppConfirmComponent.html":{}}}],["data/widgetdemodata.data",{"_index":1975,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["data[0].key",{"_index":1524,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{}}}],["data[0].sum",{"_index":2285,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["data[1].key",{"_index":1525,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["data[2].key",{"_index":1526,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["date(d",{"_index":1513,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["date(d)).calendar",{"_index":1991,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["date.module.t",{"_index":1550,"title":{},"body":{"modules/MaterialDateModule.html":{}}}],["date.now",{"_index":1866,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["date.prototype.tojson",{"_index":1145,"title":{},"body":{"interfaces/Filter.html":{}}}],["date:'dd",{"_index":1880,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["date:'eee",{"_index":1878,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["date:'mmmm",{"_index":1879,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["date:'shorttim",{"_index":1877,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["date:\\'dd",{"_index":1900,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["date:\\'eee",{"_index":1898,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["date:\\'mmmm",{"_index":1899,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["date:\\'shorttim",{"_index":1897,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["date_format",{"_index":1558,"title":{},"body":{"modules/MaterialDateModule.html":{}}}],["datea11ylabel",{"_index":1565,"title":{},"body":{"modules/MaterialDateModule.html":{}}}],["dateinput",{"_index":1559,"title":{},"body":{"modules/MaterialDateModule.html":{}}}],["day",{"_index":1870,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["dbf6f9",{"_index":1994,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["dd",{"_index":1148,"title":{},"body":{"interfaces/Filter.html":{}}}],["deadlin",{"_index":1840,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["declar",{"_index":228,"title":{},"body":{"modules/AppConfirmModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BreadcrumbsModule.html":{},"modules/ContextMenuModule.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"modules/FullscreenModule.html":{},"modules/HomeModule.html":{},"modules/LoadingOverlayModule.html":{},"classes/MyHammerConfig.html":{},"modules/NotFoundModule.html":{},"modules/NxPipesModule.html":{},"modules/QuickpanelModule.html":{},"modules/ScrollToTopModule.html":{},"modules/ScrollbarModule.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"modules/ToolbarModule.html":{},"modules/WidgetsModule.html":{}}}],["decor",{"_index":215,"title":{},"body":{"components/AppConfirmComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/SearchComponent.html":{},"components/ToolbarComponent.html":{}}}],["default",{"_index":50,"title":{},"body":{"injectables/AccountService.html":{},"components/ActivityComponent.html":{},"interfaces/AuthStateModel.html":{},"pipes/CharactersPipe.html":{},"components/ContextMenuComponent.html":{},"interfaces/DocsSiteTheme.html":{},"classes/EntityColumnDef.html":{},"interceptors/ErrorInterceptor.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"classes/Go.html":{},"components/HeaderComponent.html":{},"classes/InitializeData.html":{},"injectables/MediaQueryService.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"classes/MyHammerConfig.html":{},"classes/NextCurrentlyOpened.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"interfaces/RouterStateModel.html":{},"components/SearchBarComponent.html":{},"classes/SetIconMode.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"pipes/WordsPipe.html":{}}}],["default/cor",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/LandingComponent.html":{}}}],["default_perfect_scrollbar_config",{"_index":2127,"title":{},"body":{"modules/SharedModule.html":{}}}],["defaultmenu",{"_index":811,"title":{},"body":{"modules/CoreModule.html":{}}}],["defaultsdeep(this.opt",{"_index":2039,"title":{},"body":{"directives/ScrollbarDirective.html":{}}}],["defin",{"_index":15,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"injectables/AccountService.html":{},"components/ActivityComponent.html":{},"classes/Address.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"injectables/AppConfirmService.html":{},"classes/AppPage.html":{},"injectables/AuthGuard.html":{},"classes/AuthModeChanged.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AuthorizationErrorResponse.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"classes/ChangeAuthMode.html":{},"pipes/CharactersPipe.html":{},"directives/ClickOutsideDirective.html":{},"components/ContextMenuComponent.html":{},"directives/ContextMenuTriggerDirective.html":{},"interfaces/Crumb.html":{},"injectables/D3ChartService.html":{},"interfaces/DocsSiteTheme.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventBus.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"injectables/InMemoryDataService.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"classes/LoadProfile.html":{},"components/LoadingOverlayComponent.html":{},"classes/Login.html":{},"classes/LoginSuccess.html":{},"injectables/MediaQueryService.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"directives/MinValidatorDirective.html":{},"classes/MyHammerConfig.html":{},"classes/NextCurrentlyOpened.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"components/QuickpanelComponent.html":{},"injectables/ROPCService.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"interfaces/RouterStateModel.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"classes/SetIconMode.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"pipes/WordsPipe.html":{}}}],["delay",{"_index":825,"title":{},"body":{"modules/CoreModule.html":{}}}],["delet",{"_index":1763,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["delete(`${this.baseurl}/${this.entitypath}/${id",{"_index":1109,"title":{},"body":{"interfaces/Filter.html":{}}}],["delete(id",{"_index":1108,"title":{},"body":{"interfaces/Filter.html":{}}}],["delete(notif",{"_index":1768,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["demo",{"_index":2392,"title":{},"body":{"components/UserMenuComponent.html":{},"index.html":{}}}],["demomenu",{"_index":812,"title":{},"body":{"modules/CoreModule.html":{}}}],["dep",{"_index":422,"title":{},"body":{"modules/AuthModule.html":{}}}],["depend",{"_index":227,"title":{"dependencies.html":{}},"body":{"modules/AppConfirmModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BreadcrumbsModule.html":{},"modules/ContextMenuModule.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"modules/FullscreenModule.html":{},"modules/HomeModule.html":{},"modules/LoadingOverlayModule.html":{},"modules/NotFoundModule.html":{},"modules/NxPipesModule.html":{},"modules/QuickpanelModule.html":{},"modules/ScrollToTopModule.html":{},"modules/ScrollbarModule.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"modules/ToolbarModule.html":{},"modules/WidgetsModule.html":{},"dependencies.html":{}}}],["deploy",{"_index":1259,"title":{},"body":{"components/HammerCardComponent.html":{},"index.html":{}}}],["deploy:mock",{"_index":2532,"title":{},"body":{"index.html":{}}}],["descript",{"_index":1809,"title":{},"body":{"injectables/PageTitleService.html":{},"injectables/StyleManagerService.html":{}}}],["design",{"_index":1033,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["desktop",{"_index":1263,"title":{},"body":{"components/HammerCardComponent.html":{},"components/LandingComponent.html":{}}}],["dev",{"_index":2509,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1055,"title":{},"body":{"components/FeaturesComponent.html":{},"index.html":{}}}],["df",{"_index":701,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["dialog",{"_index":254,"title":{},"body":{"injectables/AppConfirmService.html":{}}}],["dialogref",{"_index":211,"title":{},"body":{"components/AppConfirmComponent.html":{},"injectables/AppConfirmService.html":{}}}],["dialogref.afterclos",{"_index":265,"title":{},"body":{"injectables/AppConfirmService.html":{}}}],["dinner",{"_index":1838,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["direct",{"_index":123,"title":{"directives/ClickOutsideDirective.html":{},"directives/ContextMenuTriggerDirective.html":{},"directives/HammertimeDirective.html":{},"directives/MinValidatorDirective.html":{},"directives/NgLetDirective.html":{},"directives/ScrollbarDirective.html":{}},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/ContextMenuComponent.html":{},"directives/ContextMenuTriggerDirective.html":{},"components/ExperimentsComponent.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"directives/MinValidatorDirective.html":{},"classes/MyHammerConfig.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["directives/min/min.direct",{"_index":2121,"title":{},"body":{"modules/SharedModule.html":{}}}],["directives/ng",{"_index":2122,"title":{},"body":{"modules/SharedModule.html":{}}}],["directori",{"_index":2518,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":817,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/MenuItem.html":{}}}],["disableclos",{"_index":264,"title":{},"body":{"injectables/AppConfirmService.html":{}}}],["dispatch",{"_index":457,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["dispatch(new",{"_index":465,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["display",{"_index":1561,"title":{},"body":{"modules/MaterialDateModule.html":{},"interfaces/MenuItem.html":{}}}],["displayfn",{"_index":926,"title":{},"body":{"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{}}}],["dist",{"_index":2517,"title":{},"body":{"index.html":{}}}],["dob",{"_index":169,"title":{},"body":{"classes/Address.html":{}}}],["doc",{"_index":1028,"title":{},"body":{"components/FeaturesComponent.html":{},"index.html":{}}}],["doc:build",{"_index":2530,"title":{},"body":{"index.html":{}}}],["doc:serv",{"_index":2531,"title":{},"body":{"index.html":{}}}],["docssitethem",{"_index":890,"title":{"interfaces/DocsSiteTheme.html":{}},"body":{"interfaces/DocsSiteTheme.html":{},"injectables/ThemeStorageService.html":{}}}],["document",{"_index":1171,"title":{},"body":{"components/FooterComponent.html":{},"changelog.html":{}}}],["document.body.scrolltop",{"_index":1318,"title":{},"body":{"components/HomeLayoutComponent.html":{}}}],["document.createelement('link",{"_index":2177,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["document.head.appendchild(linkel",{"_index":2180,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["document.head.queryselector(`link[rel=\"stylesheet\"].${getclassnameforkey(key",{"_index":2175,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["document.head.removechild(existinglinkel",{"_index":2172,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["document.location.reload",{"_index":2109,"title":{},"body":{"injectables/ServiceWorkerService.html":{}}}],["document:click",{"_index":678,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["document:click(ev",{"_index":687,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["dog",{"_index":499,"title":{},"body":{"components/BlogComponent.html":{}}}],["dolor",{"_index":524,"title":{},"body":{"components/BlogComponent.html":{}}}],["dom",{"_index":72,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["doubletap",{"_index":1267,"title":{},"body":{"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{}}}],["dozen",{"_index":514,"title":{},"body":{"components/BlogComponent.html":{}}}],["dozi",{"_index":519,"title":{},"body":{"components/BlogComponent.html":{}}}],["droid",{"_index":560,"title":{},"body":{"components/BlogComponent.html":{}}}],["dropdown",{"_index":1653,"title":{},"body":{"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["durat",{"_index":966,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["dynam",{"_index":2458,"title":{},"body":{"dependencies.html":{}}}],["e.tapcount",{"_index":1278,"title":{},"body":{"directives/HammertimeDirective.html":{}}}],["e2",{"_index":2527,"title":{},"body":{"index.html":{}}}],["each",{"_index":2331,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["element",{"_index":122,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"classes/AppPage.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["elementref",{"_index":680,"title":{},"body":{"directives/ClickOutsideDirective.html":{},"directives/ContextMenuTriggerDirective.html":{},"components/LineChartWidgetComponent.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchComponent.html":{}}}],["elev",{"_index":708,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["email",{"_index":171,"title":{},"body":{"classes/Address.html":{}}}],["en",{"_index":1569,"title":{},"body":{"modules/MaterialDateModule.html":{}}}],["enabl",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["encapsul",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["end",{"_index":2526,"title":{},"body":{"index.html":{}}}],["enjoy",{"_index":1864,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["enter",{"_index":366,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["entiti",{"_index":161,"title":{"interfaces/Entity.html":{}},"body":{"classes/Address.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"interfaces/Filter.html":{},"injectables/InMemoryDataService.html":{}}}],["entity.model",{"_index":1072,"title":{},"body":{"interfaces/Filter.html":{}}}],["entity[this.properti",{"_index":928,"title":{},"body":{"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{}}}],["entitycolumndef",{"_index":922,"title":{"classes/EntityColumnDef.html":{}},"body":{"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{}}}],["entitypath",{"_index":43,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/Filter.html":{}}}],["entityservic",{"_index":61,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/Filter.html":{}}}],["entrycompon",{"_index":239,"title":{},"body":{"modules/AppConfirmModule.html":{},"modules/AuthModule.html":{},"modules/CrudModule.html":{}}}],["enum",{"_index":175,"title":{},"body":{"classes/Address.html":{},"classes/AuthModeChanged.html":{},"classes/ChangeAuthMode.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"interfaces/MenuItem.html":{},"classes/ProfileLoaded.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["enumer",{"_index":2485,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":1019,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["env.vers",{"_index":1017,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["env/environ",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/FooterComponent.html":{},"injectables/ROPCService.html":{},"injectables/ServiceWorkerService.html":{},"modules/WidgetsModule.html":{}}}],["environ",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/FooterComponent.html":{},"injectables/ROPCService.html":{},"injectables/ServiceWorkerService.html":{},"modules/WidgetsModule.html":{}}}],["environment.api_base_url",{"_index":1075,"title":{},"body":{"interfaces/Filter.html":{}}}],["environment.envnam",{"_index":821,"title":{},"body":{"modules/CoreModule.html":{},"components/FooterComponent.html":{}}}],["environment.googleapikey",{"_index":2429,"title":{},"body":{"modules/WidgetsModule.html":{}}}],["environment.product",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"injectables/ServiceWorkerService.html":{}}}],["err",{"_index":1626,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["error",{"_index":8,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Filter.html":{},"components/NotFoundComponent.html":{}}}],["error('coremodul",{"_index":831,"title":{},"body":{"modules/CoreModule.html":{}}}],["error.error",{"_index":1116,"title":{},"body":{"interfaces/Filter.html":{}}}],["error.error.messag",{"_index":1125,"title":{},"body":{"interfaces/Filter.html":{}}}],["error.statu",{"_index":1133,"title":{},"body":{"interfaces/Filter.html":{}}}],["error_descript",{"_index":10,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{}}}],["error_uri",{"_index":11,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{}}}],["errorev",{"_index":1118,"title":{},"body":{"interfaces/Filter.html":{}}}],["errorinterceptor",{"_index":775,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/ErrorInterceptor.html":{}}}],["errorinterceptor.snackbarconfig",{"_index":955,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorobserv",{"_index":1134,"title":{},"body":{"interfaces/Filter.html":{}}}],["errorr",{"_index":949,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["event",{"_index":683,"title":{},"body":{"directives/ClickOutsideDirective.html":{},"directives/ContextMenuTriggerDirective.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{},"components/QuickpanelComponent.html":{},"interfaces/RouterStateModel.html":{},"components/SearchBarComponent.html":{},"classes/UpdateRouterState.html":{}}}],["event.preventdefault",{"_index":746,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["event.stoppropag",{"_index":747,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["event.target",{"_index":686,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["event.tim",{"_index":1883,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["event.titl",{"_index":1882,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["eventbu",{"_index":774,"title":{"injectables/EventBus.html":{}},"body":{"modules/CoreModule.html":{},"injectables/EventBus.html":{}}}],["eventemitt",{"_index":684,"title":{},"body":{"directives/ClickOutsideDirective.html":{},"interfaces/DocsSiteTheme.html":{},"directives/HammertimeDirective.html":{},"injectables/ThemeStorageService.html":{}}}],["evil",{"_index":503,"title":{},"body":{"components/BlogComponent.html":{}}}],["ewok",{"_index":584,"title":{},"body":{"components/BlogComponent.html":{}}}],["exampl",{"_index":2297,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["execut",{"_index":2523,"title":{},"body":{"index.html":{}}}],["existinglinkel",{"_index":2170,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["exit_to_app",{"_index":2396,"title":{},"body":{"components/UserMenuComponent.html":{}}}],["expand",{"_index":2499,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["expand_mor",{"_index":1688,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["experi",{"_index":888,"title":{},"body":{"modules/DashboardModule.html":{},"components/ExperimentsComponent.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"classes/MyHammerConfig.html":{}}}],["experiment2",{"_index":1001,"title":{},"body":{"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{}}}],["experiment3",{"_index":1002,"title":{},"body":{"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{}}}],["experiments.component.html",{"_index":980,"title":{},"body":{"components/ExperimentsComponent.html":{}}}],["experiments.component.scss",{"_index":979,"title":{},"body":{"components/ExperimentsComponent.html":{}}}],["experiments1",{"_index":1000,"title":{},"body":{"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{}}}],["experimentscompon",{"_index":977,"title":{"components/ExperimentsComponent.html":{}},"body":{"components/ExperimentsComponent.html":{},"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{}}}],["experimentsmodul",{"_index":983,"title":{"modules/ExperimentsModule.html":{}},"body":{"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{},"modules.html":{}}}],["export",{"_index":34,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"injectables/AccountService.html":{},"components/ActivityComponent.html":{},"classes/Address.html":{},"classes/Animations.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"modules/AppConfirmModule.html":{},"injectables/AppConfirmService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/AuthGuard.html":{},"classes/AuthModeChanged.html":{},"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AuthorizationErrorResponse.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"modules/BreadcrumbsModule.html":{},"modules/CdkModule.html":{},"classes/ChangeAuthMode.html":{},"pipes/CharactersPipe.html":{},"directives/ClickOutsideDirective.html":{},"components/ContextMenuComponent.html":{},"modules/ContextMenuModule.html":{},"directives/ContextMenuTriggerDirective.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"interfaces/Crumb.html":{},"injectables/D3ChartService.html":{},"modules/DashboardModule.html":{},"interfaces/DocsSiteTheme.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventBus.html":{},"components/ExperimentsComponent.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"modules/FullscreenModule.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"modules/HomeModule.html":{},"injectables/InMemoryDataService.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"classes/LoadProfile.html":{},"components/LoadingOverlayComponent.html":{},"modules/LoadingOverlayModule.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"modules/MaterialDateModule.html":{},"modules/MaterialModule.html":{},"injectables/MediaQueryService.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"directives/MinValidatorDirective.html":{},"classes/MyHammerConfig.html":{},"modules/NavigatorModule.html":{},"classes/NextCurrentlyOpened.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/NotificationsComponent.html":{},"modules/NxPipesModule.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"classes/ProfileLoaded.html":{},"components/QuickpanelComponent.html":{},"modules/QuickpanelModule.html":{},"injectables/ROPCService.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"interfaces/RouterStateModel.html":{},"modules/ScrollToTopModule.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"modules/ScrollbarModule.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"classes/SetIconMode.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"modules/WidgetsModule.html":{},"pipes/WordsPipe.html":{}}}],["exporta",{"_index":1703,"title":{},"body":{"directives/MinValidatorDirective.html":{}}}],["extend",{"_index":67,"title":{},"body":{"injectables/AccountService.html":{},"modules/ExperimentsModule.html":{},"interfaces/MenuItem.html":{},"classes/MyHammerConfig.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{}}}],["extlink",{"_index":1655,"title":{},"body":{"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["extra",{"_index":1214,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["face",{"_index":1136,"title":{},"body":{"interfaces/Filter.html":{}}}],["fail",{"_index":1101,"title":{},"body":{"interfaces/Filter.html":{}}}],["fals",{"_index":102,"title":{},"body":{"components/ActivityComponent.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthStateModel.html":{},"components/FullscreenComponent.html":{},"classes/InitializeData.html":{},"components/LineChartWidgetComponent.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"components/NotificationsComponent.html":{},"components/RecentSalesComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"classes/SetIconMode.html":{},"components/SourceOverviewWidgetComponent.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["famou",{"_index":1041,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["fast",{"_index":1440,"title":{},"body":{"components/LandingComponent.html":{}}}],["faster",{"_index":1064,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["favorit",{"_index":1453,"title":{},"body":{"components/LandingComponent.html":{}}}],["featur",{"_index":1006,"title":{},"body":{"components/FeaturesComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{}}}],["features.component.html",{"_index":1008,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["features.component.scss",{"_index":1007,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["featurescompon",{"_index":1003,"title":{"components/FeaturesComponent.html":{}},"body":{"components/FeaturesComponent.html":{},"modules/HomeModule.html":{}}}],["feed",{"_index":88,"title":{},"body":{"components/ActivityComponent.html":{}}}],["feed.cont",{"_index":114,"title":{},"body":{"components/ActivityComponent.html":{}}}],["feed.nam",{"_index":112,"title":{},"body":{"components/ActivityComponent.html":{}}}],["feed.subject",{"_index":113,"title":{},"body":{"components/ActivityComponent.html":{}}}],["femal",{"_index":178,"title":{},"body":{"classes/Address.html":{},"miscellaneous/enumerations.html":{}}}],["fetch('assets/data/accounts.json",{"_index":1360,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["fett",{"_index":574,"title":{},"body":{"components/BlogComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"injectables/AccountService.html":{},"components/ActivityComponent.html":{},"classes/Address.html":{},"classes/Animations.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"modules/AppConfirmModule.html":{},"injectables/AppConfirmService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/AuthGuard.html":{},"classes/AuthModeChanged.html":{},"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AuthorizationErrorResponse.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"modules/BreadcrumbsModule.html":{},"modules/CdkModule.html":{},"classes/ChangeAuthMode.html":{},"pipes/CharactersPipe.html":{},"directives/ClickOutsideDirective.html":{},"components/ContextMenuComponent.html":{},"modules/ContextMenuModule.html":{},"directives/ContextMenuTriggerDirective.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"interfaces/Crumb.html":{},"injectables/D3ChartService.html":{},"modules/DashboardModule.html":{},"interfaces/DocsSiteTheme.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventBus.html":{},"components/ExperimentsComponent.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"modules/FullscreenModule.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"modules/HomeModule.html":{},"injectables/InMemoryDataService.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"classes/LoadProfile.html":{},"components/LoadingOverlayComponent.html":{},"modules/LoadingOverlayModule.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"modules/MaterialDateModule.html":{},"modules/MaterialModule.html":{},"injectables/MediaQueryService.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"directives/MinValidatorDirective.html":{},"classes/MyHammerConfig.html":{},"modules/NavigatorModule.html":{},"classes/NextCurrentlyOpened.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/NotificationsComponent.html":{},"modules/NxPipesModule.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"classes/ProfileLoaded.html":{},"components/QuickpanelComponent.html":{},"modules/QuickpanelModule.html":{},"injectables/ROPCService.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"interfaces/RouterStateModel.html":{},"modules/ScrollToTopModule.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"modules/ScrollbarModule.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"classes/SetIconMode.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"modules/WidgetsModule.html":{},"pipes/WordsPipe.html":{},"changelog.html":{},"index.html":{}}}],["filter",{"_index":1067,"title":{"interfaces/Filter.html":{}},"body":{"interfaces/Filter.html":{},"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["filter(ev",{"_index":1218,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["final",{"_index":59,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/Filter.html":{}}}],["find",{"_index":2295,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["findall(filt",{"_index":1086,"title":{},"body":{"interfaces/Filter.html":{}}}],["findbypredicatedfs(pred",{"_index":2354,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["findinsertindex",{"_index":2294,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["fine",{"_index":1442,"title":{},"body":{"components/LandingComponent.html":{}}}],["fingerprint",{"_index":1302,"title":{},"body":{"components/HeaderComponent.html":{}}}],["first_nam",{"_index":166,"title":{},"body":{"classes/Address.html":{}}}],["fisto",{"_index":528,"title":{},"body":{"components/BlogComponent.html":{}}}],["five",{"_index":511,"title":{},"body":{"components/BlogComponent.html":{}}}],["fixm",{"_index":1929,"title":{},"body":{"injectables/ROPCService.html":{},"modules/SharedModule.html":{},"modules/ToolbarModule.html":{}}}],["flag",{"_index":2519,"title":{},"body":{"index.html":{}}}],["flexibl",{"_index":1060,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["flexlayoutmodul",{"_index":247,"title":{},"body":{"modules/AppConfirmModule.html":{},"modules/AuthModule.html":{},"modules/BreadcrumbsModule.html":{},"modules/FullscreenModule.html":{},"modules/QuickpanelModule.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/ToolbarModule.html":{}}}],["fn",{"_index":2358,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["fn(node",{"_index":2359,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["focus",{"_index":2056,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["footer",{"_index":1153,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":1155,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1154,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercompon",{"_index":1151,"title":{"components/FooterComponent.html":{}},"body":{"components/FooterComponent.html":{},"modules/SharedModule.html":{}}}],["for(const",{"_index":2308,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["form",{"_index":1925,"title":{},"body":{"injectables/ROPCService.html":{}}}],["form.compon",{"_index":845,"title":{},"body":{"modules/CrudModule.html":{}}}],["format_align_right",{"_index":2249,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["formsmodul",{"_index":2120,"title":{},"body":{"modules/SharedModule.html":{},"modules/ToolbarModule.html":{}}}],["forroot",{"_index":420,"title":{},"body":{"modules/AuthModule.html":{}}}],["forroot(config",{"_index":2211,"title":{},"body":{"modules/SvgViewerModule.html":{}}}],["forroot(menuitem",{"_index":1709,"title":{},"body":{"modules/NavigatorModule.html":{}}}],["found",{"_index":1736,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found#notfoundmodul",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["found.compon",{"_index":1757,"title":{},"body":{"modules/NotFoundModule.html":{}}}],["found.component.html",{"_index":1738,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":1737,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.t",{"_index":1735,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:11",{"_index":1744,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:14",{"_index":1743,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":1741,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.module.t",{"_index":1755,"title":{},"body":{"modules/NotFoundModule.html":{}}}],["found/not",{"_index":1734,"title":{},"body":{"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{}}}],["found/src/containers/not",{"_index":1733,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/src/not",{"_index":1754,"title":{},"body":{"modules/NotFoundModule.html":{}}}],["fowl",{"_index":520,"title":{},"body":{"components/BlogComponent.html":{}}}],["fox",{"_index":496,"title":{},"body":{"components/BlogComponent.html":{}}}],["framework",{"_index":1026,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["frequent",{"_index":2080,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["friend",{"_index":1887,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["fromev",{"_index":739,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["fromevent(docu",{"_index":764,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["full",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"modules/HomeModule.html":{},"classes/MyHammerConfig.html":{},"modules/NotFoundModule.html":{},"modules/WidgetsModule.html":{}}}],["fulli",{"_index":1447,"title":{},"body":{"components/LandingComponent.html":{}}}],["fullscreen",{"_index":1176,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["fullscreen.compon",{"_index":1196,"title":{},"body":{"modules/FullscreenModule.html":{}}}],["fullscreen.component.html",{"_index":1178,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["fullscreen.component.scss",{"_index":1177,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["fullscreen_exit",{"_index":1188,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["fullscreencompon",{"_index":1174,"title":{"components/FullscreenComponent.html":{}},"body":{"components/FullscreenComponent.html":{},"modules/FullscreenModule.html":{}}}],["fullscreenmodul",{"_index":1189,"title":{"modules/FullscreenModule.html":{}},"body":{"modules/FullscreenModule.html":{},"modules/SharedModule.html":{},"modules/ToolbarModule.html":{},"modules.html":{}}}],["function",{"_index":346,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/Filter.html":{},"components/QuickpanelComponent.html":{},"injectables/StyleManagerService.html":{},"miscellaneous/typealiases.html":{}}}],["function(_param",{"_index":1224,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["gamorrean",{"_index":589,"title":{},"body":{"components/BlogComponent.html":{}}}],["gb",{"_index":1570,"title":{},"body":{"modules/MaterialDateModule.html":{}}}],["gender",{"_index":168,"title":{},"body":{"classes/Address.html":{},"miscellaneous/enumerations.html":{}}}],["gener",{"_index":2504,"title":{},"body":{"index.html":{}}}],["get",{"_index":2332,"title":{"changelog.html":{},"index.html":{}},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["get(`${this.baseurl}/${this.entitypath",{"_index":1092,"title":{},"body":{"interfaces/Filter.html":{}}}],["get(`${this.baseurl}/${this.entitypath}/${id",{"_index":1083,"title":{},"body":{"interfaces/Filter.html":{}}}],["getal",{"_index":1106,"title":{},"body":{"interfaces/Filter.html":{}}}],["getallparents(item",{"_index":2371,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["getbyid(id",{"_index":1080,"title":{},"body":{"interfaces/Filter.html":{}}}],["getchang",{"_index":1614,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["getclassnameforkey(key",{"_index":2181,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["getd3",{"_index":855,"title":{},"body":{"injectables/D3ChartService.html":{}}}],["getexistinglinkelementbykey(key",{"_index":2171,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["getheight",{"_index":1667,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["getislowerthanlarg",{"_index":1618,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["getislowerthanmedium",{"_index":1616,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["getlinkelementforkey(key",{"_index":2173,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["getlinkelementforkey(key).setattribute('href",{"_index":2169,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["getnv",{"_index":856,"title":{},"body":{"injectables/D3ChartService.html":{}}}],["getparents(tre",{"_index":1404,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["getstat",{"_index":446,"title":{},"body":{"interfaces/AuthStateModel.html":{},"classes/Go.html":{},"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"interfaces/RouterStateModel.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"classes/UpdateRouterState.html":{}}}],["getstate().authmod",{"_index":452,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["getstoredthem",{"_index":914,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"injectables/ThemeStorageService.html":{}}}],["gettitl",{"_index":1816,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["getvers",{"_index":1159,"title":{},"body":{"components/FooterComponent.html":{}}}],["ghpage",{"_index":2464,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":1030,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["gnome",{"_index":492,"title":{},"body":{"components/BlogComponent.html":{}}}],["go",{"_index":1198,"title":{"classes/Go.html":{}},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["go(sc",{"_index":1235,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["gon",{"_index":564,"title":{},"body":{"components/BlogComponent.html":{}}}],["goog",{"_index":1368,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["googl",{"_index":127,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"injectables/InMemoryDataService.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["googlemapswidgetcompon",{"_index":126,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"modules/WidgetsModule.html":{}}}],["gp",{"_index":2533,"title":{},"body":{"index.html":{}}}],["graph",{"_index":2535,"title":{},"body":{"modules.html":{}}}],["greedo",{"_index":599,"title":{},"body":{"components/BlogComponent.html":{}}}],["grievou",{"_index":535,"title":{},"body":{"components/BlogComponent.html":{}}}],["ground",{"_index":1436,"title":{},"body":{"components/LandingComponent.html":{}}}],["grumpi",{"_index":500,"title":{},"body":{"components/BlogComponent.html":{}}}],["guidelin",{"_index":2443,"title":{},"body":{"changelog.html":{}}}],["hammer",{"_index":994,"title":{},"body":{"modules/ExperimentsModule.html":{},"components/HammerCardComponent.html":{},"classes/MyHammerConfig.html":{}}}],["hammer.direction_al",{"_index":999,"title":{},"body":{"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{}}}],["hammer_gesture_config",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{}}}],["hammercardcompon",{"_index":987,"title":{"components/HammerCardComponent.html":{}},"body":{"modules/ExperimentsModule.html":{},"components/HammerCardComponent.html":{},"classes/MyHammerConfig.html":{}}}],["hammergestureconfig",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{}}}],["hammerj",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{},"dependencies.html":{}}}],["hammertim",{"_index":1269,"title":{},"body":{"directives/HammertimeDirective.html":{}}}],["hammertime]'},{'nam",{"_index":141,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["hammertimedirect",{"_index":140,"title":{"directives/HammertimeDirective.html":{}},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"classes/MyHammerConfig.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["han",{"_index":561,"title":{},"body":{"components/BlogComponent.html":{}}}],["handl",{"_index":952,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interfaces/Filter.html":{}}}],["handleerror",{"_index":940,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["handleerror(error",{"_index":1115,"title":{},"body":{"interfaces/Filter.html":{}}}],["happen",{"_index":1139,"title":{},"body":{"interfaces/Filter.html":{}}}],["header",{"_index":923,"title":{},"body":{"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"components/HeaderComponent.html":{},"injectables/ROPCService.html":{}}}],["header.component.html",{"_index":1285,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1284,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercompon",{"_index":1282,"title":{"components/HeaderComponent.html":{}},"body":{"components/HeaderComponent.html":{},"modules/HomeModule.html":{}}}],["height",{"_index":1498,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/MenuItemComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["help",{"_index":2395,"title":{},"body":{"components/UserMenuComponent.html":{}}}],["here",{"_index":953,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{}}}],["hi",{"_index":1849,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["hide",{"_index":2497,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hit",{"_index":1435,"title":{},"body":{"components/LandingComponent.html":{}}}],["home",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"modules/HomeModule.html":{},"injectables/PageTitleService.html":{},"components/SearchBarComponent.html":{}}}],["homelayoutcompon",{"_index":1305,"title":{"components/HomeLayoutComponent.html":{}},"body":{"components/HomeLayoutComponent.html":{},"modules/HomeModule.html":{}}}],["homemodul",{"_index":1320,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{}}}],["host",{"_index":711,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["hostbind",{"_index":706,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["hostbinding('class.mat",{"_index":713,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["hostlisten",{"_index":677,"title":{},"body":{"directives/ClickOutsideDirective.html":{},"components/ContextMenuComponent.html":{},"directives/ContextMenuTriggerDirective.html":{},"directives/HammertimeDirective.html":{}}}],["hostlistener('contextmenu",{"_index":744,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["hostlistener('document:click",{"_index":692,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["hostlistener('tap",{"_index":1276,"title":{},"body":{"directives/HammertimeDirective.html":{}}}],["hoth",{"_index":578,"title":{},"body":{"components/BlogComponent.html":{}}}],["href",{"_index":895,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"injectables/StyleManagerService.html":{},"injectables/ThemeStorageService.html":{}}}],["html",{"_index":121,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["htmlelement",{"_index":690,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["http://localhost:4200",{"_index":2510,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/auth",{"_index":417,"title":{},"body":{"modules/AuthModule.html":{}}}],["http_interceptor",{"_index":785,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpclient",{"_index":46,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/Filter.html":{},"injectables/ROPCService.html":{}}}],["httpclientinmemorywebapimodul",{"_index":778,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpclientinmemorywebapimodule.forroot(inmemorydataservic",{"_index":823,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpclientmodul",{"_index":786,"title":{},"body":{"modules/CoreModule.html":{}}}],["httperrorrespons",{"_index":950,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interfaces/Filter.html":{}}}],["httpevent",{"_index":960,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":946,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpheader",{"_index":1917,"title":{},"body":{"injectables/ROPCService.html":{}}}],["httpheaders().set('cont",{"_index":1942,"title":{},"body":{"injectables/ROPCService.html":{}}}],["httpinterceptor",{"_index":961,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpparam",{"_index":1070,"title":{},"body":{"interfaces/Filter.html":{},"injectables/ROPCService.html":{}}}],["httpparams().set('client_id",{"_index":1938,"title":{},"body":{"injectables/ROPCService.html":{}}}],["httprequest",{"_index":944,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["https://github.com/angular/in",{"_index":1356,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["https://github.com/angularfirebase/78",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["https://issues.jboss.org/plugins/servlet/mobile#issue/keycloak",{"_index":1930,"title":{},"body":{"injectables/ROPCService.html":{}}}],["hutt",{"_index":529,"title":{},"body":{"components/BlogComponent.html":{}}}],["icon",{"_index":1643,"title":{},"body":{"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["iconmod",{"_index":1395,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["icononli",{"_index":1668,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["iconsidenavdirect",{"_index":142,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"modules/SidenavModule.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["id",{"_index":163,"title":{},"body":{"classes/Address.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"injectables/InMemoryDataService.html":{},"components/QuickpanelComponent.html":{}}}],["if(node.link",{"_index":2311,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["image.jpg",{"_index":2390,"title":{},"body":{"components/UserMenuComponent.html":{}}}],["img",{"_index":1845,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["imp",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["implement",{"_index":75,"title":{},"body":{"components/ActivityComponent.html":{},"classes/Address.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"pipes/CharactersPipe.html":{},"directives/ContextMenuTriggerDirective.html":{},"interfaces/Crumb.html":{},"interceptors/ErrorInterceptor.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"injectables/InMemoryDataService.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"directives/MinValidatorDirective.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"pipes/WordsPipe.html":{}}}],["implicit",{"_index":1715,"title":{},"body":{"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{}}}],["implicitflow",{"_index":374,"title":{},"body":{"classes/AuthModeChanged.html":{},"classes/ChangeAuthMode.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"classes/ProfileLoaded.html":{},"miscellaneous/enumerations.html":{}}}],["import",{"_index":53,"title":{},"body":{"injectables/AccountService.html":{},"components/ActivityComponent.html":{},"classes/Address.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"modules/AppConfirmModule.html":{},"injectables/AppConfirmService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"modules/BreadcrumbsModule.html":{},"modules/CdkModule.html":{},"pipes/CharactersPipe.html":{},"directives/ClickOutsideDirective.html":{},"components/ContextMenuComponent.html":{},"modules/ContextMenuModule.html":{},"directives/ContextMenuTriggerDirective.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"interfaces/Crumb.html":{},"injectables/D3ChartService.html":{},"modules/DashboardModule.html":{},"interfaces/DocsSiteTheme.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventBus.html":{},"components/ExperimentsComponent.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"modules/FullscreenModule.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"modules/HomeModule.html":{},"injectables/InMemoryDataService.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"modules/LoadingOverlayModule.html":{},"modules/MaterialDateModule.html":{},"modules/MaterialModule.html":{},"injectables/MediaQueryService.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"directives/MinValidatorDirective.html":{},"classes/MyHammerConfig.html":{},"modules/NavigatorModule.html":{},"classes/NextCurrentlyOpened.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/NotificationsComponent.html":{},"modules/NxPipesModule.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"components/QuickpanelComponent.html":{},"modules/QuickpanelModule.html":{},"injectables/ROPCService.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"interfaces/RouterStateModel.html":{},"modules/ScrollToTopModule.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"modules/ScrollbarModule.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"classes/SetIconMode.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"modules/WidgetsModule.html":{},"pipes/WordsPipe.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"interfaces/AccessTokenErrorResponse.html":{},"injectables/AccountService.html":{},"components/ActivityComponent.html":{},"classes/Address.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"injectables/AppConfirmService.html":{},"classes/AppPage.html":{},"injectables/AuthGuard.html":{},"classes/AuthModeChanged.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AuthorizationErrorResponse.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"classes/ChangeAuthMode.html":{},"directives/ClickOutsideDirective.html":{},"components/ContextMenuComponent.html":{},"directives/ContextMenuTriggerDirective.html":{},"interfaces/Crumb.html":{},"injectables/D3ChartService.html":{},"interfaces/DocsSiteTheme.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"interceptors/ErrorInterceptor.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"injectables/InMemoryDataService.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"classes/LoadProfile.html":{},"components/LoadingOverlayComponent.html":{},"classes/Login.html":{},"classes/LoginSuccess.html":{},"injectables/MediaQueryService.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"directives/MinValidatorDirective.html":{},"classes/MyHammerConfig.html":{},"classes/NextCurrentlyOpened.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"components/QuickpanelComponent.html":{},"injectables/ROPCService.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"interfaces/RouterStateModel.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"classes/SetIconMode.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"injectables/AccountService.html":{},"components/ActivityComponent.html":{},"classes/Address.html":{},"classes/Animations.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"modules/AppConfirmModule.html":{},"injectables/AppConfirmService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/AuthGuard.html":{},"classes/AuthModeChanged.html":{},"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AuthorizationErrorResponse.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"modules/BreadcrumbsModule.html":{},"modules/CdkModule.html":{},"classes/ChangeAuthMode.html":{},"pipes/CharactersPipe.html":{},"directives/ClickOutsideDirective.html":{},"components/ContextMenuComponent.html":{},"modules/ContextMenuModule.html":{},"directives/ContextMenuTriggerDirective.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"interfaces/Crumb.html":{},"injectables/D3ChartService.html":{},"modules/DashboardModule.html":{},"interfaces/DocsSiteTheme.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventBus.html":{},"components/ExperimentsComponent.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"modules/FullscreenModule.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"modules/HomeModule.html":{},"injectables/InMemoryDataService.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"classes/LoadProfile.html":{},"components/LoadingOverlayComponent.html":{},"modules/LoadingOverlayModule.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"modules/MaterialDateModule.html":{},"modules/MaterialModule.html":{},"injectables/MediaQueryService.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"directives/MinValidatorDirective.html":{},"classes/MyHammerConfig.html":{},"modules/NavigatorModule.html":{},"classes/NextCurrentlyOpened.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/NotificationsComponent.html":{},"modules/NxPipesModule.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"classes/ProfileLoaded.html":{},"components/QuickpanelComponent.html":{},"modules/QuickpanelModule.html":{},"injectables/ROPCService.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"interfaces/RouterStateModel.html":{},"modules/ScrollToTopModule.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"modules/ScrollbarModule.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"classes/SetIconMode.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"modules/WidgetsModule.html":{},"pipes/WordsPipe.html":{}}}],["infomsg",{"_index":365,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/AuthModeChanged.html":{},"classes/ChangeAuthMode.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"classes/ProfileLoaded.html":{}}}],["inherit",{"_index":2198,"title":{},"body":{"classes/SvgViewerDefaultConfig.html":{}}}],["init",{"_index":931,"title":{},"body":{"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{}}}],["initializeauth",{"_index":398,"title":{},"body":{"modules/AuthModule.html":{}}}],["initializedata",{"_index":1379,"title":{"classes/InitializeData.html":{}},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["initializedata(_tre",{"_index":1398,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["initialnavig",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["inject",{"_index":39,"title":{"injectables/AccountService.html":{},"injectables/AppConfirmService.html":{},"injectables/AuthGuard.html":{},"injectables/D3ChartService.html":{},"injectables/EventBus.html":{},"injectables/InMemoryDataService.html":{},"injectables/MediaQueryService.html":{},"injectables/PageTitleService.html":{},"injectables/ROPCService.html":{},"injectables/ServiceWorkerService.html":{},"injectables/StyleManagerService.html":{},"injectables/ThemeStorageService.html":{}},"body":{"injectables/AccountService.html":{},"components/AppConfirmComponent.html":{},"injectables/AppConfirmService.html":{},"injectables/AuthGuard.html":{},"injectables/D3ChartService.html":{},"interfaces/DocsSiteTheme.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventBus.html":{},"injectables/InMemoryDataService.html":{},"injectables/MediaQueryService.html":{},"injectables/PageTitleService.html":{},"injectables/ROPCService.html":{},"components/RecentSalesComponent.html":{},"injectables/ServiceWorkerService.html":{},"injectables/StyleManagerService.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"injectables/ThemeStorageService.html":{}}}],["inject(app_base_href",{"_index":2190,"title":{},"body":{"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{}}}],["inject(mat_dialog_data",{"_index":219,"title":{},"body":{"components/AppConfirmComponent.html":{}}}],["injector",{"_index":959,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["inmemorydataservic",{"_index":782,"title":{"injectables/InMemoryDataService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/InMemoryDataService.html":{}}}],["inmemorydbservic",{"_index":1351,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["input",{"_index":87,"title":{},"body":{"components/ActivityComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/ContextMenuTriggerDirective.html":{},"interfaces/Crumb.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"directives/MinValidatorDirective.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotificationsComponent.html":{},"components/RecentSalesComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["input('chartdata",{"_index":1977,"title":{},"body":{"components/RecentSalesComponent.html":{},"components/TrafficSourcesComponent.html":{}}}],["input('chartdataarray",{"_index":2151,"title":{},"body":{"components/SourceOverviewWidgetComponent.html":{}}}],["input('chartopt",{"_index":1978,"title":{},"body":{"components/RecentSalesComponent.html":{},"components/TrafficSourcesComponent.html":{}}}],["input('data",{"_index":1484,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/WidgetComponent.html":{}}}],["input('fe",{"_index":103,"title":{},"body":{"components/ActivityComponent.html":{}}}],["input('isload",{"_index":1537,"title":{},"body":{"components/LoadingOverlayComponent.html":{}}}],["input('item",{"_index":1677,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["input('nxtkscrollbar",{"_index":2038,"title":{},"body":{"directives/ScrollbarDirective.html":{}}}],["input('opt",{"_index":1485,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/WidgetComponent.html":{}}}],["input('quickpanel",{"_index":2247,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["input('sal",{"_index":1976,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["input('sidenav",{"_index":2248,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["input('subtitl",{"_index":105,"title":{},"body":{"components/ActivityComponent.html":{},"components/TrafficSourcesComponent.html":{}}}],["input('textcolor",{"_index":2283,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["input('titl",{"_index":104,"title":{},"body":{"components/ActivityComponent.html":{},"components/TrafficSourcesComponent.html":{}}}],["insert",{"_index":2296,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["insertyourcomponenther",{"_index":849,"title":{},"body":{"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"modules/HomeModule.html":{},"classes/MyHammerConfig.html":{},"modules/NotFoundModule.html":{},"modules/WidgetsModule.html":{}}}],["instal",{"_index":1955,"title":{},"body":{"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{}}}],["instanceof",{"_index":1117,"title":{},"body":{"interfaces/Filter.html":{},"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"components/SearchBarComponent.html":{},"classes/UpdateRouterState.html":{}}}],["integr",{"_index":1461,"title":{},"body":{"components/LandingComponent.html":{}}}],["intercept",{"_index":941,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["intercept(req",{"_index":943,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":938,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptors/error.interceptor",{"_index":809,"title":{},"body":{"modules/CoreModule.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AuthorizationErrorResponse.html":{},"interfaces/Crumb.html":{},"interfaces/DocsSiteTheme.html":{},"interfaces/Entity.html":{},"interfaces/Filter.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuStateModel.html":{},"interfaces/RouterStateModel.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AuthorizationErrorResponse.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Crumb.html":{},"interfaces/DocsSiteTheme.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"interfaces/Filter.html":{},"classes/Go.html":{},"classes/InitializeData.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"interfaces/RouterStateModel.html":{},"classes/SetIconMode.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"classes/UpdateRouterState.html":{}}}],["internation",{"_index":1456,"title":{},"body":{"components/LandingComponent.html":{}}}],["interpol",{"_index":1519,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/WidgetComponent.html":{}}}],["intro",{"_index":1299,"title":{},"body":{"components/HeaderComponent.html":{}}}],["invalid_cli",{"_index":31,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{},"miscellaneous/typealiases.html":{}}}],["invalid_gr",{"_index":32,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{},"miscellaneous/typealiases.html":{}}}],["invalid_request",{"_index":22,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{},"miscellaneous/typealiases.html":{}}}],["invalid_scop",{"_index":28,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{},"miscellaneous/typealiases.html":{}}}],["invalidrequest",{"_index":21,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{},"miscellaneous/typealiases.html":{}}}],["invit",{"_index":1872,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["ipsum",{"_index":523,"title":{},"body":{"components/BlogComponent.html":{}}}],["isdark",{"_index":896,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"injectables/ThemeStorageService.html":{}}}],["isdefault",{"_index":897,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"injectables/ThemeStorageService.html":{}}}],["isfullscreen",{"_index":1179,"title":{},"body":{"components/FullscreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["isleaf(nod",{"_index":2339,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["isload",{"_index":83,"title":{},"body":{"components/ActivityComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/TrafficSourcesComponent.html":{}}}],["isloggedin",{"_index":426,"title":{},"body":{"interfaces/AuthStateModel.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{}}}],["isloggedin(st",{"_index":439,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["islowerthanlarg",{"_index":1604,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["islowerthanmedium",{"_index":1603,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["isopen",{"_index":1413,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"components/NotificationsComponent.html":{},"components/SearchComponent.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/UserMenuComponent.html":{}}}],["isroot(nod",{"_index":2336,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["item",{"_index":1405,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"components/SearchBarComponent.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["item.compon",{"_index":2138,"title":{},"body":{"modules/SidenavModule.html":{}}}],["item.component.html",{"_index":1665,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.scss",{"_index":1664,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.t",{"_index":1663,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:10",{"_index":1672,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:11",{"_index":1671,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:12",{"_index":1670,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:16",{"_index":1675,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:18",{"_index":1676,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:21",{"_index":1674,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:31",{"_index":1673,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.icon",{"_index":1685,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.label",{"_index":1300,"title":{},"body":{"components/HeaderComponent.html":{}}}],["item.model",{"_index":1385,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"modules/NavigatorModule.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["item.model.t",{"_index":1640,"title":{},"body":{"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["item.model.ts:12",{"_index":1649,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["item.model.ts:13",{"_index":1652,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["item.model.ts:14",{"_index":1647,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["item.model.ts:15",{"_index":1648,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["item.model.ts:16",{"_index":1646,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["item.model.ts:17",{"_index":1650,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["item.model.ts:18",{"_index":1645,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["item.nam",{"_index":1686,"title":{},"body":{"components/MenuItemComponent.html":{},"components/SearchBarComponent.html":{}}}],["item.par",{"_index":1420,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["item/menu",{"_index":1662,"title":{},"body":{"components/MenuItemComponent.html":{},"modules/SidenavModule.html":{}}}],["item/sidenav",{"_index":2140,"title":{},"body":{"modules/SidenavModule.html":{}}}],["item?.badge?.valu",{"_index":1687,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["iter",{"_index":2318,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["iterableiter",{"_index":2369,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["itself",{"_index":2334,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["jabba",{"_index":602,"title":{},"body":{"components/BlogComponent.html":{}}}],["jack",{"_index":505,"title":{},"body":{"components/BlogComponent.html":{},"components/QuickpanelComponent.html":{}}}],["jackdaw",{"_index":506,"title":{},"body":{"components/BlogComponent.html":{}}}],["jade",{"_index":583,"title":{},"body":{"components/BlogComponent.html":{}}}],["jango",{"_index":566,"title":{},"body":{"components/BlogComponent.html":{}}}],["jawa",{"_index":554,"title":{},"body":{"components/BlogComponent.html":{}}}],["jello",{"_index":1266,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["jinn",{"_index":570,"title":{},"body":{"components/BlogComponent.html":{}}}],["jinx",{"_index":491,"title":{},"body":{"components/BlogComponent.html":{}}}],["joy",{"_index":1860,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["js",{"_index":2471,"title":{},"body":{"dependencies.html":{}}}],["json.parse(window.localstorage[themestorageservice.storagekey",{"_index":915,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"injectables/ThemeStorageService.html":{}}}],["json.stringify(bodi",{"_index":1150,"title":{},"body":{"interfaces/Filter.html":{}}}],["json.stringify(them",{"_index":912,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"injectables/ThemeStorageService.html":{}}}],["jsonbodi",{"_index":1149,"title":{},"body":{"interfaces/Filter.html":{}}}],["jug",{"_index":516,"title":{},"body":{"components/BlogComponent.html":{}}}],["jump",{"_index":488,"title":{},"body":{"components/BlogComponent.html":{}}}],["k",{"_index":590,"title":{},"body":{"components/BlogComponent.html":{}}}],["karina",{"_index":1851,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["karma",{"_index":2525,"title":{},"body":{"index.html":{}}}],["keep",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["kenobi",{"_index":595,"title":{},"body":{"components/BlogComponent.html":{}}}],["kessel",{"_index":534,"title":{},"body":{"components/BlogComponent.html":{}}}],["key",{"_index":920,"title":{},"body":{"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"interfaces/MenuItem.html":{},"directives/MinValidatorDirective.html":{},"injectables/StyleManagerService.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["keyboard_arrow_down",{"_index":2393,"title":{},"body":{"components/UserMenuComponent.html":{}}}],["kit",{"_index":544,"title":{},"body":{"components/BlogComponent.html":{}}}],["kit/anim",{"_index":1020,"title":{},"body":{"components/FeaturesComponent.html":{},"components/HammerCardComponent.html":{},"components/HomeLayoutComponent.html":{}}}],["kit/app",{"_index":847,"title":{},"body":{"modules/CrudModule.html":{}}}],["kit/auth",{"_index":803,"title":{},"body":{"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"injectables/EventBus.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/ToolbarComponent.html":{},"components/UserMenuComponent.html":{}}}],["kit/breadcrumb",{"_index":884,"title":{},"body":{"modules/DashboardModule.html":{},"components/OverviewComponent.html":{},"modules/ToolbarModule.html":{}}}],["kit/crud#crudmodul",{"_index":887,"title":{},"body":{"modules/DashboardModule.html":{}}}],["kit/dashboard#dashboardmodul",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["kit/experiments#experimentsmodul",{"_index":889,"title":{},"body":{"modules/DashboardModule.html":{}}}],["kit/fullscreen",{"_index":2119,"title":{},"body":{"modules/SharedModule.html":{},"modules/ToolbarModule.html":{}}}],["kit/home#homemodul",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["kit/load",{"_index":883,"title":{},"body":{"modules/DashboardModule.html":{},"modules/WidgetsModule.html":{}}}],["kit/materi",{"_index":1197,"title":{},"body":{"modules/FullscreenModule.html":{},"modules/QuickpanelModule.html":{},"modules/SharedModule.html":{}}}],["kit/navig",{"_index":806,"title":{},"body":{"modules/CoreModule.html":{},"components/MenuItemComponent.html":{},"components/SearchBarComponent.html":{}}}],["kit/not",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["kit/quickpanel",{"_index":880,"title":{},"body":{"modules/DashboardModule.html":{}}}],["kit/scrol",{"_index":1337,"title":{},"body":{"modules/HomeModule.html":{}}}],["kit/scrollbar",{"_index":2145,"title":{},"body":{"modules/SidenavModule.html":{}}}],["kit/shar",{"_index":64,"title":{},"body":{"injectables/AccountService.html":{},"classes/Address.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"modules/HomeModule.html":{},"classes/MyHammerConfig.html":{},"modules/WidgetsModule.html":{}}}],["kit/sidenav",{"_index":882,"title":{},"body":{"modules/DashboardModule.html":{}}}],["kit/svg",{"_index":1338,"title":{},"body":{"modules/HomeModule.html":{}}}],["kit/them",{"_index":1330,"title":{},"body":{"modules/HomeModule.html":{}}}],["kit/toolbar",{"_index":881,"title":{},"body":{"modules/DashboardModule.html":{}}}],["kit/tre",{"_index":1388,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["kit/widgets#widgetsmodul",{"_index":886,"title":{},"body":{"modules/DashboardModule.html":{}}}],["know",{"_index":1868,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["label",{"_index":1295,"title":{},"body":{"components/HeaderComponent.html":{}}}],["land",{"_index":1422,"title":{},"body":{"components/LandingComponent.html":{}}}],["landing.component.html",{"_index":1424,"title":{},"body":{"components/LandingComponent.html":{}}}],["landing.component.scss",{"_index":1423,"title":{},"body":{"components/LandingComponent.html":{}}}],["landingcompon",{"_index":1324,"title":{"components/LandingComponent.html":{}},"body":{"modules/HomeModule.html":{},"components/LandingComponent.html":{}}}],["lando",{"_index":607,"title":{},"body":{"components/BlogComponent.html":{}}}],["last",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"components/TrafficSourcesComponent.html":{}}}],["last_nam",{"_index":167,"title":{},"body":{"classes/Address.html":{}}}],["later",{"_index":1142,"title":{},"body":{"interfaces/Filter.html":{},"injectables/ServiceWorkerService.html":{},"injectables/StyleManagerService.html":{}}}],["layout",{"_index":249,"title":{},"body":{"modules/AppConfirmModule.html":{},"modules/AuthModule.html":{},"modules/BreadcrumbsModule.html":{},"components/FeaturesComponent.html":{},"modules/FullscreenModule.html":{},"components/HomeLayoutComponent.html":{},"injectables/MediaQueryService.html":{},"modules/QuickpanelModule.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/ToolbarModule.html":{},"dependencies.html":{}}}],["layout.compon",{"_index":877,"title":{},"body":{"modules/DashboardModule.html":{},"modules/HomeModule.html":{}}}],["layout.component.html",{"_index":1310,"title":{},"body":{"components/HomeLayoutComponent.html":{}}}],["layout.component.scss",{"_index":1309,"title":{},"body":{"components/HomeLayoutComponent.html":{}}}],["layout.component.t",{"_index":1308,"title":{},"body":{"components/HomeLayoutComponent.html":{}}}],["layout.component.ts:10",{"_index":1312,"title":{},"body":{"components/HomeLayoutComponent.html":{}}}],["layout.component.ts:13",{"_index":1313,"title":{},"body":{"components/HomeLayoutComponent.html":{}}}],["layout.component.ts:15",{"_index":1314,"title":{},"body":{"components/HomeLayoutComponent.html":{}}}],["layout/dashboard",{"_index":876,"title":{},"body":{"modules/DashboardModule.html":{}}}],["layout/hom",{"_index":1307,"title":{},"body":{"components/HomeLayoutComponent.html":{},"modules/HomeModule.html":{}}}],["lazi",{"_index":498,"title":{},"body":{"components/BlogComponent.html":{},"components/FeaturesComponent.html":{}}}],["learn",{"_index":1163,"title":{},"body":{"components/FooterComponent.html":{},"components/HammerCardComponent.html":{}}}],["left",{"_index":1504,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["legend",{"_index":120,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"modules/AppConfirmModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"modules/BreadcrumbsModule.html":{},"components/ContextMenuComponent.html":{},"modules/ContextMenuModule.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"components/ExperimentsComponent.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"modules/FullscreenModule.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"modules/HomeModule.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"modules/LoadingOverlayModule.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/NotificationsComponent.html":{},"modules/NxPipesModule.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"modules/QuickpanelModule.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"modules/ScrollToTopModule.html":{},"components/ScrollbarComponent.html":{},"modules/ScrollbarModule.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"components/SourceOverviewWidgetComponent.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"modules/WidgetsModule.html":{}}}],["leia",{"_index":559,"title":{},"body":{"components/BlogComponent.html":{}}}],["less",{"_index":1058,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["let",{"_index":1863,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["let.direct",{"_index":2123,"title":{},"body":{"modules/SharedModule.html":{}}}],["let.directive.t",{"_index":1714,"title":{},"body":{"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{}}}],["let.directive.ts:12",{"_index":1729,"title":{},"body":{"directives/NgLetDirective.html":{}}}],["let.directive.ts:15",{"_index":1728,"title":{},"body":{"directives/NgLetDirective.html":{}}}],["let.directive.ts:17",{"_index":1727,"title":{},"body":{"directives/NgLetDirective.html":{}}}],["let.directive.ts:4",{"_index":1717,"title":{},"body":{"classes/NgLetContext.html":{}}}],["let.directive.ts:5",{"_index":1718,"title":{},"body":{"classes/NgLetContext.html":{}}}],["level1/level2/level3/level4",{"_index":2303,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["level4",{"_index":2301,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["level4par",{"_index":2305,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["librari",{"_index":1034,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["library_book",{"_index":1027,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["libs/.../account.model.t",{"_index":2487,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../auth.actions.t",{"_index":2486,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../menu",{"_index":2488,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../merg",{"_index":2539,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../nvd3.service.t",{"_index":2541,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../oauth.errors.t",{"_index":2538,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../scrol",{"_index":2490,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../sidenav",{"_index":2493,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../tree.model.t",{"_index":2495,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/animations/src/animations.t",{"_index":180,"title":{},"body":{"classes/Animations.html":{}}}],["libs/app",{"_index":204,"title":{},"body":{"components/AppConfirmComponent.html":{},"modules/AppConfirmModule.html":{},"injectables/AppConfirmService.html":{}}}],["libs/auth/src/auth.actions.t",{"_index":368,"title":{},"body":{"classes/AuthModeChanged.html":{},"classes/ChangeAuthMode.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"classes/ProfileLoaded.html":{},"miscellaneous/enumerations.html":{}}}],["libs/auth/src/auth.actions.ts:12",{"_index":1527,"title":{},"body":{"classes/LoadProfile.html":{}}}],["libs/auth/src/auth.actions.ts:13",{"_index":1528,"title":{},"body":{"classes/LoadProfile.html":{}}}],["libs/auth/src/auth.actions.ts:15",{"_index":655,"title":{},"body":{"classes/ChangeAuthMode.html":{}}}],["libs/auth/src/auth.actions.ts:16",{"_index":656,"title":{},"body":{"classes/ChangeAuthMode.html":{}}}],["libs/auth/src/auth.actions.ts:20",{"_index":1546,"title":{},"body":{"classes/LoginSuccess.html":{}}}],["libs/auth/src/auth.actions.ts:21",{"_index":1547,"title":{},"body":{"classes/LoginSuccess.html":{}}}],["libs/auth/src/auth.actions.ts:26",{"_index":372,"title":{},"body":{"classes/AuthModeChanged.html":{}}}],["libs/auth/src/auth.actions.ts:27",{"_index":373,"title":{},"body":{"classes/AuthModeChanged.html":{}}}],["libs/auth/src/auth.actions.ts:8",{"_index":1544,"title":{},"body":{"classes/Login.html":{}}}],["libs/auth/src/auth.actions.ts:9",{"_index":1545,"title":{},"body":{"classes/Login.html":{}}}],["libs/auth/src/auth.guard.t",{"_index":328,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["libs/auth/src/auth.guard.ts:23",{"_index":333,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["libs/auth/src/auth.guard.ts:26",{"_index":337,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["libs/auth/src/auth.module.t",{"_index":394,"title":{},"body":{"modules/AuthModule.html":{}}}],["libs/auth/src/auth.state.t",{"_index":425,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["libs/auth/src/auth.state.ts:19",{"_index":430,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["libs/auth/src/auth.state.ts:20",{"_index":431,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["libs/auth/src/auth.state.ts:21",{"_index":428,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["libs/auth/src/oauth.errors.t",{"_index":5,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{},"miscellaneous/typealiases.html":{}}}],["libs/auth/src/oauth.errors.ts:22",{"_index":16,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{}}}],["libs/auth/src/oauth.errors.ts:23",{"_index":18,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{}}}],["libs/auth/src/oauth.errors.ts:24",{"_index":20,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{}}}],["libs/auth/src/oauth.errors.ts:28",{"_index":473,"title":{},"body":{"interfaces/AuthorizationErrorResponse.html":{}}}],["libs/auth/src/oauth.errors.ts:29",{"_index":474,"title":{},"body":{"interfaces/AuthorizationErrorResponse.html":{}}}],["libs/auth/src/oauth.errors.ts:30",{"_index":475,"title":{},"body":{"interfaces/AuthorizationErrorResponse.html":{}}}],["libs/auth/src/oauth.errors.ts:31",{"_index":476,"title":{},"body":{"interfaces/AuthorizationErrorResponse.html":{}}}],["libs/auth/src/ropc.service.t",{"_index":1910,"title":{},"body":{"injectables/ROPCService.html":{}}}],["libs/auth/src/ropc.service.ts:10",{"_index":1914,"title":{},"body":{"injectables/ROPCService.html":{}}}],["libs/auth/src/ropc.service.ts:16",{"_index":1916,"title":{},"body":{"injectables/ROPCService.html":{}}}],["libs/auth/src/ropc.service.ts:7",{"_index":1911,"title":{},"body":{"injectables/ROPCService.html":{}}}],["libs/breadcrumbs/src/breadcrumbs.component.t",{"_index":613,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Crumb.html":{}}}],["libs/breadcrumbs/src/breadcrumbs.component.ts:14",{"_index":621,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["libs/breadcrumbs/src/breadcrumbs.component.ts:15",{"_index":620,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["libs/breadcrumbs/src/breadcrumbs.component.ts:19",{"_index":622,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["libs/breadcrumbs/src/breadcrumbs.component.ts:4",{"_index":852,"title":{},"body":{"interfaces/Crumb.html":{}}}],["libs/breadcrumbs/src/breadcrumbs.component.ts:5",{"_index":851,"title":{},"body":{"interfaces/Crumb.html":{}}}],["libs/breadcrumbs/src/breadcrumbs.module.t",{"_index":631,"title":{},"body":{"modules/BreadcrumbsModule.html":{}}}],["libs/context",{"_index":698,"title":{},"body":{"components/ContextMenuComponent.html":{},"modules/ContextMenuModule.html":{},"directives/ContextMenuTriggerDirective.html":{}}}],["libs/crud/src/containers/accounts/account.model.t",{"_index":152,"title":{},"body":{"classes/Address.html":{},"miscellaneous/enumerations.html":{}}}],["libs/crud/src/containers/accounts/account.model.ts:18",{"_index":158,"title":{},"body":{"classes/Address.html":{}}}],["libs/crud/src/containers/accounts/account.model.ts:19",{"_index":160,"title":{},"body":{"classes/Address.html":{}}}],["libs/crud/src/containers/accounts/account.service.t",{"_index":41,"title":{},"body":{"injectables/AccountService.html":{}}}],["libs/crud/src/containers/accounts/account.service.ts:9",{"_index":47,"title":{},"body":{"injectables/AccountService.html":{}}}],["libs/crud/src/crud.module.t",{"_index":842,"title":{},"body":{"modules/CrudModule.html":{}}}],["libs/dashboard/src/components/rainbow/rainbow.component.t",{"_index":1957,"title":{},"body":{"components/RainbowComponent-1.html":{}}}],["libs/dashboard/src/components/rainbow/rainbow.component.ts:12",{"_index":1959,"title":{},"body":{"components/RainbowComponent-1.html":{}}}],["libs/dashboard/src/components/rainbow/rainbow.component.ts:9",{"_index":1958,"title":{},"body":{"components/RainbowComponent-1.html":{}}}],["libs/dashboard/src/containers/overview/overview.component.t",{"_index":1798,"title":{},"body":{"components/OverviewComponent.html":{}}}],["libs/dashboard/src/containers/overview/overview.component.ts:14",{"_index":1803,"title":{},"body":{"components/OverviewComponent.html":{}}}],["libs/dashboard/src/containers/overview/overview.component.ts:15",{"_index":1804,"title":{},"body":{"components/OverviewComponent.html":{}}}],["libs/dashboard/src/containers/overview/overview.component.ts:16",{"_index":1801,"title":{},"body":{"components/OverviewComponent.html":{}}}],["libs/dashboard/src/containers/overview/overview.component.ts:19",{"_index":1802,"title":{},"body":{"components/OverviewComponent.html":{}}}],["libs/dashboard/src/dashboard.module.t",{"_index":874,"title":{},"body":{"modules/DashboardModule.html":{}}}],["libs/experiments/src/components/hamm",{"_index":1237,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["libs/experiments/src/components/hammertime/hammertime.directive.t",{"_index":1268,"title":{},"body":{"directives/HammertimeDirective.html":{}}}],["libs/experiments/src/components/hammertime/hammertime.directive.ts:13",{"_index":1275,"title":{},"body":{"directives/HammertimeDirective.html":{}}}],["libs/experiments/src/components/hammertime/hammertime.directive.ts:7",{"_index":1273,"title":{},"body":{"directives/HammertimeDirective.html":{}}}],["libs/experiments/src/components/hammertime/hammertime.directive.ts:8",{"_index":1272,"title":{},"body":{"directives/HammertimeDirective.html":{}}}],["libs/experiments/src/containers/experiments/experiments.component.t",{"_index":978,"title":{},"body":{"components/ExperimentsComponent.html":{}}}],["libs/experiments/src/containers/experiments/experiments.component.ts:11",{"_index":982,"title":{},"body":{"components/ExperimentsComponent.html":{}}}],["libs/experiments/src/containers/experiments/experiments.component.ts:8",{"_index":981,"title":{},"body":{"components/ExperimentsComponent.html":{}}}],["libs/experiments/src/experiments.module.t",{"_index":988,"title":{},"body":{"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{}}}],["libs/experiments/src/experiments.module.ts:13",{"_index":1706,"title":{},"body":{"classes/MyHammerConfig.html":{}}}],["libs/fullscreen/src/fullscreen.component.t",{"_index":1175,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["libs/fullscreen/src/fullscreen.component.ts:10",{"_index":1181,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["libs/fullscreen/src/fullscreen.component.ts:13",{"_index":1182,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["libs/fullscreen/src/fullscreen.component.ts:15",{"_index":1183,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["libs/fullscreen/src/fullscreen.module.t",{"_index":1195,"title":{},"body":{"modules/FullscreenModule.html":{}}}],["libs/home/src/components/header/header.component.t",{"_index":1283,"title":{},"body":{"components/HeaderComponent.html":{}}}],["libs/home/src/components/header/header.component.ts:13",{"_index":1294,"title":{},"body":{"components/HeaderComponent.html":{}}}],["libs/home/src/components/header/header.component.ts:15",{"_index":1296,"title":{},"body":{"components/HeaderComponent.html":{}}}],["libs/home/src/components/header/header.component.ts:19",{"_index":1289,"title":{},"body":{"components/HeaderComponent.html":{}}}],["libs/home/src/components/header/header.component.ts:23",{"_index":1292,"title":{},"body":{"components/HeaderComponent.html":{}}}],["libs/home/src/components/header/header.component.ts:25",{"_index":1290,"title":{},"body":{"components/HeaderComponent.html":{}}}],["libs/home/src/components/header/header.component.ts:29",{"_index":1291,"title":{},"body":{"components/HeaderComponent.html":{}}}],["libs/home/src/components/header/header.component.ts:33",{"_index":1293,"title":{},"body":{"components/HeaderComponent.html":{}}}],["libs/home/src/containers/blog/blog.component.t",{"_index":478,"title":{},"body":{"components/BlogComponent.html":{}}}],["libs/home/src/containers/blog/blog.component.ts:11",{"_index":483,"title":{},"body":{"components/BlogComponent.html":{}}}],["libs/home/src/containers/blog/blog.component.ts:8",{"_index":482,"title":{},"body":{"components/BlogComponent.html":{}}}],["libs/home/src/containers/features/features.component.t",{"_index":1004,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["libs/home/src/containers/features/features.component.ts:12",{"_index":1016,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["libs/home/src/containers/features/features.component.ts:13",{"_index":1018,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["libs/home/src/containers/features/features.component.ts:15",{"_index":1012,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["libs/home/src/containers/features/features.component.ts:17",{"_index":1014,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["libs/home/src/containers/hom",{"_index":1306,"title":{},"body":{"components/HomeLayoutComponent.html":{}}}],["libs/home/src/containers/landing/landing.component.t",{"_index":1421,"title":{},"body":{"components/LandingComponent.html":{}}}],["libs/home/src/containers/landing/landing.component.ts:10",{"_index":1429,"title":{},"body":{"components/LandingComponent.html":{}}}],["libs/home/src/containers/landing/landing.component.ts:12",{"_index":1428,"title":{},"body":{"components/LandingComponent.html":{}}}],["libs/home/src/containers/landing/landing.component.ts:9",{"_index":1427,"title":{},"body":{"components/LandingComponent.html":{}}}],["libs/home/src/home.module.t",{"_index":1329,"title":{},"body":{"modules/HomeModule.html":{}}}],["libs/load",{"_index":1530,"title":{},"body":{"components/LoadingOverlayComponent.html":{},"modules/LoadingOverlayModule.html":{}}}],["libs/material/src/cdk.module.t",{"_index":634,"title":{},"body":{"modules/CdkModule.html":{}}}],["libs/material/src/materi",{"_index":1549,"title":{},"body":{"modules/MaterialDateModule.html":{}}}],["libs/material/src/material.module.t",{"_index":1571,"title":{},"body":{"modules/MaterialModule.html":{}}}],["libs/navigator/src/models/menu",{"_index":1639,"title":{},"body":{"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["libs/navigator/src/navigator.module.t",{"_index":1707,"title":{},"body":{"modules/NavigatorModule.html":{}}}],["libs/navigator/src/services/sidenav",{"_index":2498,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/navigator/src/state/menu.state.t",{"_index":1380,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["libs/navigator/src/state/menu.state.ts:10",{"_index":1710,"title":{},"body":{"classes/NextCurrentlyOpened.html":{}}}],["libs/navigator/src/state/menu.state.ts:11",{"_index":1711,"title":{},"body":{"classes/NextCurrentlyOpened.html":{}}}],["libs/navigator/src/state/menu.state.ts:14",{"_index":2112,"title":{},"body":{"classes/SetIconMode.html":{}}}],["libs/navigator/src/state/menu.state.ts:15",{"_index":2113,"title":{},"body":{"classes/SetIconMode.html":{}}}],["libs/navigator/src/state/menu.state.ts:18",{"_index":2228,"title":{},"body":{"classes/ToggleCurrentlyOpened.html":{}}}],["libs/navigator/src/state/menu.state.ts:19",{"_index":2229,"title":{},"body":{"classes/ToggleCurrentlyOpened.html":{}}}],["libs/navigator/src/state/menu.state.ts:22",{"_index":2230,"title":{},"body":{"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["libs/navigator/src/state/menu.state.ts:23",{"_index":2231,"title":{},"body":{"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["libs/navigator/src/state/menu.state.ts:27",{"_index":1691,"title":{},"body":{"interfaces/MenuStateModel.html":{}}}],["libs/navigator/src/state/menu.state.ts:28",{"_index":1689,"title":{},"body":{"interfaces/MenuStateModel.html":{}}}],["libs/navigator/src/state/menu.state.ts:29",{"_index":1690,"title":{},"body":{"interfaces/MenuStateModel.html":{}}}],["libs/navigator/src/state/menu.state.ts:6",{"_index":1381,"title":{},"body":{"classes/InitializeData.html":{}}}],["libs/navigator/src/state/menu.state.ts:7",{"_index":1382,"title":{},"body":{"classes/InitializeData.html":{}}}],["libs/not",{"_index":1732,"title":{},"body":{"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{}}}],["libs/nx",{"_index":659,"title":{},"body":{"pipes/CharactersPipe.html":{},"modules/NxPipesModule.html":{},"pipes/WordsPipe.html":{}}}],["libs/quickpanel/src/quickpanel.component.t",{"_index":1824,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["libs/quickpanel/src/quickpanel.component.ts:10",{"_index":1867,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["libs/quickpanel/src/quickpanel.component.ts:12",{"_index":1843,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["libs/quickpanel/src/quickpanel.component.ts:39",{"_index":1876,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["libs/quickpanel/src/quickpanel.component.ts:62",{"_index":1865,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["libs/quickpanel/src/quickpanel.component.ts:69",{"_index":1830,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["libs/quickpanel/src/quickpanel.component.ts:73",{"_index":1831,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["libs/quickpanel/src/quickpanel.module.t",{"_index":1905,"title":{},"body":{"modules/QuickpanelModule.html":{}}}],["libs/scrol",{"_index":2008,"title":{},"body":{"modules/ScrollToTopModule.html":{},"miscellaneous/enumerations.html":{}}}],["libs/scrollbar/src/scrollbar.component.t",{"_index":2013,"title":{},"body":{"components/ScrollbarComponent.html":{}}}],["libs/scrollbar/src/scrollbar.component.ts:11",{"_index":2023,"title":{},"body":{"components/ScrollbarComponent.html":{}}}],["libs/scrollbar/src/scrollbar.component.ts:12",{"_index":2020,"title":{},"body":{"components/ScrollbarComponent.html":{}}}],["libs/scrollbar/src/scrollbar.component.ts:16",{"_index":2022,"title":{},"body":{"components/ScrollbarComponent.html":{}}}],["libs/scrollbar/src/scrollbar.directive.t",{"_index":2031,"title":{},"body":{"directives/ScrollbarDirective.html":{}}}],["libs/scrollbar/src/scrollbar.directive.ts:10",{"_index":2035,"title":{},"body":{"directives/ScrollbarDirective.html":{}}}],["libs/scrollbar/src/scrollbar.directive.ts:12",{"_index":2034,"title":{},"body":{"directives/ScrollbarDirective.html":{}}}],["libs/scrollbar/src/scrollbar.directive.ts:16",{"_index":2036,"title":{},"body":{"directives/ScrollbarDirective.html":{}}}],["libs/scrollbar/src/scrollbar.module.t",{"_index":2046,"title":{},"body":{"modules/ScrollbarModule.html":{}}}],["libs/shared/src/components/footer/footer.component.t",{"_index":1152,"title":{},"body":{"components/FooterComponent.html":{}}}],["libs/shared/src/components/footer/footer.component.ts:11",{"_index":1157,"title":{},"body":{"components/FooterComponent.html":{}}}],["libs/shared/src/components/footer/footer.component.ts:14",{"_index":1158,"title":{},"body":{"components/FooterComponent.html":{}}}],["libs/shared/src/components/footer/footer.component.ts:16",{"_index":1160,"title":{},"body":{"components/FooterComponent.html":{}}}],["libs/shared/src/containers/entity/entity.model.t",{"_index":919,"title":{},"body":{"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{}}}],["libs/shared/src/containers/entity/entity.model.ts:10",{"_index":934,"title":{},"body":{"classes/EntityColumnDef.html":{}}}],["libs/shared/src/containers/entity/entity.model.ts:2",{"_index":921,"title":{},"body":{"interfaces/Entity.html":{}}}],["libs/shared/src/containers/entity/entity.model.ts:7",{"_index":936,"title":{},"body":{"classes/EntityColumnDef.html":{}}}],["libs/shared/src/containers/entity/entity.model.ts:8",{"_index":935,"title":{},"body":{"classes/EntityColumnDef.html":{}}}],["libs/shared/src/containers/entity/entity.model.ts:9",{"_index":937,"title":{},"body":{"classes/EntityColumnDef.html":{}}}],["libs/shared/src/containers/entity/entity.service.t",{"_index":1068,"title":{},"body":{"interfaces/Filter.html":{}}}],["libs/shared/src/containers/entity/entity.service.ts:9",{"_index":1069,"title":{},"body":{"interfaces/Filter.html":{}}}],["libs/shared/src/directives/min/min.directive.t",{"_index":1692,"title":{},"body":{"directives/MinValidatorDirective.html":{}}}],["libs/shared/src/directives/min/min.directive.ts:10",{"_index":1696,"title":{},"body":{"directives/MinValidatorDirective.html":{}}}],["libs/shared/src/directives/min/min.directive.ts:12",{"_index":1699,"title":{},"body":{"directives/MinValidatorDirective.html":{}}}],["libs/shared/src/directives/ng",{"_index":1713,"title":{},"body":{"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{}}}],["libs/shared/src/shared.module.t",{"_index":2118,"title":{},"body":{"modules/SharedModule.html":{}}}],["libs/sidenav/src/components/menu",{"_index":1661,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["libs/sidenav/src/sidenav.module.t",{"_index":2136,"title":{},"body":{"modules/SidenavModule.html":{}}}],["libs/svg",{"_index":2183,"title":{},"body":{"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"modules/SvgViewerModule.html":{}}}],["libs/them",{"_index":891,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"injectables/StyleManagerService.html":{},"modules/ThemePickerModule.html":{},"injectables/ThemeStorageService.html":{}}}],["libs/toolbar/src/components/click",{"_index":672,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["libs/toolbar/src/components/notifications/notifications.component.t",{"_index":1759,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["libs/toolbar/src/components/notifications/notifications.component.ts:10",{"_index":1766,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["libs/toolbar/src/components/notifications/notifications.component.ts:14",{"_index":1770,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["libs/toolbar/src/components/notifications/notifications.component.ts:16",{"_index":1773,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["libs/toolbar/src/components/notifications/notifications.component.ts:20",{"_index":1771,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["libs/toolbar/src/components/notifications/notifications.component.ts:24",{"_index":1772,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["libs/toolbar/src/components/notifications/notifications.component.ts:26",{"_index":1769,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["libs/toolbar/src/components/notifications/notifications.component.ts:9",{"_index":1767,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["libs/toolbar/src/components/search",{"_index":2050,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["libs/toolbar/src/components/search/search.component.t",{"_index":2082,"title":{},"body":{"components/SearchComponent.html":{}}}],["libs/toolbar/src/components/search/search.component.ts:11",{"_index":2086,"title":{},"body":{"components/SearchComponent.html":{}}}],["libs/toolbar/src/components/search/search.component.ts:15",{"_index":2088,"title":{},"body":{"components/SearchComponent.html":{}}}],["libs/toolbar/src/components/search/search.component.ts:17",{"_index":2089,"title":{},"body":{"components/SearchComponent.html":{}}}],["libs/toolbar/src/components/search/search.component.ts:24",{"_index":2087,"title":{},"body":{"components/SearchComponent.html":{}}}],["libs/toolbar/src/components/search/search.component.ts:9",{"_index":2091,"title":{},"body":{"components/SearchComponent.html":{}}}],["libs/toolbar/src/components/us",{"_index":2379,"title":{},"body":{"components/UserMenuComponent.html":{}}}],["libs/toolbar/src/toolbar.component.t",{"_index":2233,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["libs/toolbar/src/toolbar.component.ts:13",{"_index":2244,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["libs/toolbar/src/toolbar.component.ts:15",{"_index":2240,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["libs/toolbar/src/toolbar.component.ts:16",{"_index":2241,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["libs/toolbar/src/toolbar.component.ts:17",{"_index":2243,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["libs/toolbar/src/toolbar.component.ts:18",{"_index":2245,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["libs/toolbar/src/toolbar.component.ts:19",{"_index":2239,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["libs/toolbar/src/toolbar.component.ts:23",{"_index":2242,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["libs/toolbar/src/toolbar.module.t",{"_index":2255,"title":{},"body":{"modules/ToolbarModule.html":{}}}],["libs/tree/src/merg",{"_index":2542,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/tree/src/tree.model.t",{"_index":2287,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["libs/tree/src/tree.model.ts:38",{"_index":2376,"title":{},"body":{"interfaces/TreeNode.html":{}}}],["libs/tree/src/tree.model.ts:39",{"_index":2375,"title":{},"body":{"interfaces/TreeNode.html":{}}}],["libs/tree/src/tree.model.ts:44",{"_index":2290,"title":{},"body":{"interfaces/TreeConfig.html":{}}}],["libs/widgets/src/components/activity/activity.component.t",{"_index":74,"title":{},"body":{"components/ActivityComponent.html":{}}}],["libs/widgets/src/components/activity/activity.component.ts:10",{"_index":95,"title":{},"body":{"components/ActivityComponent.html":{}}}],["libs/widgets/src/components/activity/activity.component.ts:12",{"_index":91,"title":{},"body":{"components/ActivityComponent.html":{}}}],["libs/widgets/src/components/activity/activity.component.ts:16",{"_index":98,"title":{},"body":{"components/ActivityComponent.html":{}}}],["libs/widgets/src/components/activity/activity.component.ts:18",{"_index":101,"title":{},"body":{"components/ActivityComponent.html":{}}}],["libs/widgets/src/components/activity/activity.component.ts:8",{"_index":92,"title":{},"body":{"components/ActivityComponent.html":{}}}],["libs/widgets/src/components/activity/activity.component.ts:9",{"_index":97,"title":{},"body":{"components/ActivityComponent.html":{}}}],["libs/widgets/src/components/charts/nvd3/nvd3.service.t",{"_index":854,"title":{},"body":{"injectables/D3ChartService.html":{},"miscellaneous/typealiases.html":{}}}],["libs/widgets/src/components/charts/nvd3/nvd3.service.ts:12",{"_index":858,"title":{},"body":{"injectables/D3ChartService.html":{}}}],["libs/widgets/src/components/charts/nvd3/nvd3.service.ts:16",{"_index":860,"title":{},"body":{"injectables/D3ChartService.html":{}}}],["libs/widgets/src/components/charts/nvd3/nvd3.service.ts:9",{"_index":857,"title":{},"body":{"injectables/D3ChartService.html":{}}}],["libs/widgets/src/components/rainbow/rainbow.component.t",{"_index":1945,"title":{},"body":{"components/RainbowComponent.html":{}}}],["libs/widgets/src/components/rainbow/rainbow.component.ts:12",{"_index":1951,"title":{},"body":{"components/RainbowComponent.html":{}}}],["libs/widgets/src/components/rainbow/rainbow.component.ts:9",{"_index":1950,"title":{},"body":{"components/RainbowComponent.html":{}}}],["libs/widgets/src/components/rec",{"_index":1961,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["libs/widgets/src/components/traff",{"_index":2266,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["libs/widgets/src/components/widget",{"_index":1463,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/WidgetComponent.html":{}}}],["libs/widgets/src/widgets.module.t",{"_index":2423,"title":{},"body":{"modules/WidgetsModule.html":{}}}],["licens",{"_index":1167,"title":{},"body":{"components/FooterComponent.html":{}}}],["limit",{"_index":664,"title":{},"body":{"pipes/CharactersPipe.html":{},"pipes/WordsPipe.html":{}}}],["line",{"_index":130,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["linechart",{"_index":1983,"title":{},"body":{"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["linechartcompon",{"_index":2420,"title":{},"body":{"modules/WidgetsModule.html":{}}}],["linechartwidgetcompon",{"_index":129,"title":{"components/LineChartWidgetComponent.html":{}},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"modules/WidgetsModule.html":{}}}],["link",{"_index":624,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Crumb.html":{},"components/FeaturesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/MenuItem.html":{},"components/OverviewComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["link/dropdown/icon/separator/extlink",{"_index":1657,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["linkel",{"_index":2176,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["linkel.classlist.add(getclassnameforkey(key",{"_index":2179,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["linkel.setattribute('rel",{"_index":2178,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["liquor",{"_index":515,"title":{},"body":{"components/BlogComponent.html":{}}}],["list",{"_index":1884,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["liter",{"_index":1200,"title":{},"body":{"classes/Go.html":{},"classes/Login.html":{},"interfaces/MenuItem.html":{},"directives/MinValidatorDirective.html":{}}}],["live",{"_index":2506,"title":{},"body":{"index.html":{}}}],["ll",{"_index":1560,"title":{},"body":{"modules/MaterialDateModule.html":{}}}],["load",{"_index":833,"title":{},"body":{"modules/CoreModule.html":{},"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/LoadingOverlayComponent.html":{},"modules/LoadingOverlayModule.html":{},"components/QuickpanelComponent.html":{},"injectables/ServiceWorkerService.html":{},"injectables/StyleManagerService.html":{}}}],["loadchildren",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["loadingoverlaycompon",{"_index":1529,"title":{"components/LoadingOverlayComponent.html":{}},"body":{"components/LoadingOverlayComponent.html":{},"modules/LoadingOverlayModule.html":{}}}],["loadingoverlaymodul",{"_index":873,"title":{"modules/LoadingOverlayModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/LoadingOverlayModule.html":{},"modules/WidgetsModule.html":{},"modules.html":{}}}],["loadingsubject",{"_index":1076,"title":{},"body":{"interfaces/Filter.html":{}}}],["loadprofil",{"_index":380,"title":{"classes/LoadProfile.html":{}},"body":{"classes/AuthModeChanged.html":{},"classes/ChangeAuthMode.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"classes/ProfileLoaded.html":{}}}],["lobot",{"_index":582,"title":{},"body":{"components/BlogComponent.html":{}}}],["locat",{"_index":2192,"title":{},"body":{"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{}}}],["location.getbasehreffromdom",{"_index":2195,"title":{},"body":{"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{}}}],["lock_open",{"_index":1304,"title":{},"body":{"components/HeaderComponent.html":{}}}],["log",{"_index":2438,"title":{},"body":{"changelog.html":{}}}],["login",{"_index":344,"title":{"classes/Login.html":{}},"body":{"injectables/AuthGuard.html":{},"classes/AuthModeChanged.html":{},"interfaces/AuthStateModel.html":{},"classes/ChangeAuthMode.html":{},"injectables/EventBus.html":{},"components/HeaderComponent.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"classes/ProfileLoaded.html":{},"injectables/ROPCService.html":{}}}],["login(usernam",{"_index":1912,"title":{},"body":{"injectables/ROPCService.html":{}}}],["logincancel",{"_index":384,"title":{"classes/LoginCanceled.html":{}},"body":{"classes/AuthModeChanged.html":{},"interfaces/AuthStateModel.html":{},"classes/ChangeAuthMode.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"classes/ProfileLoaded.html":{}}}],["logincompon",{"_index":391,"title":{},"body":{"modules/AuthModule.html":{}}}],["loginsuccess",{"_index":383,"title":{"classes/LoginSuccess.html":{}},"body":{"classes/AuthModeChanged.html":{},"interfaces/AuthStateModel.html":{},"classes/ChangeAuthMode.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"classes/ProfileLoaded.html":{}}}],["loginsuccess(profil",{"_index":472,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["logout",{"_index":379,"title":{"classes/Logout.html":{}},"body":{"classes/AuthModeChanged.html":{},"interfaces/AuthStateModel.html":{},"classes/ChangeAuthMode.html":{},"components/HeaderComponent.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"classes/ProfileLoaded.html":{},"injectables/ROPCService.html":{},"components/UserMenuComponent.html":{}}}],["logoutsuccess",{"_index":385,"title":{"classes/LogoutSuccess.html":{}},"body":{"classes/AuthModeChanged.html":{},"interfaces/AuthStateModel.html":{},"classes/ChangeAuthMode.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"classes/ProfileLoaded.html":{}}}],["loop",{"_index":353,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["love",{"_index":507,"title":{},"body":{"components/BlogComponent.html":{}}}],["luca",{"_index":522,"title":{},"body":{"components/BlogComponent.html":{}}}],["luke",{"_index":576,"title":{},"body":{"components/BlogComponent.html":{}}}],["luuk",{"_index":600,"title":{},"body":{"components/BlogComponent.html":{}}}],["mace",{"_index":555,"title":{},"body":{"components/BlogComponent.html":{}}}],["make",{"_index":177,"title":{},"body":{"classes/Address.html":{},"components/BlogComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["male",{"_index":176,"title":{},"body":{"classes/Address.html":{},"miscellaneous/enumerations.html":{}}}],["manag",{"_index":1044,"title":{},"body":{"components/FeaturesComponent.html":{},"injectables/StyleManagerService.html":{}}}],["manager.servic",{"_index":2220,"title":{},"body":{"modules/ThemePickerModule.html":{}}}],["manager.service.t",{"_index":2159,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["manager.service.ts:12",{"_index":2168,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["manager.service.ts:19",{"_index":2165,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["mandalor",{"_index":538,"title":{},"body":{"components/BlogComponent.html":{}}}],["map",{"_index":56,"title":{},"body":{"injectables/AccountService.html":{},"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"interfaces/AuthStateModel.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"interfaces/RouterStateModel.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["map((rout",{"_index":1220,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["map(profil",{"_index":471,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["mara",{"_index":536,"title":{},"body":{"components/BlogComponent.html":{}}}],["margin",{"_index":1500,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["mark",{"_index":1779,"title":{},"body":{"components/NotificationsComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["mat",{"_index":712,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/NotFoundComponent.html":{}}}],["mat_date_format",{"_index":1553,"title":{},"body":{"modules/MaterialDateModule.html":{}}}],["mat_date_local",{"_index":1554,"title":{},"body":{"modules/MaterialDateModule.html":{}}}],["mat_dialog_data",{"_index":217,"title":{},"body":{"components/AppConfirmComponent.html":{}}}],["matautocompletemodul",{"_index":1572,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbadgemodul",{"_index":1573,"title":{},"body":{"modules/MaterialModule.html":{},"modules/ToolbarModule.html":{}}}],["matbuttonmodul",{"_index":246,"title":{},"body":{"modules/AppConfirmModule.html":{},"modules/AuthModule.html":{},"modules/ContextMenuModule.html":{},"modules/MaterialModule.html":{},"modules/NotFoundModule.html":{},"modules/QuickpanelModule.html":{},"modules/ScrollToTopModule.html":{},"modules/SidenavModule.html":{},"modules/ThemePickerModule.html":{},"modules/ToolbarModule.html":{}}}],["matbuttontogglemodul",{"_index":1574,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodul",{"_index":405,"title":{},"body":{"modules/AuthModule.html":{},"modules/MaterialModule.html":{}}}],["match",{"_index":38,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"injectables/AccountService.html":{},"components/ActivityComponent.html":{},"classes/Address.html":{},"classes/Animations.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"modules/AppConfirmModule.html":{},"injectables/AppConfirmService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/AuthGuard.html":{},"classes/AuthModeChanged.html":{},"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AuthorizationErrorResponse.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"modules/BreadcrumbsModule.html":{},"modules/CdkModule.html":{},"classes/ChangeAuthMode.html":{},"pipes/CharactersPipe.html":{},"directives/ClickOutsideDirective.html":{},"components/ContextMenuComponent.html":{},"modules/ContextMenuModule.html":{},"directives/ContextMenuTriggerDirective.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"interfaces/Crumb.html":{},"injectables/D3ChartService.html":{},"modules/DashboardModule.html":{},"interfaces/DocsSiteTheme.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventBus.html":{},"components/ExperimentsComponent.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"modules/FullscreenModule.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"modules/HomeModule.html":{},"injectables/InMemoryDataService.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"classes/LoadProfile.html":{},"components/LoadingOverlayComponent.html":{},"modules/LoadingOverlayModule.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"modules/MaterialDateModule.html":{},"modules/MaterialModule.html":{},"injectables/MediaQueryService.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"directives/MinValidatorDirective.html":{},"classes/MyHammerConfig.html":{},"modules/NavigatorModule.html":{},"classes/NextCurrentlyOpened.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/NotificationsComponent.html":{},"modules/NxPipesModule.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"classes/ProfileLoaded.html":{},"components/QuickpanelComponent.html":{},"modules/QuickpanelModule.html":{},"injectables/ROPCService.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"interfaces/RouterStateModel.html":{},"modules/ScrollToTopModule.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"modules/ScrollbarModule.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"classes/SetIconMode.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"modules/WidgetsModule.html":{},"pipes/WordsPipe.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["matcheckboxmodul",{"_index":406,"title":{},"body":{"modules/AuthModule.html":{},"modules/MaterialModule.html":{}}}],["matchipsmodul",{"_index":1575,"title":{},"body":{"modules/MaterialModule.html":{},"modules/SidenavModule.html":{}}}],["matdateformat",{"_index":1555,"title":{},"body":{"modules/MaterialDateModule.html":{}}}],["matdatepickermodul",{"_index":1556,"title":{},"body":{"modules/MaterialDateModule.html":{},"modules/MaterialModule.html":{}}}],["matdialog",{"_index":252,"title":{},"body":{"injectables/AppConfirmService.html":{}}}],["matdialogconfig",{"_index":260,"title":{},"body":{"injectables/AppConfirmService.html":{}}}],["matdialogmodul",{"_index":245,"title":{},"body":{"modules/AppConfirmModule.html":{},"modules/AuthModule.html":{},"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":213,"title":{},"body":{"components/AppConfirmComponent.html":{},"injectables/AppConfirmService.html":{}}}],["matdividermodul",{"_index":1576,"title":{},"body":{"modules/MaterialModule.html":{}}}],["materi",{"_index":1032,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["material_modul",{"_index":1596,"title":{},"body":{"modules/MaterialModule.html":{}}}],["materialdatemodul",{"_index":1548,"title":{"modules/MaterialDateModule.html":{}},"body":{"modules/MaterialDateModule.html":{},"modules/SharedModule.html":{},"modules.html":{}}}],["materialmodul",{"_index":1194,"title":{"modules/MaterialModule.html":{}},"body":{"modules/FullscreenModule.html":{},"modules/MaterialModule.html":{},"modules/QuickpanelModule.html":{},"modules/SharedModule.html":{},"modules.html":{}}}],["matexpansionmodul",{"_index":1577,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matformfieldmodul",{"_index":407,"title":{},"body":{"modules/AuthModule.html":{},"modules/MaterialModule.html":{}}}],["matgridlistmodul",{"_index":1578,"title":{},"body":{"modules/MaterialModule.html":{},"modules/ThemePickerModule.html":{},"modules/ToolbarModule.html":{}}}],["math.abs(limit",{"_index":2436,"title":{},"body":{"pipes/WordsPipe.html":{}}}],["maticonmodul",{"_index":408,"title":{},"body":{"modules/AuthModule.html":{},"modules/BreadcrumbsModule.html":{},"modules/MaterialModule.html":{},"modules/NotFoundModule.html":{},"modules/QuickpanelModule.html":{},"modules/ScrollToTopModule.html":{},"modules/SidenavModule.html":{},"modules/ThemePickerModule.html":{},"modules/ToolbarModule.html":{}}}],["matinputmodul",{"_index":409,"title":{},"body":{"modules/AuthModule.html":{},"modules/MaterialModule.html":{},"modules/ToolbarModule.html":{}}}],["matlistmodul",{"_index":1579,"title":{},"body":{"modules/MaterialModule.html":{},"modules/QuickpanelModule.html":{},"modules/SidenavModule.html":{},"modules/ToolbarModule.html":{}}}],["matmenumodul",{"_index":1580,"title":{},"body":{"modules/MaterialModule.html":{},"modules/QuickpanelModule.html":{},"modules/ThemePickerModule.html":{},"modules/ToolbarModule.html":{}}}],["matmomentdatemodul",{"_index":1551,"title":{},"body":{"modules/MaterialDateModule.html":{}}}],["matnativedatemodul",{"_index":1581,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodul",{"_index":1582,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodul",{"_index":1543,"title":{},"body":{"modules/LoadingOverlayModule.html":{},"modules/MaterialModule.html":{},"modules/QuickpanelModule.html":{}}}],["matprogressspinnermodul",{"_index":1583,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodul",{"_index":1584,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matripplemodul",{"_index":1585,"title":{},"body":{"modules/MaterialModule.html":{},"modules/SidenavModule.html":{},"modules/ToolbarModule.html":{}}}],["matselectmodul",{"_index":1586,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodul",{"_index":1587,"title":{},"body":{"modules/MaterialModule.html":{},"modules/QuickpanelModule.html":{},"modules/SidenavModule.html":{}}}],["matslidermodul",{"_index":1588,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodul",{"_index":1589,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":963,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["matsnackbarconfig",{"_index":964,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["matsnackbarmodul",{"_index":1590,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodul",{"_index":1591,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodul",{"_index":1595,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodul",{"_index":1592,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodul",{"_index":1593,"title":{},"body":{"modules/MaterialModule.html":{},"modules/QuickpanelModule.html":{}}}],["mattoolbarmodul",{"_index":410,"title":{},"body":{"modules/AuthModule.html":{},"modules/MaterialModule.html":{},"modules/SidenavModule.html":{},"modules/ToolbarModule.html":{}}}],["mattooltipmodul",{"_index":1594,"title":{},"body":{"modules/MaterialModule.html":{},"modules/ScrollToTopModule.html":{},"modules/ThemePickerModule.html":{},"modules/ToolbarModule.html":{}}}],["maul",{"_index":571,"title":{},"body":{"components/BlogComponent.html":{}}}],["max",{"_index":1981,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["md",{"_index":1635,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["media",{"_index":1608,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["mediachang",{"_index":1620,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["mediaqueryservic",{"_index":773,"title":{"injectables/MediaQueryService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/MediaQueryService.html":{}}}],["meet",{"_index":1833,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["mem",{"_index":1358,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["memori",{"_index":779,"title":{},"body":{"modules/CoreModule.html":{},"injectables/InMemoryDataService.html":{},"dependencies.html":{}}}],["menu",{"_index":703,"title":{},"body":{"components/ContextMenuComponent.html":{},"modules/ContextMenuModule.html":{},"directives/ContextMenuTriggerDirective.html":{},"modules/CoreModule.html":{},"classes/InitializeData.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"components/UserMenuComponent.html":{}}}],["menu.compon",{"_index":720,"title":{},"body":{"modules/ContextMenuModule.html":{},"modules/ToolbarModule.html":{}}}],["menu.component.html",{"_index":705,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/UserMenuComponent.html":{}}}],["menu.component.scss",{"_index":704,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/UserMenuComponent.html":{}}}],["menu.component.t",{"_index":700,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/UserMenuComponent.html":{}}}],["menu.component.ts:12",{"_index":2385,"title":{},"body":{"components/UserMenuComponent.html":{}}}],["menu.component.ts:13",{"_index":710,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/UserMenuComponent.html":{}}}],["menu.component.ts:17",{"_index":2382,"title":{},"body":{"components/UserMenuComponent.html":{}}}],["menu.component.ts:23",{"_index":2384,"title":{},"body":{"components/UserMenuComponent.html":{}}}],["menu.component.ts:27",{"_index":2383,"title":{},"body":{"components/UserMenuComponent.html":{}}}],["menu.component.ts:31",{"_index":2381,"title":{},"body":{"components/UserMenuComponent.html":{}}}],["menu.module.t",{"_index":718,"title":{},"body":{"modules/ContextMenuModule.html":{}}}],["menu/src/context",{"_index":699,"title":{},"body":{"components/ContextMenuComponent.html":{},"modules/ContextMenuModule.html":{},"directives/ContextMenuTriggerDirective.html":{}}}],["menu/us",{"_index":2262,"title":{},"body":{"modules/ToolbarModule.html":{},"components/UserMenuComponent.html":{}}}],["menu_item",{"_index":1708,"title":{},"body":{"modules/NavigatorModule.html":{}}}],["menuitem",{"_index":1383,"title":{"interfaces/MenuItem.html":{}},"body":{"classes/InitializeData.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"modules/NavigatorModule.html":{},"classes/NextCurrentlyOpened.html":{},"components/SearchBarComponent.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["menuitemcompon",{"_index":1660,"title":{"components/MenuItemComponent.html":{}},"body":{"components/MenuItemComponent.html":{},"modules/SidenavModule.html":{}}}],["menuitems(st",{"_index":1399,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["menuitemtyp",{"_index":1651,"title":{},"body":{"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["menuservic",{"_index":1386,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"modules/NavigatorModule.html":{},"classes/NextCurrentlyOpened.html":{},"components/SearchBarComponent.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["menuservice.tre",{"_index":1397,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["menust",{"_index":805,"title":{},"body":{"modules/CoreModule.html":{},"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["menustatemodel",{"_index":1393,"title":{"interfaces/MenuStateModel.html":{}},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["merg",{"_index":2292,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["mergemap",{"_index":1206,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["mergesort",{"_index":2291,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["mergesort(parent.children",{"_index":2326,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["messag",{"_index":256,"title":{},"body":{"injectables/AppConfirmService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Filter.html":{},"components/QuickpanelComponent.html":{}}}],["message.cont",{"_index":1890,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["message.from",{"_index":1888,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["message.subject",{"_index":1889,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["metadata",{"_index":77,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"pipes/CharactersPipe.html":{},"directives/ClickOutsideDirective.html":{},"components/ContextMenuComponent.html":{},"directives/ContextMenuTriggerDirective.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"directives/MinValidatorDirective.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"pipes/WordsPipe.html":{}}}],["method",{"_index":84,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfirmService.html":{},"classes/AppPage.html":{},"injectables/AuthGuard.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"pipes/CharactersPipe.html":{},"directives/ContextMenuTriggerDirective.html":{},"injectables/D3ChartService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"injectables/InMemoryDataService.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"directives/MinValidatorDirective.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"injectables/ROPCService.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"injectables/ThemeStorageService.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"pipes/WordsPipe.html":{}}}],["micheal",{"_index":1839,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["microsoft",{"_index":1365,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["millisecond",{"_index":1445,"title":{},"body":{"components/LandingComponent.html":{}}}],["min",{"_index":1695,"title":{},"body":{"directives/MinValidatorDirective.html":{},"components/RecentSalesComponent.html":{}}}],["minvalidatordirect",{"_index":144,"title":{"directives/MinValidatorDirective.html":{}},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"directives/MinValidatorDirective.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["miscellan",{"_index":2484,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":1169,"title":{},"body":{"components/FooterComponent.html":{}}}],["mm",{"_index":1147,"title":{},"body":{"interfaces/Filter.html":{}}}],["mmm",{"_index":1563,"title":{},"body":{"modules/MaterialDateModule.html":{}}}],["mmmm",{"_index":1567,"title":{},"body":{"modules/MaterialDateModule.html":{}}}],["mobil",{"_index":1261,"title":{},"body":{"components/HammerCardComponent.html":{},"components/LandingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mobileopen",{"_index":2502,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mock",{"_index":822,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["modalservic",{"_index":2100,"title":{},"body":{"injectables/ServiceWorkerService.html":{}}}],["mode",{"_index":819,"title":{},"body":{"modules/CoreModule.html":{}}}],["model",{"_index":1208,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["models/menu",{"_index":1384,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"modules/NavigatorModule.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["modern",{"_index":1024,"title":{},"body":{"components/FeaturesComponent.html":{},"components/LandingComponent.html":{}}}],["modul",{"_index":225,"title":{"modules/AppConfirmModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BreadcrumbsModule.html":{},"modules/CdkModule.html":{},"modules/ContextMenuModule.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"modules/FullscreenModule.html":{},"modules/HomeModule.html":{},"modules/LoadingOverlayModule.html":{},"modules/MaterialDateModule.html":{},"modules/MaterialModule.html":{},"modules/NavigatorModule.html":{},"modules/NotFoundModule.html":{},"modules/NxPipesModule.html":{},"modules/QuickpanelModule.html":{},"modules/ScrollToTopModule.html":{},"modules/ScrollbarModule.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"modules/ToolbarModule.html":{},"modules/WidgetsModule.html":{},"modules.html":{}},"body":{"modules/AppConfirmModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BreadcrumbsModule.html":{},"modules/CdkModule.html":{},"modules/ContextMenuModule.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"modules/FullscreenModule.html":{},"modules/HomeModule.html":{},"modules/LoadingOverlayModule.html":{},"modules/MaterialDateModule.html":{},"modules/MaterialModule.html":{},"modules/NavigatorModule.html":{},"modules/NotFoundModule.html":{},"modules/NxPipesModule.html":{},"modules/QuickpanelModule.html":{},"modules/ScrollToTopModule.html":{},"modules/ScrollbarModule.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"modules/ToolbarModule.html":{},"modules/WidgetsModule.html":{},"modules.html":{}}}],["module_export",{"_index":1557,"title":{},"body":{"modules/MaterialDateModule.html":{}}}],["modulewithprovid",{"_index":396,"title":{},"body":{"modules/AuthModule.html":{},"modules/NavigatorModule.html":{},"modules/SvgViewerModule.html":{}}}],["moff",{"_index":546,"title":{},"body":{"components/BlogComponent.html":{}}}],["moment",{"_index":162,"title":{},"body":{"classes/Address.html":{},"interfaces/Filter.html":{},"modules/MaterialDateModule.html":{},"components/QuickpanelComponent.html":{},"components/RecentSalesComponent.html":{},"dependencies.html":{}}}],["moment(new",{"_index":1990,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["moment(this).format('yyyi",{"_index":1146,"title":{},"body":{"interfaces/Filter.html":{}}}],["moment.mo",{"_index":170,"title":{},"body":{"classes/Address.html":{}}}],["mon",{"_index":558,"title":{},"body":{"components/BlogComponent.html":{}}}],["monthyeara11ylabel",{"_index":1566,"title":{},"body":{"modules/MaterialDateModule.html":{}}}],["monthyearlabel",{"_index":1562,"title":{},"body":{"modules/MaterialDateModule.html":{}}}],["more",{"_index":116,"title":{},"body":{"components/ActivityComponent.html":{},"components/QuickpanelComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{}}}],["more_vert",{"_index":111,"title":{},"body":{"components/ActivityComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{}}}],["mouseev",{"_index":688,"title":{},"body":{"directives/ClickOutsideDirective.html":{},"directives/ContextMenuTriggerDirective.html":{}}}],["msft",{"_index":1364,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["multi",{"_index":423,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"directives/MinValidatorDirective.html":{}}}],["mutat",{"_index":382,"title":{},"body":{"classes/AuthModeChanged.html":{},"classes/ChangeAuthMode.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"classes/ProfileLoaded.html":{}}}],["mycnf",{"_index":1375,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["myhammerconfig",{"_index":995,"title":{"classes/MyHammerConfig.html":{}},"body":{"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{}}}],["naboo",{"_index":553,"title":{},"body":{"components/BlogComponent.html":{}}}],["name",{"_index":49,"title":{},"body":{"injectables/AccountService.html":{},"components/ActivityComponent.html":{},"classes/Address.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"injectables/AppConfirmService.html":{},"injectables/AuthGuard.html":{},"classes/AuthModeChanged.html":{},"interfaces/AuthStateModel.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"classes/ChangeAuthMode.html":{},"pipes/CharactersPipe.html":{},"directives/ClickOutsideDirective.html":{},"components/ContextMenuComponent.html":{},"directives/ContextMenuTriggerDirective.html":{},"interfaces/Crumb.html":{},"classes/EntityColumnDef.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventBus.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"injectables/InMemoryDataService.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"classes/LoadProfile.html":{},"components/LoadingOverlayComponent.html":{},"classes/Login.html":{},"classes/LoginSuccess.html":{},"injectables/MediaQueryService.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"directives/MinValidatorDirective.html":{},"classes/NextCurrentlyOpened.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"components/QuickpanelComponent.html":{},"injectables/ROPCService.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"interfaces/RouterStateModel.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"classes/SetIconMode.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"classes/SvgViewerDefaultConfig.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"pipes/WordsPipe.html":{}}}],["nativ",{"_index":1262,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["navig",{"_index":1286,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["navigateto",{"_index":320,"title":{},"body":{"classes/AppPage.html":{}}}],["navigationend",{"_index":1203,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"components/SearchBarComponent.html":{},"classes/UpdateRouterState.html":{}}}],["navigationextra",{"_index":1205,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["navigatormodul",{"_index":804,"title":{"modules/NavigatorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/NavigatorModule.html":{},"modules.html":{}}}],["navigatormodule.forroot(defaultmenu",{"_index":814,"title":{},"body":{"modules/CoreModule.html":{}}}],["nbsp",{"_index":223,"title":{},"body":{"components/AppConfirmComponent.html":{}}}],["need",{"_index":1450,"title":{},"body":{"components/LandingComponent.html":{}}}],["network",{"_index":1121,"title":{},"body":{"interfaces/Filter.html":{}}}],["new",{"_index":94,"title":{},"body":{"components/ActivityComponent.html":{},"injectables/AuthGuard.html":{},"directives/ClickOutsideDirective.html":{},"directives/ContextMenuTriggerDirective.html":{},"modules/CoreModule.html":{},"interfaces/DocsSiteTheme.html":{},"interfaces/Filter.html":{},"classes/Go.html":{},"directives/HammertimeDirective.html":{},"injectables/InMemoryDataService.html":{},"injectables/MediaQueryService.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotificationsComponent.html":{},"components/QuickpanelComponent.html":{},"injectables/ROPCService.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"interfaces/RouterStateModel.html":{},"injectables/ServiceWorkerService.html":{},"injectables/ThemeStorageService.html":{},"classes/UpdateRouterState.html":{}}}],["newurl",{"_index":1369,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["next",{"_index":945,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["next.handle(req).pipe(catcherror(this.handleerror",{"_index":970,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["nextcurrentlyopen",{"_index":1389,"title":{"classes/NextCurrentlyOpened.html":{}},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["ng",{"_index":2522,"title":{},"body":{"index.html":{}}}],["ng_valid",{"_index":1701,"title":{},"body":{"directives/MinValidatorDirective.html":{}}}],["ngaftercontentinit",{"_index":2033,"title":{},"body":{"directives/ScrollbarDirective.html":{}}}],["ngbmodal",{"_index":2101,"title":{},"body":{"injectables/ServiceWorkerService.html":{}}}],["nglet",{"_index":1716,"title":{},"body":{"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{}}}],["nglet(valu",{"_index":1720,"title":{},"body":{"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{}}}],["nglet]'},{'nam",{"_index":147,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["ngletcontext",{"_index":1712,"title":{"classes/NgLetContext.html":{}},"body":{"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{}}}],["ngletdirect",{"_index":146,"title":{"directives/NgLetDirective.html":{}},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["ngmodul",{"_index":240,"title":{},"body":{"modules/AppConfirmModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BreadcrumbsModule.html":{},"modules/CdkModule.html":{},"modules/ContextMenuModule.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"modules/FullscreenModule.html":{},"modules/HomeModule.html":{},"modules/LoadingOverlayModule.html":{},"modules/MaterialDateModule.html":{},"modules/MaterialModule.html":{},"classes/MyHammerConfig.html":{},"modules/NavigatorModule.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"modules/NotFoundModule.html":{},"modules/NxPipesModule.html":{},"modules/QuickpanelModule.html":{},"modules/ScrollToTopModule.html":{},"modules/ScrollbarModule.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"modules/ToolbarModule.html":{},"modules/WidgetsModule.html":{}}}],["ngondestroy",{"_index":725,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{},"components/NotFoundComponent.html":{}}}],["ngoninit",{"_index":85,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Crumb.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["ngx",{"_index":800,"title":{},"body":{"modules/CoreModule.html":{},"components/FeaturesComponent.html":{},"modules/QuickpanelModule.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/ToolbarModule.html":{},"dependencies.html":{}}}],["ngxpagescrollmodul",{"_index":799,"title":{},"body":{"modules/CoreModule.html":{}}}],["ngxs/devtool",{"_index":797,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["ngxs/store",{"_index":343,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{},"modules/CoreModule.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventBus.html":{},"classes/Go.html":{},"components/HeaderComponent.html":{},"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"components/OverviewComponent.html":{},"interfaces/RouterStateModel.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"dependencies.html":{}}}],["ngxsmodul",{"_index":795,"title":{},"body":{"modules/CoreModule.html":{}}}],["ngxsmodule.forroot([authst",{"_index":815,"title":{},"body":{"modules/CoreModule.html":{}}}],["ngxsreduxdevtoolspluginmodul",{"_index":796,"title":{},"body":{"modules/CoreModule.html":{}}}],["ngxsreduxdevtoolspluginmodule.forroot",{"_index":816,"title":{},"body":{"modules/CoreModule.html":{}}}],["ngzone",{"_index":2019,"title":{},"body":{"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{}}}],["nice",{"_index":1854,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["node",{"_index":2309,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["node.children",{"_index":2360,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["node.children.length",{"_index":2340,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["node.link",{"_index":1419,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["node.par",{"_index":2337,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["nodecomparatorfn",{"_index":2288,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["notabl",{"_index":2439,"title":{},"body":{"changelog.html":{}}}],["notfoundcompon",{"_index":1731,"title":{"components/NotFoundComponent.html":{}},"body":{"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{}}}],["notfoundmodul",{"_index":1751,"title":{"modules/NotFoundModule.html":{}},"body":{"modules/NotFoundModule.html":{},"modules.html":{}}}],["noth",{"_index":2110,"title":{},"body":{"injectables/ServiceWorkerService.html":{}}}],["notif",{"_index":1760,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.icon",{"_index":1783,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.lasttim",{"_index":1785,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.titl",{"_index":1784,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.html",{"_index":1762,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":1761,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications?.length",{"_index":1778,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications_act",{"_index":1781,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications_activenotifications_non",{"_index":1787,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications_non",{"_index":1782,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationscompon",{"_index":1758,"title":{"components/NotificationsComponent.html":{}},"body":{"components/NotificationsComponent.html":{},"modules/ToolbarModule.html":{}}}],["npm",{"_index":2507,"title":{},"body":{"index.html":{}}}],["nrwl",{"_index":2505,"title":{},"body":{"index.html":{}}}],["nrwl/nx",{"_index":2460,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":916,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"directives/MinValidatorDirective.html":{},"classes/NextCurrentlyOpened.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"injectables/ROPCService.html":{},"classes/SetIconMode.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"components/UserMenuComponent.html":{}}}],["number",{"_index":164,"title":{},"body":{"classes/Address.html":{},"pipes/CharactersPipe.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"interfaces/Filter.html":{},"components/LineChartWidgetComponent.html":{},"interfaces/MenuItem.html":{},"directives/MinValidatorDirective.html":{},"components/QuickpanelComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{},"pipes/WordsPipe.html":{}}}],["nv",{"_index":861,"title":{},"body":{"injectables/D3ChartService.html":{},"miscellaneous/typealiases.html":{}}}],["nvd3",{"_index":862,"title":{},"body":{"injectables/D3ChartService.html":{},"dependencies.html":{}}}],["nvd3compon",{"_index":2422,"title":{},"body":{"modules/WidgetsModule.html":{}}}],["nvd3servic",{"_index":1475,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{}}}],["nvd3service.getd3",{"_index":1487,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{}}}],["nx",{"_index":62,"title":{},"body":{"injectables/AccountService.html":{},"classes/Address.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"injectables/EventBus.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"modules/FullscreenModule.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"modules/HomeModule.html":{},"classes/InitializeData.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"classes/MyHammerConfig.html":{},"classes/NextCurrentlyOpened.html":{},"components/OverviewComponent.html":{},"modules/QuickpanelModule.html":{},"components/SearchBarComponent.html":{},"classes/SetIconMode.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"components/UserMenuComponent.html":{},"modules/WidgetsModule.html":{},"index.html":{}}}],["nxpipesmodul",{"_index":1788,"title":{"modules/NxPipesModule.html":{}},"body":{"modules/NxPipesModule.html":{},"modules.html":{}}}],["nxstarterkit",{"_index":2503,"title":{},"body":{"index.html":{}}}],["nxtk",{"_index":79,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"interfaces/Crumb.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["nxtkclickoutsid",{"_index":675,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["nxtkclickoutside]'},{'nam",{"_index":137,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["nxtkiconsidenav]'},{'nam",{"_index":143,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["nxtkscrollbar",{"_index":149,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["oauth.config",{"_index":436,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["oauth.init",{"_index":399,"title":{},"body":{"modules/AuthModule.html":{}}}],["oauth2",{"_index":341,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{},"components/OverviewComponent.html":{},"injectables/ROPCService.html":{},"dependencies.html":{}}}],["oauthmodul",{"_index":397,"title":{},"body":{"modules/AuthModule.html":{}}}],["oauthmodule.forroot",{"_index":414,"title":{},"body":{"modules/AuthModule.html":{}}}],["oauthservic",{"_index":331,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{},"components/OverviewComponent.html":{},"injectables/ROPCService.html":{}}}],["obi",{"_index":579,"title":{},"body":{"components/BlogComponent.html":{}}}],["object",{"_index":1213,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["object.assign(thi",{"_index":930,"title":{},"body":{"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{}}}],["object.assign(this.opt",{"_index":2040,"title":{},"body":{"directives/ScrollbarDirective.html":{}}}],["observ",{"_index":258,"title":{},"body":{"injectables/AppConfirmService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"injectables/MediaQueryService.html":{},"components/OverviewComponent.html":{},"components/ToolbarComponent.html":{}}}],["observablemedia",{"_index":1606,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["observersmodul",{"_index":647,"title":{},"body":{"modules/CdkModule.html":{}}}],["occur",{"_index":1122,"title":{},"body":{"interfaces/Filter.html":{}}}],["ofact",{"_index":974,"title":{},"body":{"injectables/EventBus.html":{}}}],["oidc",{"_index":342,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{},"components/OverviewComponent.html":{},"injectables/ROPCService.html":{},"dependencies.html":{}}}],["ok",{"_index":222,"title":{},"body":{"components/AppConfirmComponent.html":{}}}],["on",{"_index":1253,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["onclick(ev",{"_index":693,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["onclickoutsid",{"_index":1764,"title":{},"body":{"components/NotificationsComponent.html":{},"components/UserMenuComponent.html":{}}}],["oncontextmenu(ev",{"_index":745,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["ondeactiv",{"_index":1311,"title":{},"body":{"components/HomeLayoutComponent.html":{}}}],["ondestroy",{"_index":722,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{},"components/NotFoundComponent.html":{}}}],["oninit",{"_index":76,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Crumb.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["onsameurlnavig",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["ontap(",{"_index":1277,"title":{},"body":{"directives/HammertimeDirective.html":{}}}],["onthemeupd",{"_index":909,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"injectables/ThemeStorageService.html":{}}}],["open",{"_index":2085,"title":{},"body":{"components/SearchComponent.html":{}}}],["opendropdown",{"_index":2059,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["openlink",{"_index":1011,"title":{},"body":{"components/FeaturesComponent.html":{},"components/MenuItemComponent.html":{}}}],["openlink(link",{"_index":1013,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["optim",{"_index":1458,"title":{},"body":{"components/LandingComponent.html":{}}}],["option",{"_index":9,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"injectables/AccountService.html":{},"classes/Address.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"injectables/AppConfirmService.html":{},"injectables/AuthGuard.html":{},"classes/AuthModeChanged.html":{},"interfaces/AuthorizationErrorResponse.html":{},"classes/ChangeAuthMode.html":{},"pipes/CharactersPipe.html":{},"directives/ClickOutsideDirective.html":{},"directives/ContextMenuTriggerDirective.html":{},"modules/CoreModule.html":{},"interfaces/Crumb.html":{},"interfaces/DocsSiteTheme.html":{},"classes/EntityColumnDef.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventBus.html":{},"components/FeaturesComponent.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"injectables/InMemoryDataService.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginSuccess.html":{},"injectables/MediaQueryService.html":{},"interfaces/MenuItem.html":{},"directives/MinValidatorDirective.html":{},"classes/NextCurrentlyOpened.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"injectables/ROPCService.html":{},"components/RecentSalesComponent.html":{},"interfaces/RouterStateModel.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"classes/SetIconMode.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"pipes/WordsPipe.html":{}}}],["options.arrow",{"_index":2410,"title":{},"body":{"components/WidgetComponent.html":{}}}],["options.descript",{"_index":2412,"title":{},"body":{"components/WidgetComponent.html":{}}}],["options.gain",{"_index":2411,"title":{},"body":{"components/WidgetComponent.html":{}}}],["options.icon",{"_index":1521,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/WidgetComponent.html":{}}}],["options.nam",{"_index":1522,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/WidgetComponent.html":{}}}],["options.numb",{"_index":2408,"title":{},"body":{"components/WidgetComponent.html":{}}}],["organa",{"_index":588,"title":{},"body":{"components/BlogComponent.html":{}}}],["origini",{"_index":754,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["originx",{"_index":752,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["out",{"_index":237,"title":{},"body":{"modules/AppConfirmModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BreadcrumbsModule.html":{},"modules/ContextMenuModule.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"modules/FullscreenModule.html":{},"modules/HomeModule.html":{},"modules/LoadingOverlayModule.html":{},"modules/NotFoundModule.html":{},"modules/NxPipesModule.html":{},"modules/QuickpanelModule.html":{},"modules/ScrollToTopModule.html":{},"modules/ScrollbarModule.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"modules/ToolbarModule.html":{},"modules/WidgetsModule.html":{}}}],["output",{"_index":676,"title":{},"body":{"directives/ClickOutsideDirective.html":{},"directives/HammertimeDirective.html":{}}}],["outside.direct",{"_index":2264,"title":{},"body":{"modules/ToolbarModule.html":{}}}],["outside.directive.t",{"_index":674,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["outside.directive.ts:12",{"_index":691,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["outside.directive.ts:7",{"_index":681,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["outside/click",{"_index":673,"title":{},"body":{"directives/ClickOutsideDirective.html":{},"modules/ToolbarModule.html":{}}}],["over",{"_index":497,"title":{},"body":{"components/BlogComponent.html":{},"components/TrafficSourcesComponent.html":{}}}],["overlay",{"_index":727,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{},"modules/DashboardModule.html":{},"components/LoadingOverlayComponent.html":{},"modules/WidgetsModule.html":{}}}],["overlay.compon",{"_index":1542,"title":{},"body":{"modules/LoadingOverlayModule.html":{}}}],["overlay.component.html",{"_index":1534,"title":{},"body":{"components/LoadingOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":1533,"title":{},"body":{"components/LoadingOverlayComponent.html":{}}}],["overlay.component.t",{"_index":1532,"title":{},"body":{"components/LoadingOverlayComponent.html":{}}}],["overlay.component.ts:13",{"_index":1536,"title":{},"body":{"components/LoadingOverlayComponent.html":{}}}],["overlay.component.ts:9",{"_index":1535,"title":{},"body":{"components/LoadingOverlayComponent.html":{}}}],["overlay.module.t",{"_index":1541,"title":{},"body":{"modules/LoadingOverlayModule.html":{}}}],["overlay/src/load",{"_index":1531,"title":{},"body":{"components/LoadingOverlayComponent.html":{},"modules/LoadingOverlayModule.html":{}}}],["overlayi",{"_index":757,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["overlaymodul",{"_index":643,"title":{},"body":{"modules/CdkModule.html":{},"modules/ContextMenuModule.html":{}}}],["overlayref",{"_index":759,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["overlayref.attach(templateport",{"_index":763,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["overlayref.detach",{"_index":768,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["overlayx",{"_index":756,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["overrid",{"_index":996,"title":{},"body":{"modules/ExperimentsModule.html":{},"injectables/InMemoryDataService.html":{},"classes/MyHammerConfig.html":{}}}],["override.service.t",{"_index":1359,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["overview",{"_index":135,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"modules/DashboardModule.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["overview.component.html",{"_index":1800,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.component.scss",{"_index":1799,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overviewcompon",{"_index":869,"title":{"components/OverviewComponent.html":{}},"body":{"modules/DashboardModule.html":{},"components/OverviewComponent.html":{}}}],["owen",{"_index":577,"title":{},"body":{"components/BlogComponent.html":{}}}],["pack",{"_index":513,"title":{},"body":{"components/BlogComponent.html":{}}}],["packag",{"_index":2447,"title":{"dependencies.html":{}},"body":{}}],["padm",{"_index":548,"title":{},"body":{"components/BlogComponent.html":{}}}],["page",{"_index":801,"title":{},"body":{"modules/CoreModule.html":{},"components/NotFoundComponent.html":{},"injectables/PageTitleService.html":{},"dependencies.html":{},"index.html":{}}}],["pagenumb",{"_index":1089,"title":{},"body":{"interfaces/Filter.html":{}}}],["pagenumber.tostr",{"_index":1097,"title":{},"body":{"interfaces/Filter.html":{}}}],["pages",{"_index":1090,"title":{},"body":{"interfaces/Filter.html":{}}}],["pagesize.tostr",{"_index":1099,"title":{},"body":{"interfaces/Filter.html":{}}}],["pagetitleservic",{"_index":772,"title":{"injectables/PageTitleService.html":{}},"body":{"modules/CoreModule.html":{},"components/LandingComponent.html":{},"injectables/PageTitleService.html":{}}}],["param",{"_index":1093,"title":{},"body":{"interfaces/Filter.html":{},"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["paramet",{"_index":48,"title":{},"body":{"injectables/AccountService.html":{},"classes/Address.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"injectables/AppConfirmService.html":{},"injectables/AuthGuard.html":{},"classes/AuthModeChanged.html":{},"classes/ChangeAuthMode.html":{},"pipes/CharactersPipe.html":{},"directives/ClickOutsideDirective.html":{},"directives/ContextMenuTriggerDirective.html":{},"classes/EntityColumnDef.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventBus.html":{},"components/FeaturesComponent.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"injectables/InMemoryDataService.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginSuccess.html":{},"injectables/MediaQueryService.html":{},"directives/MinValidatorDirective.html":{},"classes/NextCurrentlyOpened.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"injectables/ROPCService.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"classes/SetIconMode.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"classes/SvgViewerDefaultConfig.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/TrafficSourcesComponent.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"pipes/WordsPipe.html":{}}}],["paramsinheritancestrategi",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["parent",{"_index":2317,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["parent.children",{"_index":2323,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["parent.children.foreach(d",{"_index":2330,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["parent.children.push(nod",{"_index":2344,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["parent.par",{"_index":2374,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["parentmodul",{"_index":829,"title":{},"body":{"modules/CoreModule.html":{}}}],["parents.unshift(item",{"_index":2372,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["parents.unshift(par",{"_index":2373,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["pars",{"_index":1376,"title":{},"body":{"injectables/InMemoryDataService.html":{},"modules/MaterialDateModule.html":{}}}],["parsedrequesturl",{"_index":1350,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["parserequesturl",{"_index":1344,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["parserequesturl(url",{"_index":1346,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["parti",{"_index":1862,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["partial",{"_index":933,"title":{},"body":{"classes/EntityColumnDef.html":{},"directives/ScrollbarDirective.html":{}}}],["passthruunknownurl",{"_index":824,"title":{},"body":{"modules/CoreModule.html":{}}}],["password",{"_index":1913,"title":{},"body":{"injectables/ROPCService.html":{}}}],["passwordflow",{"_index":375,"title":{},"body":{"classes/AuthModeChanged.html":{},"classes/ChangeAuthMode.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"classes/ProfileLoaded.html":{},"miscellaneous/enumerations.html":{}}}],["patchstat",{"_index":447,"title":{},"body":{"interfaces/AuthStateModel.html":{},"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["path",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"classes/Go.html":{},"modules/HomeModule.html":{},"classes/MyHammerConfig.html":{},"modules/NotFoundModule.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{},"modules/WidgetsModule.html":{}}}],["pathmatch",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"modules/HomeModule.html":{},"classes/MyHammerConfig.html":{},"modules/NotFoundModule.html":{},"modules/WidgetsModule.html":{}}}],["pattern",{"_index":1045,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["payload",{"_index":369,"title":{},"body":{"classes/AuthModeChanged.html":{},"interfaces/AuthStateModel.html":{},"classes/ChangeAuthMode.html":{},"classes/Go.html":{},"classes/InitializeData.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/ProfileLoaded.html":{},"interfaces/RouterStateModel.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"classes/UpdateRouterState.html":{}}}],["perfect",{"_index":1908,"title":{},"body":{"modules/QuickpanelModule.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/ToolbarModule.html":{},"dependencies.html":{}}}],["perfect_scrollbar_config",{"_index":2126,"title":{},"body":{"modules/SharedModule.html":{}}}],["perfectscrollbarconfiginterfac",{"_index":2125,"title":{},"body":{"modules/SharedModule.html":{}}}],["perfectscrollbarmodul",{"_index":1907,"title":{},"body":{"modules/QuickpanelModule.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/ToolbarModule.html":{}}}],["perform",{"_index":1444,"title":{},"body":{"components/LandingComponent.html":{}}}],["person_outlin",{"_index":1301,"title":{},"body":{"components/HeaderComponent.html":{}}}],["phone",{"_index":172,"title":{},"body":{"classes/Address.html":{}}}],["picker",{"_index":1331,"title":{},"body":{"modules/HomeModule.html":{}}}],["picker.compon",{"_index":2219,"title":{},"body":{"modules/ThemePickerModule.html":{}}}],["picker.module.t",{"_index":2218,"title":{},"body":{"modules/ThemePickerModule.html":{}}}],["picker/src/styl",{"_index":2158,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["picker/src/them",{"_index":892,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"modules/ThemePickerModule.html":{},"injectables/ThemeStorageService.html":{}}}],["piechartcompon",{"_index":2421,"title":{},"body":{"modules/WidgetsModule.html":{}}}],["pipe",{"_index":657,"title":{"pipes/CharactersPipe.html":{},"pipes/WordsPipe.html":{}},"body":{"pipes/CharactersPipe.html":{},"interfaces/Filter.html":{},"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{},"pipes/WordsPipe.html":{}}}],["pipe(catcherror(this.handleerror",{"_index":1084,"title":{},"body":{"interfaces/Filter.html":{}}}],["pipe(takeuntil(this._destroy",{"_index":766,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["pipes.module.t",{"_index":1794,"title":{},"body":{"modules/NxPipesModule.html":{}}}],["pipes/src/nx",{"_index":1793,"title":{},"body":{"modules/NxPipesModule.html":{}}}],["pipes/src/truncate/characters.pipe.t",{"_index":660,"title":{},"body":{"pipes/CharactersPipe.html":{}}}],["pipes/src/truncate/characters.pipe.ts:7",{"_index":666,"title":{},"body":{"pipes/CharactersPipe.html":{}}}],["pipes/src/truncate/words.pipe.t",{"_index":2431,"title":{},"body":{"pipes/WordsPipe.html":{}}}],["pipes/src/truncate/words.pipe.ts:7",{"_index":2433,"title":{},"body":{"pipes/WordsPipe.html":{}}}],["pipetransform",{"_index":668,"title":{},"body":{"pipes/CharactersPipe.html":{},"pipes/WordsPipe.html":{}}}],["platformloc",{"_index":2187,"title":{},"body":{"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{}}}],["platformmodul",{"_index":645,"title":{},"body":{"modules/CdkModule.html":{}}}],["play",{"_index":1873,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["pleas",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"interfaces/Filter.html":{}}}],["plugin",{"_index":798,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["pm",{"_index":1835,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["ponda",{"_index":550,"title":{},"body":{"components/BlogComponent.html":{}}}],["portalmodul",{"_index":649,"title":{},"body":{"modules/CdkModule.html":{},"modules/ContextMenuModule.html":{}}}],["posit",{"_index":750,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["positionstrategi",{"_index":748,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["possibl",{"_index":1656,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["post",{"_index":1920,"title":{},"body":{"injectables/ROPCService.html":{}}}],["post(`${this.baseurl}/${this.entitypath",{"_index":1111,"title":{},"body":{"interfaces/Filter.html":{}}}],["post(ent",{"_index":1110,"title":{},"body":{"interfaces/Filter.html":{}}}],["postord",{"_index":2316,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["power",{"_index":1025,"title":{},"body":{"components/FeaturesComponent.html":{},"components/FooterComponent.html":{}}}],["predicate(_nod",{"_index":2351,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["preorder",{"_index":2315,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["primari",{"_index":898,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"injectables/ThemeStorageService.html":{}}}],["privat",{"_index":357,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/AuthStateModel.html":{},"directives/ContextMenuTriggerDirective.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Filter.html":{},"classes/Go.html":{},"classes/InitializeData.html":{},"injectables/MediaQueryService.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"injectables/ROPCService.html":{},"interfaces/RouterStateModel.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"injectables/ServiceWorkerService.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"classes/UpdateRouterState.html":{}}}],["problem",{"_index":1750,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["prod",{"_index":818,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["product",{"_index":2520,"title":{},"body":{"index.html":{}}}],["profil",{"_index":427,"title":{},"body":{"interfaces/AuthStateModel.html":{},"components/OverviewComponent.html":{},"injectables/ROPCService.html":{},"components/SearchBarComponent.html":{},"components/ToolbarComponent.html":{},"components/UserMenuComponent.html":{}}}],["profile(st",{"_index":441,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["profileload",{"_index":386,"title":{"classes/ProfileLoaded.html":{}},"body":{"classes/AuthModeChanged.html":{},"classes/ChangeAuthMode.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"classes/ProfileLoaded.html":{}}}],["program",{"_index":1048,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["project",{"_index":1841,"title":{},"body":{"components/QuickpanelComponent.html":{},"changelog.html":{},"index.html":{}}}],["promis",{"_index":339,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["promise(function(resolv",{"_index":350,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["properti",{"_index":7,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"injectables/AccountService.html":{},"components/ActivityComponent.html":{},"classes/Address.html":{},"components/AppConfirmComponent.html":{},"classes/AuthModeChanged.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AuthorizationErrorResponse.html":{},"classes/ChangeAuthMode.html":{},"directives/ContextMenuTriggerDirective.html":{},"interfaces/Crumb.html":{},"interfaces/DocsSiteTheme.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"interceptors/ErrorInterceptor.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginSuccess.html":{},"injectables/MediaQueryService.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuStateModel.html":{},"classes/MyHammerConfig.html":{},"classes/NextCurrentlyOpened.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"interfaces/RouterStateModel.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"classes/SetIconMode.html":{},"components/SourceOverviewWidgetComponent.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["protractor",{"_index":324,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provid",{"_index":230,"title":{},"body":{"modules/AppConfirmModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BreadcrumbsModule.html":{},"modules/ContextMenuModule.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"modules/FullscreenModule.html":{},"modules/HomeModule.html":{},"modules/LoadingOverlayModule.html":{},"modules/MaterialDateModule.html":{},"directives/MinValidatorDirective.html":{},"classes/MyHammerConfig.html":{},"modules/NavigatorModule.html":{},"modules/NotFoundModule.html":{},"modules/NxPipesModule.html":{},"modules/QuickpanelModule.html":{},"modules/ScrollToTopModule.html":{},"modules/ScrollbarModule.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"modules/ToolbarModule.html":{},"modules/WidgetsModule.html":{}}}],["proxi",{"_index":2513,"title":{},"body":{"index.html":{}}}],["proxy.conf.j",{"_index":2514,"title":{},"body":{"index.html":{}}}],["public",{"_index":153,"title":{},"body":{"classes/Address.html":{},"components/AppConfirmComponent.html":{},"injectables/AppConfirmService.html":{},"classes/AuthModeChanged.html":{},"classes/ChangeAuthMode.html":{},"directives/ClickOutsideDirective.html":{},"components/ContextMenuComponent.html":{},"injectables/D3ChartService.html":{},"interfaces/DocsSiteTheme.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Filter.html":{},"classes/Go.html":{},"components/HeaderComponent.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginSuccess.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{}}}],["put(`${this.baseurl}/${this.entitypath",{"_index":1114,"title":{},"body":{"interfaces/Filter.html":{}}}],["put(ent",{"_index":1112,"title":{},"body":{"interfaces/Filter.html":{}}}],["px",{"_index":1684,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["quack",{"_index":521,"title":{},"body":{"components/BlogComponent.html":{}}}],["quartz",{"_index":510,"title":{},"body":{"components/BlogComponent.html":{}}}],["queen",{"_index":504,"title":{},"body":{"components/BlogComponent.html":{}}}],["queri",{"_index":1212,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["queryparam",{"_index":1210,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["queue",{"_index":2347,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["queue.length",{"_index":2348,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["queue.push(child",{"_index":2353,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["queue.shift",{"_index":2350,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["qui",{"_index":563,"title":{},"body":{"components/BlogComponent.html":{}}}],["quick",{"_index":485,"title":{},"body":{"components/BlogComponent.html":{}}}],["quickli",{"_index":490,"title":{},"body":{"components/BlogComponent.html":{}}}],["quickpanel",{"_index":1825,"title":{},"body":{"components/QuickpanelComponent.html":{},"components/ToolbarComponent.html":{}}}],["quickpanel.compon",{"_index":1906,"title":{},"body":{"modules/QuickpanelModule.html":{}}}],["quickpanel.component.html",{"_index":1827,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["quickpanel.component.scss",{"_index":1826,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["quickpanelcompon",{"_index":1823,"title":{"components/QuickpanelComponent.html":{}},"body":{"components/QuickpanelComponent.html":{},"modules/QuickpanelModule.html":{}}}],["quickpanelmodul",{"_index":872,"title":{"modules/QuickpanelModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/QuickpanelModule.html":{},"modules.html":{}}}],["r2",{"_index":556,"title":{},"body":{"components/BlogComponent.html":{}}}],["raider",{"_index":543,"title":{},"body":{"components/BlogComponent.html":{}}}],["rainbow",{"_index":1946,"title":{},"body":{"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{}}}],["rainbow'},{'nam",{"_index":133,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["rainbow.component.html",{"_index":1948,"title":{},"body":{"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{}}}],["rainbow.component.scss",{"_index":1947,"title":{},"body":{"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{}}}],["rainbowcompon",{"_index":132,"title":{"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{}},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"modules/DashboardModule.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["ram",{"_index":1894,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["rc.0",{"_index":2454,"title":{},"body":{"dependencies.html":{}}}],["rc.1",{"_index":2452,"title":{},"body":{"dependencies.html":{}}}],["reactiv",{"_index":1047,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["reactiveformsmodul",{"_index":411,"title":{},"body":{"modules/AuthModule.html":{},"modules/SharedModule.html":{}}}],["read",{"_index":1780,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["readonli",{"_index":42,"title":{},"body":{"injectables/AccountService.html":{},"classes/AuthModeChanged.html":{},"classes/ChangeAuthMode.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"interfaces/Filter.html":{},"classes/Go.html":{},"classes/InitializeData.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/ProfileLoaded.html":{},"interfaces/RouterStateModel.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"classes/UpdateRouterState.html":{}}}],["recent",{"_index":96,"title":{},"body":{"components/ActivityComponent.html":{},"components/RecentSalesComponent.html":{},"components/SearchBarComponent.html":{}}}],["recentcustomersdemovalu",{"_index":1974,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["recentlyvisit",{"_index":2057,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["recentsalescompon",{"_index":1960,"title":{"components/RecentSalesComponent.html":{}},"body":{"components/RecentSalesComponent.html":{},"modules/WidgetsModule.html":{}}}],["redeem",{"_index":1063,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["redirectto",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"modules/CrudModule.html":{},"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{}}}],["refactor",{"_index":1057,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["refresh",{"_index":110,"title":{},"body":{"components/ActivityComponent.html":{},"injectables/ServiceWorkerService.html":{},"components/TrafficSourcesComponent.html":{}}}],["refresh_token",{"_index":1928,"title":{},"body":{"injectables/ROPCService.html":{}}}],["reject",{"_index":351,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["releas",{"_index":2105,"title":{},"body":{"injectables/ServiceWorkerService.html":{}}}],["reload",{"_index":86,"title":{},"body":{"components/ActivityComponent.html":{},"modules/AppModule.html":{},"injectables/ServiceWorkerService.html":{},"components/TrafficSourcesComponent.html":{},"index.html":{}}}],["remov",{"_index":118,"title":{},"body":{"components/ActivityComponent.html":{},"modules/SharedModule.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"modules/ToolbarModule.html":{},"components/TrafficSourcesComponent.html":{}}}],["remove(nod",{"_index":2346,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["remove_circl",{"_index":117,"title":{},"body":{"components/ActivityComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{}}}],["removestyl",{"_index":2162,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["removestyle(key",{"_index":2164,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["render",{"_index":1742,"title":{},"body":{"components/NotFoundComponent.html":{},"components/SearchComponent.html":{}}}],["renderer2",{"_index":1740,"title":{},"body":{"components/NotFoundComponent.html":{},"components/SearchComponent.html":{}}}],["replace(/\\/datapower\\/serviceproxi",{"_index":1370,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["replace(/\\/layer7\\/my.cnf",{"_index":1374,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["replace(/\\/nas\\/clust",{"_index":1372,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["replay.servic",{"_index":794,"title":{},"body":{"modules/CoreModule.html":{}}}],["replay.service.t",{"_index":1598,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["replay.service.ts:22",{"_index":1613,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["replay.service.ts:23",{"_index":1612,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["replay.service.ts:25",{"_index":1611,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["replay.service.ts:27",{"_index":1615,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["replay.service.ts:31",{"_index":1617,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["replay.service.ts:35",{"_index":1619,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["replay.service.ts:7",{"_index":1607,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["replaysubject",{"_index":1609,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["replaysubject(1",{"_index":1610,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["report",{"_index":1749,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["req",{"_index":948,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["request",{"_index":1102,"title":{},"body":{"interfaces/Filter.html":{}}}],["requestinfo",{"_index":1352,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["requestinfoutil",{"_index":1348,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["require('../../../../../package.json",{"_index":1162,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":236,"title":{},"body":{"modules/AppConfirmModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BreadcrumbsModule.html":{},"modules/ContextMenuModule.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"modules/FullscreenModule.html":{},"modules/HomeModule.html":{},"modules/LoadingOverlayModule.html":{},"modules/NotFoundModule.html":{},"modules/NxPipesModule.html":{},"modules/QuickpanelModule.html":{},"modules/ScrollToTopModule.html":{},"modules/ScrollbarModule.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"modules/ToolbarModule.html":{},"modules/WidgetsModule.html":{}}}],["resetanimationst",{"_index":1243,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["resolv",{"_index":355,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["resourceserv",{"_index":415,"title":{},"body":{"modules/AuthModule.html":{}}}],["respons",{"_index":1037,"title":{},"body":{"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"injectables/InMemoryDataService.html":{},"injectables/PageTitleService.html":{}}}],["response.json",{"_index":1361,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["responseopt",{"_index":1353,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["restor",{"_index":2077,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["result",{"_index":37,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"injectables/AccountService.html":{},"components/ActivityComponent.html":{},"classes/Address.html":{},"classes/Animations.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"modules/AppConfirmModule.html":{},"injectables/AppConfirmService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/AuthGuard.html":{},"classes/AuthModeChanged.html":{},"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AuthorizationErrorResponse.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"modules/BreadcrumbsModule.html":{},"modules/CdkModule.html":{},"classes/ChangeAuthMode.html":{},"pipes/CharactersPipe.html":{},"directives/ClickOutsideDirective.html":{},"components/ContextMenuComponent.html":{},"modules/ContextMenuModule.html":{},"directives/ContextMenuTriggerDirective.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"interfaces/Crumb.html":{},"injectables/D3ChartService.html":{},"modules/DashboardModule.html":{},"interfaces/DocsSiteTheme.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventBus.html":{},"components/ExperimentsComponent.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"modules/FullscreenModule.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"modules/HomeModule.html":{},"injectables/InMemoryDataService.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"classes/LoadProfile.html":{},"components/LoadingOverlayComponent.html":{},"modules/LoadingOverlayModule.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"modules/MaterialDateModule.html":{},"modules/MaterialModule.html":{},"injectables/MediaQueryService.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"directives/MinValidatorDirective.html":{},"classes/MyHammerConfig.html":{},"modules/NavigatorModule.html":{},"classes/NextCurrentlyOpened.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/NotificationsComponent.html":{},"modules/NxPipesModule.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"classes/ProfileLoaded.html":{},"components/QuickpanelComponent.html":{},"modules/QuickpanelModule.html":{},"injectables/ROPCService.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"interfaces/RouterStateModel.html":{},"modules/ScrollToTopModule.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"modules/ScrollbarModule.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"classes/SetIconMode.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"modules/WidgetsModule.html":{},"pipes/WordsPipe.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["retri",{"_index":57,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/Filter.html":{}}}],["retry(3",{"_index":1100,"title":{},"body":{"interfaces/Filter.html":{}}}],["return",{"_index":99,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfirmService.html":{},"classes/AppPage.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"pipes/CharactersPipe.html":{},"directives/ClickOutsideDirective.html":{},"directives/ContextMenuTriggerDirective.html":{},"injectables/D3ChartService.html":{},"interfaces/DocsSiteTheme.html":{},"interceptors/ErrorInterceptor.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"injectables/InMemoryDataService.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"injectables/MediaQueryService.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"directives/MinValidatorDirective.html":{},"modules/NavigatorModule.html":{},"classes/NextCurrentlyOpened.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"components/QuickpanelComponent.html":{},"injectables/ROPCService.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"interfaces/RouterStateModel.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"classes/SetIconMode.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"modules/SvgViewerModule.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"pipes/WordsPipe.html":{},"miscellaneous/enumerations.html":{}}}],["reus",{"_index":1257,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["revenuesum",{"_index":1470,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["right",{"_index":1501,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["rightalignyaxi",{"_index":1517,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["root",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["ropc.servic",{"_index":403,"title":{},"body":{"modules/AuthModule.html":{}}}],["ropcflow",{"_index":376,"title":{},"body":{"classes/AuthModeChanged.html":{},"classes/ChangeAuthMode.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"classes/ProfileLoaded.html":{},"miscellaneous/enumerations.html":{}}}],["ropcservic",{"_index":392,"title":{"injectables/ROPCService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/ROPCService.html":{}}}],["rout",{"_index":338,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["route.firstchild",{"_index":1221,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["routeconfig",{"_index":1222,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["router",{"_index":340,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/AuthStateModel.html":{},"classes/Go.html":{},"interfaces/MenuItem.html":{},"components/QuickpanelComponent.html":{},"interfaces/RouterStateModel.html":{},"components/SearchBarComponent.html":{},"classes/UpdateRouterState.html":{}}}],["routermodul",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/BreadcrumbsModule.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"modules/HomeModule.html":{},"classes/MyHammerConfig.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/ToolbarModule.html":{},"modules/WidgetsModule.html":{}}}],["routermodule.forchild",{"_index":848,"title":{},"body":{"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"modules/HomeModule.html":{},"classes/MyHammerConfig.html":{},"modules/NotFoundModule.html":{},"modules/WidgetsModule.html":{}}}],["routermodule.forroot",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["routerst",{"_index":807,"title":{},"body":{"modules/CoreModule.html":{},"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["routerstatemodel",{"_index":1209,"title":{"interfaces/RouterStateModel.html":{}},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["routerstatesnapshot",{"_index":336,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["routertransit",{"_index":1315,"title":{},"body":{"components/HomeLayoutComponent.html":{}}}],["run",{"_index":1437,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["rxj",{"_index":259,"title":{},"body":{"injectables/AppConfirmService.html":{},"directives/ContextMenuTriggerDirective.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Filter.html":{},"classes/Go.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"interfaces/RouterStateModel.html":{},"components/ToolbarComponent.html":{},"classes/UpdateRouterState.html":{},"dependencies.html":{}}}],["rxjs/observ",{"_index":1621,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["rxjs/oper",{"_index":60,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/AuthStateModel.html":{},"directives/ContextMenuTriggerDirective.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Filter.html":{},"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["rxjs/replaysubject",{"_index":1622,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["sale",{"_index":1964,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["sale.itemnam",{"_index":1995,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["sale.timeago",{"_index":1998,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["sale.valu",{"_index":1996,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["sales.component.html",{"_index":1966,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["sales.component.scss",{"_index":1965,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["sales.component.t",{"_index":1963,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["sales.component.ts:12",{"_index":1972,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["sales.component.ts:13",{"_index":1970,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["sales.component.ts:14",{"_index":1971,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["sales.component.ts:16",{"_index":1969,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["sales.component.ts:22",{"_index":1973,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["sales/rec",{"_index":1962,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["screenful",{"_index":1184,"title":{},"body":{"components/FullscreenComponent.html":{},"dependencies.html":{}}}],["screenfull.en",{"_index":1185,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["screenfull.toggl",{"_index":1186,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["scroll",{"_index":802,"title":{},"body":{"modules/CoreModule.html":{},"modules/ScrollToTopModule.html":{},"dependencies.html":{}}}],["scrollbar",{"_index":1909,"title":{},"body":{"modules/QuickpanelModule.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/ToolbarModule.html":{},"dependencies.html":{}}}],["scrollbar.compon",{"_index":2047,"title":{},"body":{"modules/ScrollbarModule.html":{}}}],["scrollbar.component.html",{"_index":2015,"title":{},"body":{"components/ScrollbarComponent.html":{}}}],["scrollbar.component.scss",{"_index":2014,"title":{},"body":{"components/ScrollbarComponent.html":{}}}],["scrollbar.direct",{"_index":2048,"title":{},"body":{"modules/ScrollbarModule.html":{}}}],["scrollbar.init(this._element.nativeel",{"_index":2041,"title":{},"body":{"directives/ScrollbarDirective.html":{}}}],["scrollbar.init(this.element.nativeel",{"_index":2030,"title":{},"body":{"components/ScrollbarComponent.html":{}}}],["scrollbar/interfac",{"_index":2037,"title":{},"body":{"directives/ScrollbarDirective.html":{}}}],["scrollbarcompon",{"_index":2012,"title":{"components/ScrollbarComponent.html":{}},"body":{"components/ScrollbarComponent.html":{},"modules/ScrollbarModule.html":{}}}],["scrollbardirect",{"_index":148,"title":{"directives/ScrollbarDirective.html":{}},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"modules/ScrollbarModule.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["scrollbarmodul",{"_index":2042,"title":{"modules/ScrollbarModule.html":{}},"body":{"modules/ScrollbarModule.html":{},"modules/SidenavModule.html":{},"modules.html":{}}}],["scrollbaropt",{"_index":2025,"title":{},"body":{"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{}}}],["scrollbarref",{"_index":2016,"title":{},"body":{"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{}}}],["scrolldispatchmodul",{"_index":651,"title":{},"body":{"modules/CdkModule.html":{}}}],["scrolltop",{"_index":1317,"title":{},"body":{"components/HomeLayoutComponent.html":{}}}],["scrolltotopcompon",{"_index":2007,"title":{},"body":{"modules/ScrollToTopModule.html":{}}}],["scrolltotopmodul",{"_index":1326,"title":{"modules/ScrollToTopModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/ScrollToTopModule.html":{},"modules.html":{}}}],["seamlessli",{"_index":1462,"title":{},"body":{"components/LandingComponent.html":{}}}],["search",{"_index":1806,"title":{},"body":{"components/OverviewComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{}}}],["search.component.html",{"_index":2084,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":2083,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchbarcompon",{"_index":2049,"title":{"components/SearchBarComponent.html":{}},"body":{"components/SearchBarComponent.html":{},"modules/ToolbarModule.html":{}}}],["searchcompon",{"_index":2081,"title":{"components/SearchComponent.html":{}},"body":{"components/SearchComponent.html":{},"modules/ToolbarModule.html":{}}}],["secondarymenu",{"_index":1669,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["secura",{"_index":567,"title":{},"body":{"components/BlogComponent.html":{}}}],["see",{"_index":2440,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":432,"title":{},"body":{"interfaces/AuthStateModel.html":{},"components/HeaderComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/ToolbarComponent.html":{}}}],["select(authstate.isloggedin",{"_index":1297,"title":{},"body":{"components/HeaderComponent.html":{},"components/OverviewComponent.html":{}}}],["select(authstate.profil",{"_index":1805,"title":{},"body":{"components/OverviewComponent.html":{},"components/ToolbarComponent.html":{}}}],["selector",{"_index":78,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"interfaces/AuthStateModel.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/ContextMenuComponent.html":{},"directives/ContextMenuTriggerDirective.html":{},"interfaces/Crumb.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"directives/MinValidatorDirective.html":{},"classes/NextCurrentlyOpened.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"classes/SetIconMode.html":{},"components/SourceOverviewWidgetComponent.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["sendaccesstoken",{"_index":418,"title":{},"body":{"modules/AuthModule.html":{}}}],["separ",{"_index":1654,"title":{},"body":{"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["serv",{"_index":2529,"title":{},"body":{"index.html":{}}}],["server",{"_index":1891,"title":{},"body":{"components/QuickpanelComponent.html":{},"components/SearchBarComponent.html":{},"index.html":{}}}],["server_error",{"_index":29,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{},"miscellaneous/typealiases.html":{}}}],["servic",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"injectables/PageTitleService.html":{}}}],["serviceproxi",{"_index":1371,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["services/in",{"_index":783,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/mediareplay/media",{"_index":793,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/menu.servic",{"_index":1387,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"modules/NavigatorModule.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["services/pag",{"_index":787,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/servic",{"_index":790,"title":{},"body":{"modules/CoreModule.html":{}}}],["serviceworkermodul",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('./ngsw",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkerservic",{"_index":191,"title":{"injectables/ServiceWorkerService.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/ServiceWorkerService.html":{}}}],["set",{"_index":115,"title":{},"body":{"components/ActivityComponent.html":{},"modules/CoreModule.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotificationsComponent.html":{},"injectables/PageTitleService.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{}}}],["set('author",{"_index":1944,"title":{},"body":{"injectables/ROPCService.html":{}}}],["set('filt",{"_index":1094,"title":{},"body":{"interfaces/Filter.html":{}}}],["set('pagenumb",{"_index":1096,"title":{},"body":{"interfaces/Filter.html":{}}}],["set('pages",{"_index":1098,"title":{},"body":{"interfaces/Filter.html":{}}}],["set('sortord",{"_index":1095,"title":{},"body":{"interfaces/Filter.html":{}}}],["seticonmod",{"_index":1390,"title":{"classes/SetIconMode.html":{}},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["setnglet(valu",{"_index":1730,"title":{},"body":{"directives/NgLetDirective.html":{}}}],["setstat",{"_index":451,"title":{},"body":{"interfaces/AuthStateModel.html":{},"classes/Go.html":{},"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"interfaces/RouterStateModel.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"classes/UpdateRouterState.html":{}}}],["setstyl",{"_index":2163,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["setstyle(key",{"_index":2167,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["settimeout",{"_index":108,"title":{},"body":{"components/ActivityComponent.html":{},"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"components/SearchComponent.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/TrafficSourcesComponent.html":{}}}],["settimeout(_",{"_index":352,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["settimeout(loop",{"_index":356,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["settitle(titl",{"_index":1818,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["sharedmodul",{"_index":841,"title":{"modules/SharedModule.html":{}},"body":{"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"modules/HomeModule.html":{},"classes/MyHammerConfig.html":{},"modules/SharedModule.html":{},"modules/WidgetsModule.html":{},"modules.html":{}}}],["shippingsum",{"_index":1471,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["shop",{"_index":1847,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["shopping_basket",{"_index":1956,"title":{},"body":{"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{}}}],["show",{"_index":2496,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["showbreadcrumb",{"_index":2237,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["showlegend",{"_index":1993,"title":{},"body":{"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["showmaxmin",{"_index":1514,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["showstatu",{"_index":2489,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["showxaxi",{"_index":1984,"title":{},"body":{"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["showyaxi",{"_index":1985,"title":{},"body":{"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["side",{"_index":1120,"title":{},"body":{"interfaces/Filter.html":{}}}],["sidenav",{"_index":1659,"title":{},"body":{"interfaces/MenuItem.html":{},"components/ToolbarComponent.html":{}}}],["sidenav.compon",{"_index":2144,"title":{},"body":{"modules/SidenavModule.html":{}}}],["sidenav.direct",{"_index":2143,"title":{},"body":{"modules/SidenavModule.html":{}}}],["sidenav/icon",{"_index":2142,"title":{},"body":{"modules/SidenavModule.html":{}}}],["sidenavcompon",{"_index":2135,"title":{},"body":{"modules/SidenavModule.html":{}}}],["sidenavitemcompon",{"_index":2134,"title":{},"body":{"modules/SidenavModule.html":{}}}],["sidenavmodul",{"_index":870,"title":{"modules/SidenavModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/SidenavModule.html":{},"modules.html":{}}}],["sidenavservic",{"_index":2061,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["sidenavst",{"_index":2492,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sidiou",{"_index":585,"title":{},"body":{"components/BlogComponent.html":{}}}],["signup",{"_index":1287,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sit",{"_index":525,"title":{},"body":{"components/BlogComponent.html":{}}}],["sith",{"_index":605,"title":{},"body":{"components/BlogComponent.html":{}}}],["skipself",{"_index":777,"title":{},"body":{"modules/CoreModule.html":{}}}],["skywalk",{"_index":539,"title":{},"body":{"components/BlogComponent.html":{}}}],["slot",{"_index":2161,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["sm",{"_index":1633,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["smooth",{"_index":2024,"title":{},"body":{"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"dependencies.html":{}}}],["snackbar",{"_index":969,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["snackbarconfig",{"_index":965,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["softwar",{"_index":1952,"title":{},"body":{"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{}}}],["solo",{"_index":565,"title":{},"body":{"components/BlogComponent.html":{}}}],["sort",{"_index":2293,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["sort.t",{"_index":2540,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sortord",{"_index":1087,"title":{},"body":{"interfaces/Filter.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"injectables/AccountService.html":{},"components/ActivityComponent.html":{},"classes/Address.html":{},"classes/Animations.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"modules/AppConfirmModule.html":{},"injectables/AppConfirmService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/AuthGuard.html":{},"classes/AuthModeChanged.html":{},"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AuthorizationErrorResponse.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"modules/BreadcrumbsModule.html":{},"modules/CdkModule.html":{},"classes/ChangeAuthMode.html":{},"pipes/CharactersPipe.html":{},"directives/ClickOutsideDirective.html":{},"components/ContextMenuComponent.html":{},"modules/ContextMenuModule.html":{},"directives/ContextMenuTriggerDirective.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"interfaces/Crumb.html":{},"injectables/D3ChartService.html":{},"modules/DashboardModule.html":{},"interfaces/DocsSiteTheme.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventBus.html":{},"components/ExperimentsComponent.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"modules/FullscreenModule.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"modules/HomeModule.html":{},"injectables/InMemoryDataService.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"classes/LoadProfile.html":{},"components/LoadingOverlayComponent.html":{},"modules/LoadingOverlayModule.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"modules/MaterialDateModule.html":{},"modules/MaterialModule.html":{},"injectables/MediaQueryService.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"directives/MinValidatorDirective.html":{},"classes/MyHammerConfig.html":{},"modules/NavigatorModule.html":{},"classes/NextCurrentlyOpened.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/NotificationsComponent.html":{},"modules/NxPipesModule.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"classes/ProfileLoaded.html":{},"components/QuickpanelComponent.html":{},"modules/QuickpanelModule.html":{},"injectables/ROPCService.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"interfaces/RouterStateModel.html":{},"modules/ScrollToTopModule.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"modules/ScrollbarModule.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"classes/SetIconMode.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"modules/WidgetsModule.html":{},"pipes/WordsPipe.html":{},"index.html":{}}}],["sourceoverviewwidgetcompon",{"_index":134,"title":{"components/SourceOverviewWidgetComponent.html":{}},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"modules/WidgetsModule.html":{}}}],["sources.component.html",{"_index":2270,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["sources.component.t",{"_index":2268,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["sources.component.ts:10",{"_index":2277,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["sources.component.ts:11",{"_index":2273,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["sources.component.ts:12",{"_index":2274,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["sources.component.ts:13",{"_index":2278,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["sources.component.ts:15",{"_index":2282,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["sources.component.ts:16",{"_index":2272,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["sources.component.ts:22",{"_index":2280,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["sources.component.ts:56",{"_index":2281,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["sources.component.ts:9",{"_index":2279,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["sources/traff",{"_index":2267,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["specifi",{"_index":2166,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["sphinx",{"_index":509,"title":{},"body":{"components/BlogComponent.html":{}}}],["sprint",{"_index":1433,"title":{},"body":{"components/LandingComponent.html":{}}}],["sr",{"_index":1875,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["stackedareachart",{"_index":1497,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["standard",{"_index":2441,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":753,"title":{"changelog.html":{},"index.html":{}},"body":{"directives/ContextMenuTriggerDirective.html":{},"components/LandingComponent.html":{},"index.html":{}}}],["start:dev",{"_index":2508,"title":{},"body":{"index.html":{}}}],["start:mock",{"_index":2512,"title":{},"body":{"index.html":{}}}],["startanim",{"_index":1244,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["startanimation(st",{"_index":1248,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["starter",{"_index":63,"title":{},"body":{"injectables/AccountService.html":{},"classes/Address.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"injectables/EventBus.html":{},"modules/ExperimentsModule.html":{},"components/FeaturesComponent.html":{},"modules/FullscreenModule.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"modules/HomeModule.html":{},"classes/InitializeData.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"classes/MyHammerConfig.html":{},"classes/NextCurrentlyOpened.html":{},"components/OverviewComponent.html":{},"modules/QuickpanelModule.html":{},"components/SearchBarComponent.html":{},"classes/SetIconMode.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"components/UserMenuComponent.html":{},"modules/WidgetsModule.html":{}}}],["startup",{"_index":1065,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["state",{"_index":36,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"classes/Address.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AuthorizationErrorResponse.html":{},"components/FeaturesComponent.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"classes/InitializeData.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"components/QuickpanelComponent.html":{},"interfaces/RouterStateModel.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"classes/UpdateRouterState.html":{}}}],["state.authmod",{"_index":444,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["state.currentlyopen",{"_index":1403,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["state.enum.t",{"_index":2494,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["state.iconmod",{"_index":1402,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["state.isloggedin",{"_index":440,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["state.profil",{"_index":442,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["state.tree.root.children",{"_index":1400,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["state/eventbu",{"_index":810,"title":{},"body":{"modules/CoreModule.html":{}}}],["state/router.st",{"_index":808,"title":{},"body":{"modules/CoreModule.html":{}}}],["statecontext",{"_index":433,"title":{},"body":{"interfaces/AuthStateModel.html":{},"classes/Go.html":{},"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"interfaces/RouterStateModel.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"classes/UpdateRouterState.html":{}}}],["static",{"_index":419,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{},"interfaces/DocsSiteTheme.html":{},"interceptors/ErrorInterceptor.html":{},"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"modules/NavigatorModule.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"modules/SvgViewerModule.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["statist",{"_index":1892,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["statu",{"_index":951,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["stay",{"_index":1451,"title":{},"body":{"components/LandingComponent.html":{}}}],["storag",{"_index":907,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"injectables/ThemeStorageService.html":{}}}],["storage.servic",{"_index":2221,"title":{},"body":{"modules/ThemePickerModule.html":{}}}],["storage.service.t",{"_index":893,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"injectables/ThemeStorageService.html":{}}}],["storage.service.ts:13",{"_index":2227,"title":{},"body":{"injectables/ThemeStorageService.html":{}}}],["storage.service.ts:15",{"_index":2226,"title":{},"body":{"injectables/ThemeStorageService.html":{}}}],["storage.service.ts:17",{"_index":2225,"title":{},"body":{"injectables/ThemeStorageService.html":{}}}],["storage.service.ts:22",{"_index":2224,"title":{},"body":{"injectables/ThemeStorageService.html":{}}}],["storage.service.ts:26",{"_index":2223,"title":{},"body":{"injectables/ThemeStorageService.html":{}}}],["storage.service.ts:4",{"_index":900,"title":{},"body":{"interfaces/DocsSiteTheme.html":{}}}],["storage.service.ts:5",{"_index":899,"title":{},"body":{"interfaces/DocsSiteTheme.html":{}}}],["storage.service.ts:6",{"_index":903,"title":{},"body":{"interfaces/DocsSiteTheme.html":{}}}],["storage.service.ts:7",{"_index":901,"title":{},"body":{"interfaces/DocsSiteTheme.html":{}}}],["storage.service.ts:8",{"_index":902,"title":{},"body":{"interfaces/DocsSiteTheme.html":{}}}],["storagekey",{"_index":905,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"injectables/ThemeStorageService.html":{}}}],["store",{"_index":332,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"interceptors/ErrorInterceptor.html":{},"classes/Go.html":{},"components/HeaderComponent.html":{},"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"interfaces/RouterStateModel.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"index.html":{}}}],["storethem",{"_index":2222,"title":{},"body":{"injectables/ThemeStorageService.html":{}}}],["storetheme(them",{"_index":910,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"injectables/ThemeStorageService.html":{}}}],["strategi",{"_index":2355,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["street",{"_index":155,"title":{},"body":{"classes/Address.html":{}}}],["string",{"_index":17,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"injectables/AccountService.html":{},"classes/Address.html":{},"injectables/AppConfirmService.html":{},"classes/AuthModeChanged.html":{},"interfaces/AuthorizationErrorResponse.html":{},"components/BreadcrumbsComponent.html":{},"classes/ChangeAuthMode.html":{},"pipes/CharactersPipe.html":{},"interfaces/Crumb.html":{},"interfaces/DocsSiteTheme.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"injectables/InMemoryDataService.html":{},"classes/InitializeData.html":{},"classes/LoadProfile.html":{},"classes/Login.html":{},"classes/LoginCanceled.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutSuccess.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"directives/MinValidatorDirective.html":{},"classes/NextCurrentlyOpened.html":{},"injectables/PageTitleService.html":{},"classes/ProfileLoaded.html":{},"injectables/ROPCService.html":{},"interfaces/RouterStateModel.html":{},"components/SearchBarComponent.html":{},"classes/SetIconMode.html":{},"injectables/StyleManagerService.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"classes/UpdateRouterState.html":{},"pipes/WordsPipe.html":{}}}],["structur",{"_index":2329,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["style",{"_index":1170,"title":{},"body":{"components/FooterComponent.html":{},"injectables/StyleManagerService.html":{},"modules/ThemePickerModule.html":{}}}],["stylemanagerservic",{"_index":2157,"title":{"injectables/StyleManagerService.html":{}},"body":{"injectables/StyleManagerService.html":{},"modules/ThemePickerModule.html":{}}}],["stylesheet",{"_index":2160,"title":{},"body":{"injectables/StyleManagerService.html":{}}}],["styleurl",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"interfaces/Crumb.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["subject",{"_index":737,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{},"components/QuickpanelComponent.html":{}}}],["subscrib",{"_index":767,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{},"injectables/ServiceWorkerService.html":{}}}],["subscribe(al",{"_index":1227,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["subscribe(r",{"_index":1624,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["subtitl",{"_index":89,"title":{},"body":{"components/ActivityComponent.html":{},"components/TrafficSourcesComponent.html":{}}}],["sumanth",{"_index":2387,"title":{},"body":{"components/UserMenuComponent.html":{}}}],["sumo",{"_index":1164,"title":{},"body":{"components/FooterComponent.html":{},"components/LandingComponent.html":{},"components/NotificationsComponent.html":{},"components/UserMenuComponent.html":{}}}],["super",{"_index":2193,"title":{},"body":{"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{}}}],["super(httpcli",{"_index":68,"title":{},"body":{"injectables/AccountService.html":{}}}],["superior",{"_index":1054,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["support",{"_index":1061,"title":{},"body":{"components/FeaturesComponent.html":{},"modules.html":{}}}],["suppressscrollx",{"_index":2128,"title":{},"body":{"modules/SharedModule.html":{}}}],["sure",{"_index":2528,"title":{},"body":{"index.html":{}}}],["svg",{"_index":2207,"title":{},"body":{"modules/SvgViewerModule.html":{},"modules.html":{}}}],["svgviewercompon",{"_index":2204,"title":{},"body":{"modules/SvgViewerModule.html":{}}}],["svgviewerconfig",{"_index":2182,"title":{"classes/SvgViewerConfig.html":{}},"body":{"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"modules/SvgViewerModule.html":{}}}],["svgviewerconfig:5",{"_index":2199,"title":{},"body":{"classes/SvgViewerDefaultConfig.html":{}}}],["svgviewerdefaultconfig",{"_index":2189,"title":{"classes/SvgViewerDefaultConfig.html":{}},"body":{"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"modules/SvgViewerModule.html":{}}}],["svgviewermodul",{"_index":1328,"title":{"modules/SvgViewerModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/SvgViewerModule.html":{},"modules.html":{}}}],["svgviewerservic",{"_index":2205,"title":{},"body":{"modules/SvgViewerModule.html":{}}}],["sw",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["swimlane/ngx",{"_index":2462,"title":{},"body":{"dependencies.html":{}}}],["swing",{"_index":1265,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["swipe",{"_index":998,"title":{},"body":{"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{}}}],["switch",{"_index":458,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["swupdat",{"_index":1949,"title":{},"body":{"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"injectables/ServiceWorkerService.html":{}}}],["symbol",{"_index":1362,"title":{},"body":{"injectables/InMemoryDataService.html":{},"modules/NavigatorModule.html":{}}}],["symbol.iter",{"_index":2368,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["t",{"_index":927,"title":{},"body":{"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"interfaces/Filter.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["takeuntil",{"_index":740,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["tap",{"_index":1271,"title":{},"body":{"directives/HammertimeDirective.html":{}}}],["tap(",{"_index":1274,"title":{},"body":{"directives/HammertimeDirective.html":{}}}],["target",{"_index":1260,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["targetel",{"_index":689,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["taxsum",{"_index":1472,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["team",{"_index":1460,"title":{},"body":{"components/LandingComponent.html":{}}}],["temp",{"_index":1896,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["templat",{"_index":71,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["templateport",{"_index":738,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["templateportal(this.contextmenu",{"_index":761,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["templateref",{"_index":732,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{}}}],["templateurl",{"_index":81,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"interfaces/Crumb.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["temporalfunctiontojson",{"_index":1144,"title":{},"body":{"interfaces/Filter.html":{}}}],["temporarily_unavail",{"_index":30,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{},"miscellaneous/typealiases.html":{}}}],["test",{"_index":1039,"title":{},"body":{"components/FeaturesComponent.html":{},"components/LandingComponent.html":{},"index.html":{}}}],["text",{"_index":321,"title":{},"body":{"classes/AppPage.html":{},"interfaces/MenuItem.html":{}}}],["textcolor",{"_index":2271,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["themabl",{"_index":1449,"title":{},"body":{"components/LandingComponent.html":{}}}],["theme",{"_index":906,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"components/FeaturesComponent.html":{},"modules/ThemePickerModule.html":{},"injectables/ThemeStorageService.html":{}}}],["themepickercompon",{"_index":2217,"title":{},"body":{"modules/ThemePickerModule.html":{}}}],["themepickermodul",{"_index":1327,"title":{"modules/ThemePickerModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/ThemePickerModule.html":{},"modules.html":{}}}],["themestorageservic",{"_index":904,"title":{"injectables/ThemeStorageService.html":{}},"body":{"interfaces/DocsSiteTheme.html":{},"modules/ThemePickerModule.html":{},"injectables/ThemeStorageService.html":{}}}],["this._changes$.asobserv",{"_index":1636,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["this._changes$.complet",{"_index":1628,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["this._changes$.error(err",{"_index":1627,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["this._changes$.next(r",{"_index":1625,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["this._changes$.subscribe(chang",{"_index":1629,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["this._context",{"_index":1726,"title":{},"body":{"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{}}}],["this._context.$implicit",{"_index":1721,"title":{},"body":{"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{}}}],["this._context.nglet",{"_index":1722,"title":{},"body":{"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{}}}],["this._destroy",{"_index":741,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["this._destroy$.complet",{"_index":743,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["this._destroy$.next",{"_index":742,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["this._el",{"_index":2027,"title":{},"body":{"components/ScrollbarComponent.html":{}}}],["this._elementref.nativeelement.contains(targetel",{"_index":695,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["this._lowerthanlarge.asobserv",{"_index":1638,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["this._lowerthanlarge.next(change.mqalia",{"_index":1634,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["this._lowerthanmedium.asobserv",{"_index":1637,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["this._lowerthanmedium.next(change.mqalia",{"_index":1630,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["this._overlay",{"_index":749,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["this._overlay.cr",{"_index":760,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["this._pagetitleservice.titl",{"_index":1430,"title":{},"body":{"components/LandingComponent.html":{}}}],["this._postorder(child",{"_index":2363,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["this._postorder(curr",{"_index":2365,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["this._preorder(child",{"_index":2361,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["this._preorder(curr",{"_index":2366,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["this._titl",{"_index":1820,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["this._tre",{"_index":2310,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["this._tree.findbypredicatebfs((nod",{"_index":2302,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["this._tree.traversebfs((nod",{"_index":2300,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["this._tree.traversedfs((nod",{"_index":2298,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["this._vcr",{"_index":762,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["this.actions$.pipe(ofaction(login)).subscribe(act",{"_index":975,"title":{},"body":{"injectables/EventBus.html":{}}}],["this.activatedrout",{"_index":1219,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["this.addparentlinks(d",{"_index":2335,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["this.addparentlinks(root",{"_index":2321,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["this.animationst",{"_index":1252,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["this.authservice.login(payload).pip",{"_index":470,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["this.authservice.logout",{"_index":468,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["this.authservice.startautorefreshtoken",{"_index":448,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["this.authservice.stopautorefreshtoken",{"_index":453,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["this.baseurl",{"_index":2194,"title":{},"body":{"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{}}}],["this.bodytitle.settitle(`${title}is360",{"_index":1822,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["this.chartopt",{"_index":1496,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["this.config",{"_index":2324,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["this.config.nodecomparatorfn",{"_index":2325,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["this.currentuser.given_nam",{"_index":2386,"title":{},"body":{"components/UserMenuComponent.html":{}}}],["this.currentuser.photourl",{"_index":2388,"title":{},"body":{"components/UserMenuComponent.html":{}}}],["this.d3",{"_index":1486,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["this.data[0].values.reduce((a",{"_index":1489,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["this.data[1].values.reduce((a",{"_index":1493,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["this.data[2].values.reduce((a",{"_index":1495,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["this.dialog.open(appconfirmcompon",{"_index":261,"title":{},"body":{"injectables/AppConfirmService.html":{}}}],["this.doubletap.emit(",{"_index":1280,"title":{},"body":{"directives/HammertimeDirective.html":{}}}],["this.el",{"_index":2026,"title":{},"body":{"components/ScrollbarComponent.html":{}}}],["this.findbfs(tonod",{"_index":2343,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["this.focus",{"_index":2076,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.getallparents(level4",{"_index":2306,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["this.getparents(tre",{"_index":1416,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["this.httpclient",{"_index":1082,"title":{},"body":{"interfaces/Filter.html":{}}}],["this.httpclient.get(`${this.baseurl}/${this.entitypath}`).pip",{"_index":1107,"title":{},"body":{"interfaces/Filter.html":{}}}],["this.httpclient.post(this.oauthservice.logouturl",{"_index":1940,"title":{},"body":{"injectables/ROPCService.html":{}}}],["this.isfullscreen",{"_index":1187,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["this.isload",{"_index":106,"title":{},"body":{"components/ActivityComponent.html":{},"components/TrafficSourcesComponent.html":{}}}],["this.isopen",{"_index":1774,"title":{},"body":{"components/NotificationsComponent.html":{},"components/SearchComponent.html":{},"components/UserMenuComponent.html":{}}}],["this.item",{"_index":1680,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["this.item.children",{"_index":1681,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["this.item.children.length",{"_index":1682,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["this.item.open",{"_index":1678,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["this.loadingsubject.asobserv",{"_index":1078,"title":{},"body":{"interfaces/Filter.html":{}}}],["this.loadingsubject.next(fals",{"_index":1085,"title":{},"body":{"interfaces/Filter.html":{}}}],["this.loadingsubject.next(tru",{"_index":1081,"title":{},"body":{"interfaces/Filter.html":{}}}],["this.min",{"_index":1704,"title":{},"body":{"directives/MinValidatorDirective.html":{}}}],["this.modalservice.open(this.modalcontent).result.then",{"_index":2107,"title":{},"body":{"injectables/ServiceWorkerService.html":{}}}],["this.nxtkclickoutside.emit(ev",{"_index":696,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["this.oauthservice.clientid).set('refresh_token",{"_index":1939,"title":{},"body":{"injectables/ROPCService.html":{}}}],["this.oauthservice.configure(authconfigimplicit",{"_index":463,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["this.oauthservice.configure(authconfigpassword",{"_index":461,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["this.oauthservice.fetchtokenusingpasswordflowandloaduserprofile(usernam",{"_index":1918,"title":{},"body":{"injectables/ROPCService.html":{}}}],["this.oauthservice.getaccesstoken",{"_index":1936,"title":{},"body":{"injectables/ROPCService.html":{}}}],["this.oauthservice.getrefreshtoken",{"_index":1934,"title":{},"body":{"injectables/ROPCService.html":{}}}],["this.oauthservice.hasvalidaccesstoken",{"_index":360,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.oauthservice.hasvalididtoken",{"_index":359,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.oauthservice.loaddiscoverydocu",{"_index":464,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["this.oauthservice.logout(tru",{"_index":1937,"title":{},"body":{"injectables/ROPCService.html":{}}}],["this.oauthservice.refreshtoken",{"_index":1919,"title":{},"body":{"injectables/ROPCService.html":{}}}],["this.onthemeupdate.emit(them",{"_index":913,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"injectables/ThemeStorageService.html":{}}}],["this.properti",{"_index":924,"title":{},"body":{"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{}}}],["this.recentlyvisited.indexof(item",{"_index":2070,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.recentlyvisited.length",{"_index":2073,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.recentlyvisited.pop",{"_index":2075,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.recentlyvisited.splice(index",{"_index":2071,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.recentlyvisited.unshift(item",{"_index":2072,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.renderer.addclass(document.bodi",{"_index":1747,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["this.renderer.removeclass(document.bodi",{"_index":1745,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["this.renderer.selectrootelement(this.input.nativeelement).focu",{"_index":2093,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.revenuesum",{"_index":1488,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["this.root",{"_index":2320,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["this.router.ev",{"_index":1217,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["this.router.events.subscribe(ev",{"_index":2068,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.router.navigate(['/dashboard",{"_index":449,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["this.router.navigate(['/hom",{"_index":454,"title":{},"body":{"interfaces/AuthStateModel.html":{}}}],["this.router.navigate(path",{"_index":1236,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["this.scrollbarref",{"_index":2029,"title":{},"body":{"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{}}}],["this.shippingsum",{"_index":1494,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["this.sidenavservice.getitembyroute(event.urlafterredirect",{"_index":2069,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.snackbar.open",{"_index":954,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.store.dispatch",{"_index":1228,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["this.store.dispatch(new",{"_index":364,"title":{},"body":{"injectables/AuthGuard.html":{},"components/HeaderComponent.html":{},"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/UserMenuComponent.html":{}}}],["this.sw.checkswupd",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["this.swupdate.activateupd",{"_index":2108,"title":{},"body":{"injectables/ServiceWorkerService.html":{}}}],["this.swupdate.available.subscrib",{"_index":2103,"title":{},"body":{"injectables/ServiceWorkerService.html":{}}}],["this.swupdate.checkforupd",{"_index":2111,"title":{},"body":{"injectables/ServiceWorkerService.html":{}}}],["this.taxsum",{"_index":1492,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["this.tripletap.emit(",{"_index":1281,"title":{},"body":{"directives/HammertimeDirective.html":{}}}],["this.zone.runoutsideangular",{"_index":2028,"title":{},"body":{"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{}}}],["thrawn",{"_index":581,"title":{},"body":{"components/BlogComponent.html":{}}}],["throw",{"_index":830,"title":{},"body":{"modules/CoreModule.html":{}}}],["throwerror",{"_index":962,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interfaces/Filter.html":{}}}],["throwerror('someth",{"_index":1137,"title":{},"body":{"interfaces/Filter.html":{}}}],["throwerror(errorr",{"_index":957,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["tick",{"_index":1986,"title":{},"body":{"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["tickformat",{"_index":1511,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["time",{"_index":1066,"title":{},"body":{"components/FeaturesComponent.html":{},"interfaces/Filter.html":{},"components/QuickpanelComponent.html":{},"components/RecentSalesComponent.html":{}}}],["timeout",{"_index":348,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["titl",{"_index":90,"title":{},"body":{"components/ActivityComponent.html":{},"injectables/AppConfirmService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Crumb.html":{},"interfaces/MenuItem.html":{},"injectables/PageTitleService.html":{},"components/QuickpanelComponent.html":{},"components/TrafficSourcesComponent.html":{}}}],["title(titl",{"_index":1821,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["title.servic",{"_index":789,"title":{},"body":{"modules/CoreModule.html":{}}}],["title.service.t",{"_index":1808,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["title.service.ts:11",{"_index":1817,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["title.service.ts:15",{"_index":1819,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["title.service.ts:21",{"_index":1813,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["title.service.ts:9",{"_index":1815,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["title/pag",{"_index":788,"title":{},"body":{"modules/CoreModule.html":{},"injectables/PageTitleService.html":{}}}],["today",{"_index":1828,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["todo",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Filter.html":{},"components/HomeLayoutComponent.html":{},"components/QuickpanelComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["todolist",{"_index":1829,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["todolist.tim",{"_index":1886,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["todolist.titl",{"_index":1885,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["togeth",{"_index":1853,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["togglecurrentlyopen",{"_index":1391,"title":{"classes/ToggleCurrentlyOpened.html":{}},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["togglecurrentlyopenedbyrout",{"_index":1392,"title":{"classes/ToggleCurrentlyOpenedByRoute.html":{}},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["toggledropdown",{"_index":1765,"title":{},"body":{"components/NotificationsComponent.html":{},"components/UserMenuComponent.html":{}}}],["togglefullscreen",{"_index":1180,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["tonod",{"_index":2342,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["toolbar",{"_index":2234,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar.compon",{"_index":2256,"title":{},"body":{"modules/ToolbarModule.html":{}}}],["toolbar.component.html",{"_index":2236,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":2235,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar.help",{"_index":2246,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcompon",{"_index":2232,"title":{"components/ToolbarComponent.html":{}},"body":{"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{}}}],["toolbarhelp",{"_index":2238,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarmodul",{"_index":871,"title":{"modules/ToolbarModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/ToolbarModule.html":{},"modules.html":{}}}],["tooltip",{"_index":1644,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["top",{"_index":758,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{},"modules/HomeModule.html":{},"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["top.compon",{"_index":2011,"title":{},"body":{"modules/ScrollToTopModule.html":{}}}],["top.component.t",{"_index":2491,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["top.module.t",{"_index":2010,"title":{},"body":{"modules/ScrollToTopModule.html":{}}}],["top/src/scrol",{"_index":2009,"title":{},"body":{"modules/ScrollToTopModule.html":{},"miscellaneous/enumerations.html":{}}}],["total",{"_index":2275,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["toxic",{"_index":501,"title":{},"body":{"components/BlogComponent.html":{}}}],["traffic",{"_index":2269,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["trafficsourcescompon",{"_index":2265,"title":{"components/TrafficSourcesComponent.html":{}},"body":{"components/TrafficSourcesComponent.html":{},"modules/WidgetsModule.html":{}}}],["trail",{"_index":665,"title":{},"body":{"pipes/CharactersPipe.html":{},"pipes/WordsPipe.html":{}}}],["transform",{"_index":662,"title":{},"body":{"pipes/CharactersPipe.html":{},"pipes/WordsPipe.html":{}}}],["transform(valu",{"_index":663,"title":{},"body":{"pipes/CharactersPipe.html":{},"pipes/WordsPipe.html":{}}}],["traversalstrategi",{"_index":2314,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["traversalstrategy.preord",{"_index":2356,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["traversebfs(fn",{"_index":2367,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["traversedfs(fn",{"_index":2364,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["tree",{"_index":73,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"classes/SetIconMode.html":{},"components/SourceOverviewWidgetComponent.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["tree.findbypredicatebfs(nod",{"_index":1418,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["tree.getallparents(item",{"_index":1407,"title":{},"body":{"classes/InitializeData.html":{},"interfaces/MenuStateModel.html":{},"classes/NextCurrentlyOpened.html":{},"classes/SetIconMode.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{}}}],["treeconfig",{"_index":2286,"title":{"interfaces/TreeConfig.html":{}},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["treenod",{"_index":1641,"title":{"interfaces/TreeNode.html":{}},"body":{"interfaces/MenuItem.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["tri",{"_index":1140,"title":{},"body":{"interfaces/Filter.html":{}}}],["trigger.direct",{"_index":719,"title":{},"body":{"modules/ContextMenuModule.html":{}}}],["trigger.directive.t",{"_index":721,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["trigger.directive.ts:11",{"_index":733,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["trigger.directive.ts:13",{"_index":730,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["trigger.directive.ts:17",{"_index":736,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["trigger.directive.ts:25",{"_index":735,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{}}}],["trip",{"_index":1856,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["tripletap",{"_index":1270,"title":{},"body":{"directives/HammertimeDirective.html":{}}}],["true",{"_index":107,"title":{},"body":{"components/ActivityComponent.html":{},"injectables/AppConfirmService.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthStateModel.html":{},"components/ContextMenuComponent.html":{},"modules/CoreModule.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"components/LineChartWidgetComponent.html":{},"interfaces/MenuItem.html":{},"directives/MinValidatorDirective.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["truncate/characters.pip",{"_index":1795,"title":{},"body":{"modules/NxPipesModule.html":{}}}],["truncate/words.pip",{"_index":1796,"title":{},"body":{"modules/NxPipesModule.html":{}}}],["truncate_pip",{"_index":1797,"title":{},"body":{"modules/NxPipesModule.html":{}}}],["tune",{"_index":1443,"title":{},"body":{"components/LandingComponent.html":{}}}],["tusken",{"_index":542,"title":{},"body":{"components/BlogComponent.html":{}}}],["twi'lek",{"_index":551,"title":{},"body":{"components/BlogComponent.html":{}}}],["twi\\'lek",{"_index":611,"title":{},"body":{"components/BlogComponent.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"injectables/AccountService.html":{},"components/ActivityComponent.html":{},"classes/Address.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"injectables/AppConfirmService.html":{},"injectables/AuthGuard.html":{},"classes/AuthModeChanged.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AuthorizationErrorResponse.html":{},"components/BreadcrumbsComponent.html":{},"classes/ChangeAuthMode.html":{},"pipes/CharactersPipe.html":{},"directives/ClickOutsideDirective.html":{},"directives/ContextMenuTriggerDirective.html":{},"interfaces/Crumb.html":{},"injectables/D3ChartService.html":{},"interfaces/DocsSiteTheme.html":{},"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventBus.html":{},"components/FeaturesComponent.html":{},"classes/Go.html":{},"components/HammerCardComponent.html":{},"directives/HammertimeDirective.html":{},"components/HeaderComponent.html":{},"injectables/InMemoryDataService.html":{},"classes/InitializeData.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"classes/LoadProfile.html":{},"components/LoadingOverlayComponent.html":{},"classes/Login.html":{},"classes/LoginSuccess.html":{},"injectables/MediaQueryService.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"interfaces/MenuStateModel.html":{},"directives/MinValidatorDirective.html":{},"classes/NextCurrentlyOpened.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"components/QuickpanelComponent.html":{},"injectables/ROPCService.html":{},"components/RecentSalesComponent.html":{},"interfaces/RouterStateModel.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"classes/SetIconMode.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"injectables/ThemeStorageService.html":{},"classes/ToggleCurrentlyOpened.html":{},"classes/ToggleCurrentlyOpenedByRoute.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"classes/UpdateRouterState.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"pipes/WordsPipe.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":2536,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":863,"title":{},"body":{"injectables/D3ChartService.html":{}}}],["typescript",{"_index":1053,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["typographi",{"_index":1746,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["ui",{"_index":1042,"title":{},"body":{"components/FeaturesComponent.html":{},"components/LandingComponent.html":{}}}],["unauthorized_cli",{"_index":24,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{},"miscellaneous/typealiases.html":{}}}],["unauthorizedcli",{"_index":23,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{},"miscellaneous/typealiases.html":{}}}],["undefin",{"_index":2338,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["under",{"_index":1168,"title":{},"body":{"components/FooterComponent.html":{}}}],["unit",{"_index":2521,"title":{},"body":{"index.html":{}}}],["unsuccess",{"_index":1127,"title":{},"body":{"interfaces/Filter.html":{}}}],["unsupported_grant_typ",{"_index":33,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{},"miscellaneous/typealiases.html":{}}}],["unsupported_response_typ",{"_index":27,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{},"miscellaneous/typealiases.html":{}}}],["up",{"_index":1103,"title":{},"body":{"interfaces/Filter.html":{}}}],["upcom",{"_index":1881,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["updat",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"injectables/ServiceWorkerService.html":{},"classes/UpdateRouterState.html":{}}}],["updaterouterst",{"_index":1211,"title":{"classes/UpdateRouterState.html":{}},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["url",{"_index":19,"title":{},"body":{"interfaces/AccessTokenErrorResponse.html":{},"interfaces/AuthorizationErrorResponse.html":{},"injectables/InMemoryDataService.html":{}}}],["urlencod",{"_index":1926,"title":{},"body":{"injectables/ROPCService.html":{}}}],["us",{"_index":1050,"title":{},"body":{"components/FeaturesComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"index.html":{}}}],["usag",{"_index":1895,"title":{},"body":{"components/QuickpanelComponent.html":{},"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{},"miscellaneous/enumerations.html":{}}}],["useclass",{"_index":828,"title":{},"body":{"modules/CoreModule.html":{},"modules/ExperimentsModule.html":{},"classes/MyHammerConfig.html":{},"modules/SvgViewerModule.html":{}}}],["useexist",{"_index":1702,"title":{},"body":{"directives/MinValidatorDirective.html":{}}}],["usefactori",{"_index":421,"title":{},"body":{"modules/AuthModule.html":{}}}],["useinteractiveguidelin",{"_index":1518,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["user",{"_index":1135,"title":{},"body":{"interfaces/Filter.html":{},"components/LandingComponent.html":{},"injectables/ServiceWorkerService.html":{},"components/UserMenuComponent.html":{}}}],["usermenucompon",{"_index":2254,"title":{"components/UserMenuComponent.html":{}},"body":{"modules/ToolbarModule.html":{},"components/UserMenuComponent.html":{}}}],["usernam",{"_index":1915,"title":{},"body":{"injectables/ROPCService.html":{}}}],["usevalu",{"_index":1568,"title":{},"body":{"modules/MaterialDateModule.html":{},"modules/NavigatorModule.html":{},"modules/SharedModule.html":{},"modules/SvgViewerModule.html":{}}}],["utapau",{"_index":573,"title":{},"body":{"components/BlogComponent.html":{}}}],["util",{"_index":1347,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["utils.parserequesturl(newurl",{"_index":1377,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["v1",{"_index":2400,"title":{},"body":{"components/WidgetComponent.html":{}}}],["v1.component.html",{"_index":2402,"title":{},"body":{"components/WidgetComponent.html":{}}}],["v1.component.scss",{"_index":2401,"title":{},"body":{"components/WidgetComponent.html":{}}}],["v1.component.t",{"_index":2399,"title":{},"body":{"components/WidgetComponent.html":{}}}],["v1.component.ts:10",{"_index":2404,"title":{},"body":{"components/WidgetComponent.html":{}}}],["v1.component.ts:12",{"_index":2405,"title":{},"body":{"components/WidgetComponent.html":{}}}],["v1.component.ts:14",{"_index":2407,"title":{},"body":{"components/WidgetComponent.html":{}}}],["v1.component.ts:16",{"_index":2403,"title":{},"body":{"components/WidgetComponent.html":{}}}],["v1.component.ts:22",{"_index":2406,"title":{},"body":{"components/WidgetComponent.html":{}}}],["v1/line",{"_index":1464,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["v1/sourc",{"_index":2146,"title":{},"body":{"components/SourceOverviewWidgetComponent.html":{}}}],["v1/widget",{"_index":2398,"title":{},"body":{"components/WidgetComponent.html":{}}}],["v6.0.0",{"_index":2476,"title":{},"body":{"dependencies.html":{}}}],["vacat",{"_index":1837,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["vader",{"_index":609,"title":{},"body":{"components/BlogComponent.html":{}}}],["valid",{"_index":1693,"title":{},"body":{"directives/MinValidatorDirective.html":{}}}],["validate(control",{"_index":1697,"title":{},"body":{"directives/MinValidatorDirective.html":{}}}],["validators.min(this.min)(control",{"_index":1705,"title":{},"body":{"directives/MinValidatorDirective.html":{}}}],["valu",{"_index":51,"title":{},"body":{"injectables/AccountService.html":{},"components/ActivityComponent.html":{},"pipes/CharactersPipe.html":{},"components/ContextMenuComponent.html":{},"classes/EntityColumnDef.html":{},"interceptors/ErrorInterceptor.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HeaderComponent.html":{},"injectables/MediaQueryService.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"classes/MyHammerConfig.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/SearchBarComponent.html":{},"injectables/ThemeStorageService.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"pipes/WordsPipe.html":{},"miscellaneous/enumerations.html":{}}}],["value.length",{"_index":670,"title":{},"body":{"pipes/CharactersPipe.html":{}}}],["value.split(/\\",{"_index":2434,"title":{},"body":{"pipes/WordsPipe.html":{}}}],["value.substring(0",{"_index":671,"title":{},"body":{"pipes/CharactersPipe.html":{}}}],["value.substring(value.length",{"_index":669,"title":{},"body":{"pipes/CharactersPipe.html":{}}}],["vapor",{"_index":494,"title":{},"body":{"components/BlogComponent.html":{}}}],["var",{"_index":124,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["ventress",{"_index":586,"title":{},"body":{"components/BlogComponent.html":{}}}],["versatil",{"_index":1448,"title":{},"body":{"components/LandingComponent.html":{}}}],["version",{"_index":1010,"title":{},"body":{"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"injectables/ServiceWorkerService.html":{},"changelog.html":{}}}],["versions.angularcli}}angular",{"_index":1035,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["versions.angular}}angular",{"_index":1023,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["versions.flexlayout}}flex",{"_index":1051,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["versions.material}}angular",{"_index":1031,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["versions.ngxs}}ngx",{"_index":1043,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["versions.rxjs}}rxj",{"_index":1046,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["versions.typescript",{"_index":1052,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["vexingli",{"_index":484,"title":{},"body":{"components/BlogComponent.html":{}}}],["via",{"_index":2524,"title":{},"body":{"index.html":{}}}],["view",{"_index":1432,"title":{},"body":{"components/LandingComponent.html":{}}}],["viewchild",{"_index":2090,"title":{},"body":{"components/SearchComponent.html":{}}}],["viewchild('input",{"_index":2092,"title":{},"body":{"components/SearchComponent.html":{}}}],["viewcontainerref",{"_index":729,"title":{},"body":{"directives/ContextMenuTriggerDirective.html":{},"classes/NgLetContext.html":{},"directives/NgLetDirective.html":{}}}],["viewencapsul",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["viewencapsulation.non",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["viewer",{"_index":1339,"title":{},"body":{"modules/HomeModule.html":{}}}],["viewer.compon",{"_index":2208,"title":{},"body":{"modules/SvgViewerModule.html":{}}}],["viewer.config",{"_index":2210,"title":{},"body":{"modules/SvgViewerModule.html":{}}}],["viewer.config.t",{"_index":2185,"title":{},"body":{"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{}}}],["viewer.config.ts:5",{"_index":2186,"title":{},"body":{"classes/SvgViewerConfig.html":{}}}],["viewer.config.ts:8",{"_index":2197,"title":{},"body":{"classes/SvgViewerDefaultConfig.html":{}}}],["viewer.module.t",{"_index":2206,"title":{},"body":{"modules/SvgViewerModule.html":{}}}],["viewer.servic",{"_index":2209,"title":{},"body":{"modules/SvgViewerModule.html":{}}}],["viewer/src/svg",{"_index":2184,"title":{},"body":{"classes/SvgViewerConfig.html":{},"classes/SvgViewerDefaultConfig.html":{},"modules/SvgViewerModule.html":{}}}],["visibl",{"_index":925,"title":{},"body":{"interfaces/Entity.html":{},"classes/EntityColumnDef.html":{}}}],["visit",{"_index":2078,"title":{},"body":{"components/SearchBarComponent.html":{},"components/TrafficSourcesComponent.html":{}}}],["vixen",{"_index":518,"title":{},"body":{"components/BlogComponent.html":{}}}],["void",{"_index":100,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/ClickOutsideDirective.html":{},"directives/ContextMenuTriggerDirective.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"directives/NgLetDirective.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"injectables/PageTitleService.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/ServiceWorkerService.html":{},"components/SourceOverviewWidgetComponent.html":{},"injectables/StyleManagerService.html":{},"injectables/ThemeStorageService.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["waituntil(_",{"_index":362,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["waituntil(condit",{"_index":347,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["wampa",{"_index":562,"title":{},"body":{"components/BlogComponent.html":{}}}],["wan",{"_index":580,"title":{},"body":{"components/BlogComponent.html":{}}}],["want",{"_index":1954,"title":{},"body":{"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"injectables/ServiceWorkerService.html":{}}}],["watto",{"_index":608,"title":{},"body":{"components/BlogComponent.html":{}}}],["way",{"_index":1254,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["web",{"_index":780,"title":{},"body":{"modules/CoreModule.html":{},"components/HammerCardComponent.html":{},"injectables/InMemoryDataService.html":{},"components/LandingComponent.html":{},"dependencies.html":{}}}],["web360",{"_index":1298,"title":{},"body":{"components/HeaderComponent.html":{}}}],["wedg",{"_index":572,"title":{},"body":{"components/BlogComponent.html":{}}}],["week",{"_index":2276,"title":{},"body":{"components/TrafficSourcesComponent.html":{}}}],["welcom",{"_index":1457,"title":{},"body":{"components/LandingComponent.html":{}}}],["went",{"_index":1131,"title":{},"body":{"interfaces/Filter.html":{}}}],["wheelpropag",{"_index":2129,"title":{},"body":{"modules/SharedModule.html":{}}}],["wicket",{"_index":598,"title":{},"body":{"components/BlogComponent.html":{}}}],["widget",{"_index":119,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{},"modules/WidgetsModule.html":{}}}],["widget'},{'nam",{"_index":128,"title":{},"body":{"components/ActivityComponent.html":{},"components/AppComponent.html":{},"components/AppConfirmComponent.html":{},"components/BlogComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ContextMenuComponent.html":{},"components/ExperimentsComponent.html":{},"components/FeaturesComponent.html":{},"components/FooterComponent.html":{},"components/FullscreenComponent.html":{},"components/HammerCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeLayoutComponent.html":{},"components/LandingComponent.html":{},"components/LineChartWidgetComponent.html":{},"components/LoadingOverlayComponent.html":{},"components/MenuItemComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OverviewComponent.html":{},"components/QuickpanelComponent.html":{},"components/RainbowComponent.html":{},"components/RainbowComponent-1.html":{},"components/RecentSalesComponent.html":{},"components/ScrollbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/ToolbarComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/UserMenuComponent.html":{},"components/WidgetComponent.html":{}}}],["widget.component.html",{"_index":1468,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/SourceOverviewWidgetComponent.html":{}}}],["widget.component.scss",{"_index":1467,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/SourceOverviewWidgetComponent.html":{}}}],["widget.component.t",{"_index":1466,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/SourceOverviewWidgetComponent.html":{}}}],["widget.component.ts:10",{"_index":1476,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/SourceOverviewWidgetComponent.html":{}}}],["widget.component.ts:12",{"_index":1477,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/SourceOverviewWidgetComponent.html":{}}}],["widget.component.ts:14",{"_index":1479,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/SourceOverviewWidgetComponent.html":{}}}],["widget.component.ts:16",{"_index":1480,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/SourceOverviewWidgetComponent.html":{}}}],["widget.component.ts:18",{"_index":1481,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["widget.component.ts:19",{"_index":1482,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["widget.component.ts:20",{"_index":1474,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["widget.component.ts:22",{"_index":2150,"title":{},"body":{"components/SourceOverviewWidgetComponent.html":{}}}],["widget.component.ts:26",{"_index":1478,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["widget/lin",{"_index":1465,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["widget/sourc",{"_index":2147,"title":{},"body":{"components/SourceOverviewWidgetComponent.html":{}}}],["widgetcompon",{"_index":2397,"title":{"components/WidgetComponent.html":{}},"body":{"components/WidgetComponent.html":{},"modules/WidgetsModule.html":{}}}],["widgetsmodul",{"_index":2413,"title":{"modules/WidgetsModule.html":{}},"body":{"modules/WidgetsModule.html":{},"modules.html":{}}}],["width",{"_index":262,"title":{},"body":{"injectables/AppConfirmService.html":{}}}],["window).logintri",{"_index":363,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["window.confirm('a",{"_index":2104,"title":{},"body":{"injectables/ServiceWorkerService.html":{}}}],["window.localstorage.removeitem(themestorageservice.storagekey",{"_index":918,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"injectables/ThemeStorageService.html":{}}}],["window.localstorage[themestorageservice.storagekey",{"_index":911,"title":{},"body":{"interfaces/DocsSiteTheme.html":{},"injectables/ThemeStorageService.html":{}}}],["window.location.pathnam",{"_index":1215,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["window.location.reload(tru",{"_index":2106,"title":{},"body":{"injectables/ServiceWorkerService.html":{}}}],["window.location.search",{"_index":1216,"title":{},"body":{"classes/Go.html":{},"interfaces/RouterStateModel.html":{},"classes/UpdateRouterState.html":{}}}],["window.open(link",{"_index":1021,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["window.scrollto(0",{"_index":1319,"title":{},"body":{"components/HomeLayoutComponent.html":{}}}],["windu",{"_index":597,"title":{},"body":{"components/BlogComponent.html":{}}}],["withbadg",{"_index":1776,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["withoutbadg",{"_index":1777,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["wizard",{"_index":489,"title":{},"body":{"components/BlogComponent.html":{}}}],["wizdash",{"_index":2430,"title":{},"body":{"modules/WidgetsModule.html":{}}}],["wizdashcompon",{"_index":2418,"title":{},"body":{"modules/WidgetsModule.html":{}}}],["wobbl",{"_index":1264,"title":{},"body":{"components/HammerCardComponent.html":{}}}],["wookie",{"_index":610,"title":{},"body":{"components/BlogComponent.html":{}}}],["word",{"_index":2432,"title":{},"body":{"pipes/WordsPipe.html":{}}}],["words.length",{"_index":2435,"title":{},"body":{"pipes/WordsPipe.html":{}}}],["wordspip",{"_index":1792,"title":{"pipes/WordsPipe.html":{}},"body":{"modules/NxPipesModule.html":{},"pipes/WordsPipe.html":{}}}],["work",{"_index":1439,"title":{},"body":{"components/LandingComponent.html":{},"injectables/ROPCService.html":{}}}],["worker",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ServiceWorkerService.html":{},"dependencies.html":{}}}],["worker.j",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["worker.servic",{"_index":792,"title":{},"body":{"modules/CoreModule.html":{}}}],["worker.service.t",{"_index":2095,"title":{},"body":{"injectables/ServiceWorkerService.html":{}}}],["worker.service.ts:6",{"_index":2098,"title":{},"body":{"injectables/ServiceWorkerService.html":{}}}],["worker.service.ts:9",{"_index":2099,"title":{},"body":{"injectables/ServiceWorkerService.html":{}}}],["worker/servic",{"_index":791,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ServiceWorkerService.html":{}}}],["world",{"_index":1040,"title":{},"body":{"components/FeaturesComponent.html":{}}}],["wrong",{"_index":1132,"title":{},"body":{"interfaces/Filter.html":{}}}],["www",{"_index":1924,"title":{},"body":{"injectables/ROPCService.html":{}}}],["x",{"_index":1505,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/QuickpanelComponent.html":{},"injectables/ROPCService.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["xaxi",{"_index":1510,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["xs",{"_index":1631,"title":{},"body":{"injectables/MediaQueryService.html":{}}}],["y",{"_index":1508,"title":{},"body":{"components/LineChartWidgetComponent.html":{},"components/RecentSalesComponent.html":{},"components/SourceOverviewWidgetComponent.html":{},"components/TrafficSourcesComponent.html":{},"components/WidgetComponent.html":{}}}],["ya",{"_index":1857,"title":{},"body":{"components/QuickpanelComponent.html":{}}}],["yavin",{"_index":575,"title":{},"body":{"components/BlogComponent.html":{}}}],["yaxi",{"_index":1515,"title":{},"body":{"components/LineChartWidgetComponent.html":{}}}],["ydomain",{"_index":1992,"title":{},"body":{"components/RecentSalesComponent.html":{}}}],["ye",{"_index":159,"title":{},"body":{"classes/Address.html":{},"classes/EntityColumnDef.html":{},"classes/Login.html":{},"components/QuickpanelComponent.html":{}}}],["yield",{"_index":2370,"title":{},"body":{"interfaces/TreeConfig.html":{},"interfaces/TreeNode.html":{}}}],["yoda",{"_index":568,"title":{},"body":{"components/BlogComponent.html":{}}}],["youtube_searched_for",{"_index":2079,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["yyyi",{"_index":1564,"title":{},"body":{"modules/MaterialDateModule.html":{}}}],["z2",{"_index":709,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["zabrak",{"_index":603,"title":{},"body":{"components/BlogComponent.html":{}}}],["zebra",{"_index":487,"title":{},"body":{"components/BlogComponent.html":{}}}],["zero",{"_index":1434,"title":{},"body":{"components/LandingComponent.html":{}}}],["zip",{"_index":156,"title":{},"body":{"classes/Address.html":{}}}],["zone",{"_index":2018,"title":{},"body":{"components/ScrollbarComponent.html":{},"directives/ScrollbarDirective.html":{}}}],["zone.j",{"_index":2482,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":235,"title":{},"body":{"modules/AppConfirmModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BreadcrumbsModule.html":{},"modules/ContextMenuModule.html":{},"modules/CoreModule.html":{},"modules/CrudModule.html":{},"modules/DashboardModule.html":{},"modules/ExperimentsModule.html":{},"modules/FullscreenModule.html":{},"modules/HomeModule.html":{},"modules/LoadingOverlayModule.html":{},"modules/NotFoundModule.html":{},"modules/NxPipesModule.html":{},"modules/QuickpanelModule.html":{},"modules/ScrollToTopModule.html":{},"modules/ScrollbarModule.html":{},"modules/SharedModule.html":{},"modules/SidenavModule.html":{},"modules/SvgViewerModule.html":{},"modules/ThemePickerModule.html":{},"modules/ToolbarModule.html":{},"modules/WidgetsModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AccessTokenErrorResponse.html":{"url":"interfaces/AccessTokenErrorResponse.html","title":"interface - AccessTokenErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AccessTokenErrorResponse\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/oauth.errors.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                            Optional\n                                        error_description\n                                \n                                \n                                            Optional\n                                        error_uri\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     AccessTokenError\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AccessTokenError\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in libs/auth/src/oauth.errors.ts:22\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error_description\n                                    \n                                \n                                \n                                    \n                                        error_description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in libs/auth/src/oauth.errors.ts:23\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error_uri\n                                    \n                                \n                                \n                                    \n                                        error_uri:     URL\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     URL\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in libs/auth/src/oauth.errors.ts:24\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        type InvalidRequest = 'invalid_request';\ntype UnauthorizedClient = 'unauthorized_client';\n\ntype AuthorizationError =\n  | 'invalid_request'\n  | 'unauthorized_client'\n  | 'access_denied'\n  | 'unsupported_response_type'\n  | 'invalid_scope'\n  | 'server_error'\n  | 'temporarily_unavailable';\n\ntype AccessTokenError =\n  | 'invalid_request'\n  | 'invalid_client'\n  | 'invalid_grant'\n  | 'unauthorized_client'\n  | 'unsupported_grant_type'\n  | 'invalid_scope';\n\nexport interface AccessTokenErrorResponse {\n  error: AccessTokenError;\n  error_description?: string;\n  error_uri?: URL;\n}\n\nexport interface AuthorizationErrorResponse {\n  error: AuthorizationError;\n  error_description?: string;\n  error_uri?: URL;\n  state?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/crud/src/containers/accounts/account.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                        entityPath\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(httpClient: HttpClient)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/crud/src/containers/accounts/account.service.ts:9\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                httpClient\n                                                              \n                                                                    \n                                                                                HttpClient\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        entityPath\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    entityPath:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : 'accounts'\n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/crud/src/containers/accounts/account.service.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, retry, catchError, finalize } from 'rxjs/operators';\nimport { EntityService } from '@nx-starter-kit/shared';\nimport { Account } from './account.model';\n\n@Injectable()\nexport class AccountService extends EntityService {\n  readonly entityPath = 'accounts';\n\n  constructor(httpClient: HttpClient) {\n    super(httpClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActivityComponent.html":{"url":"components/ActivityComponent.html","title":"component - ActivityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ActivityComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/widgets/src/components/activity/activity.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nxtk-activity\n            \n\n\n\n\n            \n                templateUrl\n                ./activity.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                reload\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                feeds\n                            \n                            \n                                subTitle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor()\n                        \n                    \n                            \n                                \n                                    Defined in libs/widgets/src/components/activity/activity.component.ts:12\n                                \n                            \n    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            feeds\n                        \n                        \n                                \n                                Type:    any[]\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/activity/activity.component.ts:8\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            subTitle\n                        \n                        \n                            \n                                Default value: 'Your daily news feed'\n                            \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/activity/activity.component.ts:10\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            title\n                        \n                        \n                            \n                                Default value: 'Recent Activities'\n                            \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/activity/activity.component.ts:9\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/widgets/src/components/activity/activity.component.ts:16\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                reload\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    reload()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/widgets/src/components/activity/activity.component.ts:18\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                isLoading\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            isLoading:     \n    \n                        \n                    \n                        \n                            \n                                Default value : false\n                            \n                        \n                            \n                                \n                                        Defined in libs/widgets/src/components/activity/activity.component.ts:12\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'nxtk-activity',\n  templateUrl: './activity.component.html'\n})\nexport class ActivityComponent implements OnInit {\n  @Input('feeds') feeds: any[];\n  @Input('title') title = 'Recent Activities';\n  @Input('subTitle') subTitle = 'Your daily news feed';\n\n  isLoading = false;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  reload() {\n    this.isLoading = true;\n\n    setTimeout(() => {\n      this.isLoading = false;\n    }, 3000);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ title }}\n      {{ subTitle }}\n    \n    \n    \n      refresh\n    \n    \n      more_vert\n    \n  \n  \n    \n      \n        \n         {{ feed.name }} \n        \n           {{ feed.subject }} \n           -- {{ feed.content }} \n        \n      \n    \n  \n  \n\n\n\n  \n     settings \n     Settings \n  \n  \n     more \n     More Info \n  \n  \n     remove_circle \n     Remove Widget \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ title }}      {{ subTitle }}                  refresh              more_vert                                   {{ feed.name }}                    {{ feed.subject }}            -- {{ feed.content }}                              settings      Settings          more      More Info          remove_circle      Remove Widget   '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'ActivityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Address.html":{"url":"classes/Address.html","title":"class - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Address\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/crud/src/containers/accounts/account.model.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                            Optional\n                                        city\n                                    \n                                    \n                                            Public\n                                            Optional\n                                        state\n                                    \n                                    \n                                            Public\n                                            Optional\n                                        street\n                                    \n                                    \n                                            Public\n                                            Optional\n                                        zip\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(street?: string, city?: string, state?: string, zip?: string)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/crud/src/containers/accounts/account.model.ts:18\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                street\n                                                              \n                                                                    \n                                                                                string\n                                                                    \n                                                              \n                                                                \n                                                                        yes\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                city\n                                                              \n                                                                    \n                                                                                string\n                                                                    \n                                                              \n                                                                \n                                                                        yes\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                state\n                                                              \n                                                                    \n                                                                                string\n                                                                    \n                                                              \n                                                                \n                                                                        yes\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                zip\n                                                              \n                                                                    \n                                                                                string\n                                                                    \n                                                              \n                                                                \n                                                                        yes\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                            Optional\n                                        city\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    city:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/crud/src/containers/accounts/account.model.ts:19\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                            Optional\n                                        state\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    state:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/crud/src/containers/accounts/account.model.ts:19\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                            Optional\n                                        street\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    street:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/crud/src/containers/accounts/account.model.ts:19\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                            Optional\n                                        zip\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    zip:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/crud/src/containers/accounts/account.model.ts:19\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity } from '@nx-starter-kit/shared';\nimport * as moment from 'moment';\n\nexport class Account implements Entity {\n  constructor(\n    public id: number = 0,\n    public first_name?: string,\n    public last_name?: string,\n    public gender?: Gender,\n    public dob?: moment.Moment,\n    public email?: string,\n    public phone?: string,\n    public company?: string,\n    public address?: Address\n  ) {}\n}\n\nexport class Address {\n  constructor(public street?: string, public city?: string, public state?: string, public zip?: string) {}\n}\n\nexport enum Gender {\n  male = 'make',\n  female = 'female'\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Animations.html":{"url":"classes/Animations.html","title":"class - Animations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Animations\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/animations/src/animations.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Animations {}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    apps/default/src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(sw: ServiceWorkerService)\n                        \n                    \n                            \n                                \n                                    Defined in apps/default/src/app/app.component.ts:10\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        sw\n                                                      \n                                                            \n                                                                        ServiceWorkerService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in apps/default/src/app/app.component.ts:13\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ServiceWorkerService } from '@default/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent implements OnInit {\n  constructor(private sw: ServiceWorkerService) {}\n\n  ngOnInit() {\n    // Check service worker update\n    this.sw.checkSWUpdate();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppConfirmComponent.html":{"url":"components/AppConfirmComponent.html","title":"component - AppConfirmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppConfirmComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/app-confirm/src/app-confirm.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm\n            \n\n            \n                styleUrls\n                app-confirm.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app-confirm.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(dialogRef: MatDialogRef, data: any)\n                        \n                    \n                            \n                                \n                                    Defined in libs/app-confirm/src/app-confirm.component.ts:9\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        dialogRef\n                                                      \n                                                            \n                                                                        MatDialogRef\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                                    \n                                                        data\n                                                      \n                                                            \n                                                                        any\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Public\n                                data\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            data:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n                        \n                            \n                                Decorators : Inject\n                            \n                        \n                            \n                                \n                                        Defined in libs/app-confirm/src/app-confirm.component.ts:10\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Public\n                                dialogRef\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            dialogRef:     MatDialogRef\n    \n                        \n                    \n                        \n                            \n                                Type :     MatDialogRef\n    \n                            \n                        \n                            \n                                \n                                        Defined in libs/app-confirm/src/app-confirm.component.ts:10\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './app-confirm.component.html',\n  styleUrls: ['./app-confirm.component.scss']\n})\nexport class AppConfirmComponent {\n  constructor(public dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data: any) {}\n}\n\n    \n\n    \n        {{ data.title }}\n{{ data.message }}\n\n  OK\n  &nbsp;\n  \n  Cancel\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}{{ data.message }}  OK       Cancel'\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppConfirmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppConfirmModule.html":{"url":"modules/AppConfirmModule.html","title":"module - AppConfirmModule","body":"\n                   \n\n\n\n\n  Modules\n  AppConfirmModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppConfirmModule\n\n\n\ncluster_AppConfirmModule_declarations\n\n\n\ncluster_AppConfirmModule_providers\n\n\n\n\nAppConfirmComponent\n\nAppConfirmComponent\n\n\n\nAppConfirmModule\n\nAppConfirmModule\n\nAppConfirmModule -->\n\nAppConfirmComponent->AppConfirmModule\n\n\n\n\n\nAppConfirmService\n\nAppConfirmService\n\nAppConfirmModule -->\n\nAppConfirmService->AppConfirmModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/app-confirm/src/app-confirm.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppConfirmComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AppConfirmComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AppConfirmService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AppConfirmComponent } from './app-confirm.component';\nimport { AppConfirmService } from './app-confirm.service';\nimport { MatDialogModule, MatButtonModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  imports: [CommonModule, MatDialogModule, MatButtonModule, FlexLayoutModule],\n  declarations: [AppConfirmComponent],\n  providers: [AppConfirmService],\n  entryComponents: [AppConfirmComponent]\n})\nexport class AppConfirmModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfirmService.html":{"url":"injectables/AppConfirmService.html","title":"injectable - AppConfirmService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AppConfirmService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/app-confirm/src/app-confirm.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        confirm\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(dialog: MatDialog)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/app-confirm/src/app-confirm.service.ts:8\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                dialog\n                                                              \n                                                                    \n                                                                                MatDialog\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        confirm\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    confirm(title: string, message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in libs/app-confirm/src/app-confirm.service.ts:11\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                title\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MatDialogRef, MatDialog, MatDialogConfig } from '@angular/material';\n\nimport { AppConfirmComponent } from './app-confirm.component';\n\n@Injectable()\nexport class AppConfirmService {\n  constructor(private dialog: MatDialog) {}\n\n  public confirm(title: string, message: string): Observable {\n    let dialogRef: MatDialogRef;\n    dialogRef = this.dialog.open(AppConfirmComponent, {\n      width: '380px',\n      disableClose: true,\n      data: { title, message }\n    });\n    return >dialogRef.afterClosed();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/default/src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n//TODO https://github.com/AngularFirebase/78-hammerjs-angular-animations/blob/master/src/app/app.module.ts\nimport { BrowserModule, HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { environment } from '@env/environment';\n\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(\n      [\n        { path: '', redirectTo: 'home', pathMatch: 'full' },\n        { path: 'home', loadChildren: '@nx-starter-kit/home#HomeModule' },\n        { path: 'dashboard', loadChildren: '@nx-starter-kit/dashboard#DashboardModule' },\n        { path: '404', loadChildren: '@nx-starter-kit/not-found#NotFoundModule' },\n        // 404 should be last\n        { path: '**', redirectTo: '404', pathMatch: 'full' }\n      ],\n      {\n        initialNavigation: 'enabled',\n        paramsInheritanceStrategy: 'always'\n        // onSameUrlNavigation: 'reload'\n      }\n    ),\n    CoreModule, // IMP: Please keep CoreModule after RouterModule\n    ServiceWorkerModule.register('./ngsw-worker.js', { enabled: environment.production })\n  ],\n  declarations: [AppComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/default/e2e/app.po.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        navigateTo\n                                    \n                                    \n                                        text\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        navigateTo\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            navigateTo()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in apps/default/e2e/app.po.ts:4\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        text\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            text()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in apps/default/e2e/app.po.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  text() {\n    return browser.findElement(by.css('body')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/auth.guard.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            \n                                        canActivate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(oauthService: OAuthService, store: Store)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/auth/src/auth.guard.ts:23\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                oauthService\n                                                              \n                                                                    \n                                                                                OAuthService\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                store\n                                                              \n                                                                    \n                                                                                Store\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        canActivate\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in libs/auth/src/auth.guard.ts:26\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                route\n                                                                \n                                                                    \n                                                                                ActivatedRouteSnapshot\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                state\n                                                                \n                                                                    \n                                                                                RouterStateSnapshot\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { Store } from '@ngxs/store';\nimport { Login } from './auth.actions';\n\nfunction waitUntil(condition, timeout = 2000) {\n  return new Promise(function(resolve, reject) {\n    setTimeout(_ => reject(), timeout);\n\n    function loop() {\n      if (condition()) {\n        resolve();\n      }\n      setTimeout(loop, 0);\n    }\n\n    setTimeout(loop, 0);\n  });\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private oauthService: OAuthService, private store: Store) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise {\n    if (this.oauthService.hasValidIdToken() || this.oauthService.hasValidAccessToken()) {\n      return true;\n    } else {\n      await waitUntil(_ => (window).loginTryed === true);\n\n      if (this.oauthService.hasValidIdToken() || this.oauthService.hasValidAccessToken()) {\n        return true;\n      } else {\n        this.store.dispatch(new Login({ infoMsg: 'Please login to Enter' }));\n        return false;\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthModeChanged.html":{"url":"classes/AuthModeChanged.html","title":"class - AuthModeChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthModeChanged\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/auth.actions.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        payload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: AuthMode)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/auth/src/auth.actions.ts:26\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                AuthMode\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     AuthMode\n            \n                                \n                            \n                                \n                                    \n                                        Type :     AuthMode\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/auth/src/auth.actions.ts:27\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n\n\n\n\n\n    \n\n\n    \n        export enum AuthMode {\n  ImplicitFLow = 'ImplicitFLow',\n  PasswordFlow = 'ROPCFlow',\n  AuthorizationCodeFLow = 'AuthorizationCodeFLow'\n}\n\n//  Actions\nexport class Login {\n  constructor(public readonly payload?: { infoMsg?: string }) {}\n}\nexport class Logout {}\nexport class LoadProfile {\n  constructor(public payload: any) {}\n}\nexport class ChangeAuthMode {\n  constructor(public readonly payload: AuthMode) {}\n}\n\n// Mutation Actions\nexport class LoginSuccess {\n  constructor(public readonly payload: any) {}\n}\nexport class LoginCanceled {}\nexport class LogoutSuccess {}\nexport class ProfileLoaded {}\nexport class AuthModeChanged {\n  constructor(public readonly payload: AuthMode) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nROPCService\n\nROPCService\n\nAuthModule -->\n\nROPCService->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAuthModule -->\n\nAuthGuard->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/auth/src/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                LoginComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ROPCService\n                            \n                            \n                                     AuthService\n                            \n                            \n                                     AuthGuard\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OAuthModule, OAuthService } from 'angular-oauth2-oidc';\nimport { Store } from '@ngxs/store';\n\nimport { initializeAuth } from './oauth.init';\nimport { AuthState } from './auth.state';\nimport { LoginComponent } from './components/login/login.component';\nimport { ROPCService } from './ropc.service';\nimport { AuthService } from './auth.service';\n\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatDialogModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatToolbarModule\n} from '@angular/material';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AuthGuard } from './auth.guard';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    OAuthModule.forRoot({\n      resourceServer: {\n        allowedUrls: ['http://localhost:8080/auth'],\n        sendAccessToken: true\n      }\n    })\n  ],\n  declarations: [LoginComponent],\n  entryComponents: [LoginComponent],\n  providers: [AuthState, ROPCService, AuthService, AuthGuard]\n})\nexport class AuthModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AuthModule,\n      providers: [{ provide: APP_INITIALIZER, useFactory: initializeAuth, deps: [OAuthService, Store], multi: true }]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthStateModel.html":{"url":"interfaces/AuthStateModel.html","title":"interface - AuthStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthStateModel\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/auth.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authMode\n                                \n                                \n                                        isLoggedIn\n                                \n                                \n                                        profile\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authMode\n                                    \n                                \n                                \n                                    \n                                        authMode:     AuthMode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AuthMode\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in libs/auth/src/auth.state.ts:21\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLoggedIn\n                                    \n                                \n                                \n                                    \n                                        isLoggedIn:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in libs/auth/src/auth.state.ts:19\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                    \n                                \n                                \n                                    \n                                        profile:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in libs/auth/src/auth.state.ts:20\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Action, Select, Selector, State, StateContext } from '@ngxs/store';\nimport {\n  Login,\n  LoginCanceled,\n  AuthMode,\n  ChangeAuthMode,\n  LogoutSuccess,\n  LoginSuccess,\n  Logout,\n  AuthModeChanged\n} from './auth.actions';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\nimport { authConfigImplicit, authConfigPassword } from './oauth.config';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { map } from 'rxjs/operators';\n\nexport interface AuthStateModel {\n  isLoggedIn: boolean;\n  profile: any;\n  authMode: AuthMode;\n}\n\n@State({\n  name: 'auth',\n  defaults: {\n    isLoggedIn: false,\n    profile: {},\n    authMode: AuthMode.ImplicitFLow\n  }\n})\nexport class AuthState {\n  constructor(private authService: AuthService, private oauthService: OAuthService, private router: Router) {}\n\n  @Selector()\n  static isLoggedIn(state: AuthStateModel) {\n    return state.isLoggedIn;\n  }\n\n  @Selector()\n  static profile(state: AuthStateModel) {\n    return state.profile;\n  }\n\n  @Selector()\n  static authMode(state: AuthStateModel) {\n    return state ? state.authMode : AuthMode.ImplicitFLow;\n  }\n\n  @Action(LoginSuccess)\n  loginSuccess({ getState, patchState }: StateContext, { payload }: LoginSuccess) {\n    patchState({\n      isLoggedIn: true,\n      profile: payload\n    });\n    this.authService.startAutoRefreshToken();\n    this.router.navigate(['/dashboard']);\n  }\n\n  @Action([LogoutSuccess, LoginCanceled])\n  logoutSuccess({ getState, setState }: StateContext) {\n    setState({\n      isLoggedIn: false,\n      profile: {},\n      authMode: getState().authMode\n    });\n    this.authService.stopAutoRefreshToken();\n    this.router.navigate(['/home']);\n  }\n\n  @Action(AuthModeChanged)\n  authModeChanged({ getState, patchState }: StateContext, { payload }: AuthModeChanged) {\n    patchState({\n      authMode: payload\n    });\n  }\n\n  @Action(ChangeAuthMode)\n  async changeAuthMode({ getState, dispatch }: StateContext, { payload }: ChangeAuthMode) {\n    if (getState().authMode !== payload) {\n      switch (payload) {\n        case AuthMode.PasswordFlow:\n          this.oauthService.configure(authConfigPassword);\n          break;\n        default:\n          this.oauthService.configure(authConfigImplicit);\n          break;\n      }\n      await this.oauthService.loadDiscoveryDocument();\n      dispatch(new AuthModeChanged(payload));\n    }\n  }\n\n  @Action(Logout)\n  logout({ getState }: StateContext) {\n    return this.authService.logout();\n  }\n\n  @Action(Login)\n  login({ getState, dispatch }: StateContext, { payload }: Login) {\n    return this.authService.login(payload).pipe(\n      map(profile => {\n        if (profile === false) {\n          dispatch(new LoginCanceled());\n        } else {\n          dispatch(new LoginSuccess(profile));\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthorizationErrorResponse.html":{"url":"interfaces/AuthorizationErrorResponse.html","title":"interface - AuthorizationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthorizationErrorResponse\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/oauth.errors.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                            Optional\n                                        error_description\n                                \n                                \n                                            Optional\n                                        error_uri\n                                \n                                \n                                            Optional\n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     AuthorizationError\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AuthorizationError\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in libs/auth/src/oauth.errors.ts:28\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error_description\n                                    \n                                \n                                \n                                    \n                                        error_description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in libs/auth/src/oauth.errors.ts:29\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error_uri\n                                    \n                                \n                                \n                                    \n                                        error_uri:     URL\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     URL\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in libs/auth/src/oauth.errors.ts:30\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in libs/auth/src/oauth.errors.ts:31\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        type InvalidRequest = 'invalid_request';\ntype UnauthorizedClient = 'unauthorized_client';\n\ntype AuthorizationError =\n  | 'invalid_request'\n  | 'unauthorized_client'\n  | 'access_denied'\n  | 'unsupported_response_type'\n  | 'invalid_scope'\n  | 'server_error'\n  | 'temporarily_unavailable';\n\ntype AccessTokenError =\n  | 'invalid_request'\n  | 'invalid_client'\n  | 'invalid_grant'\n  | 'unauthorized_client'\n  | 'unsupported_grant_type'\n  | 'invalid_scope';\n\nexport interface AccessTokenErrorResponse {\n  error: AccessTokenError;\n  error_description?: string;\n  error_uri?: URL;\n}\n\nexport interface AuthorizationErrorResponse {\n  error: AuthorizationError;\n  error_description?: string;\n  error_uri?: URL;\n  state?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlogComponent.html":{"url":"components/BlogComponent.html","title":"component - BlogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BlogComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/home/src/containers/blog/blog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                blog\n            \n\n            \n                styleUrls\n                blog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./blog.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor()\n                        \n                    \n                            \n                                \n                                    Defined in libs/home/src/containers/blog/blog.component.ts:8\n                                \n                            \n    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/home/src/containers/blog/blog.component.ts:11\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.scss']\n})\nexport class BlogComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  Blog\n\n\n\n\n  How vexingly quick daft zebras jump!\n  The wizard quickly jinxed the gnomes before they vaporized.\n  The quick brown fox jumps over the lazy dog.\n  Grumpy wizards make toxic brew for the evil queen and jack.\n  Jackdaws love my big sphinx of quartz.\n  The five boxing wizards jump quickly.\n  Pack my box with five dozen liquor jugs.\n  Bright vixens jump; dozy fowl quack.\n\n  \n    \n      Lucas ipsum dolor sit amet coruscant fisto hutt dantooine darth binks amidala kessel grievous\n      mara. Ackbar mandalore skywalker calamari. Calrissian binks tusken raider kit. Darth binks\n      chewbacca skywalker. Moff baba padmé antilles darth ponda twi'lek darth. Dagobah naboo mara\n      jawa dagobah ackbar ackbar darth. Mara mace r2-d2 mon naboo darth dantooine leia. Droid\n      chewbacca mace han. Wampa hutt qui-gon solo jango secura tusken raider yoda. Droid boba mon\n      mandalore jinn han binks. Maul darth kit wedge mace utapau darth darth fett.\n    \n\n    \n      Antilles antilles secura yavin. Leia luke owen hutt baba yoda hoth obi-wan. Moff thrawn solo\n      jango mon. Antilles lobot hutt tusken raider moff jade kessel binks. Moff ewok sidious naboo\n      darth ventress tusken raider. Bothan yavin moff fett organa binks jade binks. Mara moff darth\n      jade sidious. Darth binks obi-wan padmé dagobah hutt ponda antilles ackbar. Fett gamorrean\n      obi-wan sidious hutt maul. Organa darth k-3po kessel aayla. Hoth c-3po amidala biggs kenobi\n      twi'lek twi'lek ahsoka. Obi-wan ackbar windu wicket kit c-3po.\n    \n\n    \n      Hutt naboo greedo skywalker hutt luuke ben. Hutt chewbacca jabba solo calrissian jade yoda\n      amidala zabrak. Solo luke antilles c-3p0. Sith darth skywalker fett solo hutt skywalker c-3p0\n      skywalker. Skywalker skywalker solo kessel darth fett. Skywalker skywalker c-3po jango.\n      Alderaan darth boba calamari. Wicket alderaan darth darth chewbacca jango. Darth darth\n      chewbacca ponda solo grievous hutt calrissian lando. Darth mon watto vader chewbacca.\n      Lando mace luke yavin darth wookiee c-3po. Moff kessel skywalker yoda c-3po yavin.\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Blog  How vexingly quick daft zebras jump!  The wizard quickly jinxed the gnomes before they vaporized.  The quick brown fox jumps over the lazy dog.  Grumpy wizards make toxic brew for the evil queen and jack.  Jackdaws love my big sphinx of quartz.  The five boxing wizards jump quickly.  Pack my box with five dozen liquor jugs.  Bright vixens jump; dozy fowl quack.            Lucas ipsum dolor sit amet coruscant fisto hutt dantooine darth binks amidala kessel grievous      mara. Ackbar mandalore skywalker calamari. Calrissian binks tusken raider kit. Darth binks      chewbacca skywalker. Moff baba padmé antilles darth ponda twi\\'lek darth. Dagobah naboo mara      jawa dagobah ackbar ackbar darth. Mara mace r2-d2 mon naboo darth dantooine leia. Droid      chewbacca mace han. Wampa hutt qui-gon solo jango secura tusken raider yoda. Droid boba mon      mandalore jinn han binks. Maul darth kit wedge mace utapau darth darth fett.              Antilles antilles secura yavin. Leia luke owen hutt baba yoda hoth obi-wan. Moff thrawn solo      jango mon. Antilles lobot hutt tusken raider moff jade kessel binks. Moff ewok sidious naboo      darth ventress tusken raider. Bothan yavin moff fett organa binks jade binks. Mara moff darth      jade sidious. Darth binks obi-wan padmé dagobah hutt ponda antilles ackbar. Fett gamorrean      obi-wan sidious hutt maul. Organa darth k-3po kessel aayla. Hoth c-3po amidala biggs kenobi      twi\\'lek twi\\'lek ahsoka. Obi-wan ackbar windu wicket kit c-3po.              Hutt naboo greedo skywalker hutt luuke ben. Hutt chewbacca jabba solo calrissian jade yoda      amidala zabrak. Solo luke antilles c-3p0. Sith darth skywalker fett solo hutt skywalker c-3p0      skywalker. Skywalker skywalker solo kessel darth fett. Skywalker skywalker c-3po jango.      Alderaan darth boba calamari. Wicket alderaan darth darth chewbacca jango. Darth darth      chewbacca ponda solo grievous hutt calrissian lando. Darth mon watto vader chewbacca.      Lando mace luke yavin darth wookiee c-3po. Moff kessel skywalker yoda c-3po yavin.      '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbsComponent.html":{"url":"components/BreadcrumbsComponent.html","title":"component - BreadcrumbsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbsComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/breadcrumbs/src/breadcrumbs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nxtk-breadcrumbs\n            \n\n            \n                styleUrls\n                breadcrumbs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumbs.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                crumbs\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor()\n                        \n                    \n                            \n                                \n                                    Defined in libs/breadcrumbs/src/breadcrumbs.component.ts:15\n                                \n                            \n    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            crumbs\n                        \n                        \n                                \n                                Type:    Crumb[]\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/breadcrumbs/src/breadcrumbs.component.ts:15\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            title\n                        \n                        \n                                \n                                Type:    string\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/breadcrumbs/src/breadcrumbs.component.ts:14\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/breadcrumbs/src/breadcrumbs.component.ts:19\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nexport interface Crumb {\n  name: string;\n  link?: string;\n}\n@Component({\n  selector: 'nxtk-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styleUrls: ['./breadcrumbs.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BreadcrumbsComponent implements OnInit {\n  @Input() title: string;\n  @Input() crumbs: Crumb[];\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        {{ title }}\n\n  \n    {{ crumb.name }}\n    {{ crumb.name }}\n    chevron_right\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ title }}      {{ crumb.name }}    {{ crumb.name }}    chevron_right  '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BreadcrumbsModule.html":{"url":"modules/BreadcrumbsModule.html","title":"module - BreadcrumbsModule","body":"\n                   \n\n\n\n\n  Modules\n  BreadcrumbsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BreadcrumbsModule\n\n\n\ncluster_BreadcrumbsModule_declarations\n\n\n\ncluster_BreadcrumbsModule_exports\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\n\n\nBreadcrumbsModule\n\nBreadcrumbsModule\n\nBreadcrumbsModule -->\n\nBreadcrumbsComponent->BreadcrumbsModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nBreadcrumbsModule->BreadcrumbsComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/breadcrumbs/src/breadcrumbs.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BreadcrumbsComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BreadcrumbsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreadcrumbsComponent } from './breadcrumbs.component';\nimport { MatIconModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  imports: [MatIconModule, FlexLayoutModule, RouterModule, CommonModule],\n  exports: [BreadcrumbsComponent],\n  declarations: [BreadcrumbsComponent]\n})\nexport class BreadcrumbsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CdkModule.html":{"url":"modules/CdkModule.html","title":"module - CdkModule","body":"\n                   \n\n\n\n\n  Modules\n  CdkModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/material/src/cdk.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkAccordionModule } from '@angular/cdk/accordion';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\n\nconst CDK_MODULES = [CdkTableModule, PortalModule, ScrollDispatchModule];\n\n@NgModule({\n  exports: CDK_MODULES\n})\nexport class CdkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeAuthMode.html":{"url":"classes/ChangeAuthMode.html","title":"class - ChangeAuthMode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeAuthMode\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/auth.actions.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        payload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: AuthMode)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/auth/src/auth.actions.ts:15\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                AuthMode\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     AuthMode\n            \n                                \n                            \n                                \n                                    \n                                        Type :     AuthMode\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/auth/src/auth.actions.ts:16\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n\n\n\n\n\n    \n\n\n    \n        export enum AuthMode {\n  ImplicitFLow = 'ImplicitFLow',\n  PasswordFlow = 'ROPCFlow',\n  AuthorizationCodeFLow = 'AuthorizationCodeFLow'\n}\n\n//  Actions\nexport class Login {\n  constructor(public readonly payload?: { infoMsg?: string }) {}\n}\nexport class Logout {}\nexport class LoadProfile {\n  constructor(public payload: any) {}\n}\nexport class ChangeAuthMode {\n  constructor(public readonly payload: AuthMode) {}\n}\n\n// Mutation Actions\nexport class LoginSuccess {\n  constructor(public readonly payload: any) {}\n}\nexport class LoginCanceled {}\nexport class LogoutSuccess {}\nexport class ProfileLoaded {}\nexport class AuthModeChanged {\n  constructor(public readonly payload: AuthMode) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CharactersPipe.html":{"url":"pipes/CharactersPipe.html","title":"pipe - CharactersPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  CharactersPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            libs/nx-pipes/src/truncate/characters.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        characters\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(value: string, limit: number, trail: String)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in libs/nx-pipes/src/truncate/characters.pipe.ts:7\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                                Default value\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                                    \n                                                                    \n            \n                                                            \n                                                            \n                                                                limit\n                                                                \n                                                                    \n                                                                                number\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                                    \n                                                                            40\n                                                                    \n            \n                                                            \n                                                            \n                                                                trail\n                                                                \n                                                                    \n                                                                                String\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                                    \n                                                                            '…'\n                                                                    \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'characters'\n})\nexport class CharactersPipe implements PipeTransform {\n  transform(value: string, limit: number = 40, trail: String = '…'): string {\n    if (!value) {\n      value = '';\n    }\n\n    if (limit  limit ? trail + value.substring(value.length - limit, value.length) : value;\n    } else {\n      return value.length > limit ? value.substring(0, limit) + trail : value;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ClickOutsideDirective.html":{"url":"directives/ClickOutsideDirective.html","title":"directive - ClickOutsideDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ClickOutsideDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            libs/toolbar/src/components/click-outside/click-outside.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [nxtkClickOutside]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Outputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        nxtkClickOutside\n                                    \n                                \n                            \n                        \n                        \n                            \n                                HostListeners\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        document:click\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(_elementRef: ElementRef)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/toolbar/src/components/click-outside/click-outside.directive.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                _elementRef\n                                                              \n                                                                    \n                                                                                ElementRef\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Outputs\n                    \n                        \n                            \n                                \n                                    \n                                    nxtkClickOutside\n                                \n                                \n                                    $event type:    EventEmitter\n            \n                                \n                            \n                                    \n                                        \n                                                Defined in libs/toolbar/src/components/click-outside/click-outside.directive.ts:7\n                                        \n                                    \n                        \n                    \n            \n\n            \n                HostListeners        \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        document:click\n                                        \n                                        \n                                    \n                                \n                            \n                                \n                                    \n                                        Arguments : '$event' '$event.target' \n                                    \n                                \n                            \n                                \n            document:click(event: MouseEvent, targetElement: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in libs/toolbar/src/components/click-outside/click-outside.directive.ts:12\n                                        \n                                    \n            \n                        \n                    \n            \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n  selector: '[nxtkClickOutside]'\n})\nexport class ClickOutsideDirective {\n  @Output() public nxtkClickOutside = new EventEmitter();\n\n  constructor(private _elementRef: ElementRef) {}\n\n  @HostListener('document:click', ['$event', '$event.target'])\n  public onClick(event: MouseEvent, targetElement: HTMLElement): void {\n    if (!targetElement) {\n      return;\n    }\n\n    const clickedInside = this._elementRef.nativeElement.contains(targetElement);\n    if (!clickedInside) {\n      this.nxtkClickOutside.emit(event);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContextMenuComponent.html":{"url":"components/ContextMenuComponent.html","title":"component - ContextMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContextMenuComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/context-menu/src/context-menu.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                df-context-menu\n            \n\n            \n                styleUrls\n                context-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./context-menu.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.mat-elevation-z2\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n    \n        HostBindings        \n                \n                    \n                        \n                            \n                            \n                                \n                                class.mat-elevation-z2\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            class.mat-elevation-z2:     \n    \n                        \n                    \n                        \n                            \n                                Default value : true\n                            \n                        \n                            \n                                \n                                        Defined in libs/context-menu/src/context-menu.component.ts:13\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n\n\n\n    \n        import { Component, ChangeDetectionStrategy, HostListener, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'df-context-menu',\n  templateUrl: './context-menu.component.html',\n  styleUrls: ['./context-menu.component.scss'],\n  // host: {\n  //   class: 'mat-elevation-z2'\n  // },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContextMenuComponent {\n  @HostBinding('class.mat-elevation-z2') public elevation = true;\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContextMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContextMenuModule.html":{"url":"modules/ContextMenuModule.html","title":"module - ContextMenuModule","body":"\n                   \n\n\n\n\n  Modules\n  ContextMenuModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContextMenuModule\n\n\n\ncluster_ContextMenuModule_declarations\n\n\n\ncluster_ContextMenuModule_exports\n\n\n\n\nContextMenuTriggerDirective\n\nContextMenuTriggerDirective\n\n\n\nContextMenuModule\n\nContextMenuModule\n\nContextMenuModule -->\n\nContextMenuTriggerDirective->ContextMenuModule\n\n\n\n\n\nContextMenuComponent\n\nContextMenuComponent\n\nContextMenuModule -->\n\nContextMenuComponent->ContextMenuModule\n\n\n\n\n\nContextMenuTriggerDirective \n\nContextMenuTriggerDirective \n\nContextMenuTriggerDirective  -->\n\nContextMenuModule->ContextMenuTriggerDirective \n\n\n\n\n\nContextMenuComponent \n\nContextMenuComponent \n\nContextMenuComponent  -->\n\nContextMenuModule->ContextMenuComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/context-menu/src/context-menu.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ContextMenuTriggerDirective\n                            \n                            \n                                ContextMenuComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ContextMenuTriggerDirective\n                            \n                            \n                                    ContextMenuComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatButtonModule } from '@angular/material';\n\nimport { ContextMenuTriggerDirective } from './context-menu-trigger.directive';\nimport { ContextMenuComponent } from './context-menu.component';\n\n@NgModule({\n  imports: [CommonModule, PortalModule, OverlayModule, MatButtonModule],\n  declarations: [ContextMenuTriggerDirective, ContextMenuComponent],\n  exports: [ContextMenuTriggerDirective, ContextMenuComponent]\n})\nexport class ContextMenuModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ContextMenuTriggerDirective.html":{"url":"directives/ContextMenuTriggerDirective.html","title":"directive - ContextMenuTriggerDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ContextMenuTriggerDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            libs/context-menu/src/context-menu-trigger.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [contextMenu]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Private\n                                        _destroy$\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        ngOnDestroy\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        contextMenu\n                                    \n                                \n                            \n                        \n                        \n                            \n                                HostListeners\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        contextmenu\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(_overlay: Overlay, _elementRef: ElementRef, _vcr: ViewContainerRef)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/context-menu/src/context-menu-trigger.directive.ts:13\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                _overlay\n                                                              \n                                                                    \n                                                                                Overlay\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                _elementRef\n                                                              \n                                                                    \n                                                                                ElementRef\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                _vcr\n                                                              \n                                                                    \n                                                                                ViewContainerRef\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    contextMenu\n                                \n                                \n                                        \n                                        Type:    TemplateRef\n            \n                                        \n                                \n                            \n                                    \n                                        \n                                                Defined in libs/context-menu/src/context-menu-trigger.directive.ts:11\n                                        \n                                    \n                        \n                    \n            \n\n\n            \n                HostListeners        \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        contextmenu\n                                        \n                                        \n                                    \n                                \n                            \n                                \n                                    \n                                        Arguments : '$event' \n                                    \n                                \n                            \n                                \n            contextmenu(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in libs/context-menu/src/context-menu-trigger.directive.ts:25\n                                        \n                                    \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        ngOnDestroy\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            ngOnDestroy()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in libs/context-menu/src/context-menu-trigger.directive.ts:17\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _destroy$\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _destroy$:     Subject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Subject\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/context-menu/src/context-menu-trigger.directive.ts:13\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Directive, HostListener, TemplateRef, Input, ViewContainerRef, ElementRef, OnDestroy } from '@angular/core';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive({\n  selector: '[contextMenu]'\n})\nexport class ContextMenuTriggerDirective implements OnDestroy {\n  @Input() contextMenu: TemplateRef;\n\n  private _destroy$: Subject;\n\n  constructor(private _overlay: Overlay, private _elementRef: ElementRef, private _vcr: ViewContainerRef) {}\n\n  ngOnDestroy() {\n    if (this._destroy$) {\n      this._destroy$.next();\n      this._destroy$.complete();\n    }\n  }\n\n  @HostListener('contextmenu', ['$event'])\n  onContextMenu(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const positionStrategy = this._overlay\n      .position()\n      .connectedTo(this._elementRef, { originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' });\n\n    const overlayRef = this._overlay.create({ positionStrategy });\n    const templatePortal = new TemplatePortal(this.contextMenu, this._vcr);\n    overlayRef.attach(templatePortal);\n\n    this._destroy$ = new Subject();\n\n    fromEvent(document, 'click')\n      .pipe(takeUntil(this._destroy$))\n      .subscribe(() => overlayRef.detach());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\n. ===  ? .(, {\n    : true\n}) : []\n\n. ===  ? .(, {\n    : true\n}) : []\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\n. ===  ? .(, {\n    : true\n}) : []->CoreModule\n\n\n\n\n\nPageTitleService\n\nPageTitleService\n\nCoreModule -->\n\nPageTitleService->CoreModule\n\n\n\n\n\nMediaQueryService\n\nMediaQueryService\n\nCoreModule -->\n\nMediaQueryService->CoreModule\n\n\n\n\n\nServiceWorkerService\n\nServiceWorkerService\n\nCoreModule -->\n\nServiceWorkerService->CoreModule\n\n\n\n\n\nEventBus\n\nEventBus\n\nCoreModule -->\n\nEventBus->CoreModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nCoreModule -->\n\nErrorInterceptor->CoreModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/default/src/app/core/core.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     PageTitleService\n                            \n                            \n                                     MediaQueryService\n                            \n                            \n                                     ServiceWorkerService\n                            \n                            \n                                     EventBus\n                            \n                            \n                                     ErrorInterceptor\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    . ===  ? .(, {\n    : true\n}) : []\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './services/in-memory-data.service';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport { PageTitleService } from './services/page-title/page-title.service';\nimport { ServiceWorkerService } from './services/service-worker/service-worker.service';\nimport { MediaQueryService } from './services/mediareplay/media-replay.service';\nimport { NgxsModule } from '@ngxs/store';\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\nimport { NgxPageScrollModule } from 'ngx-page-scroll';\nimport { AuthModule, AuthState } from '@nx-starter-kit/auth';\nimport { NavigatorModule, MenuState } from '@nx-starter-kit/navigator';\nimport { RouterState } from './state/router.state';\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\nimport { EventBus } from './state/eventbus';\nimport { defaultMenu, demoMenu, adminMenu } from './menu-data';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    NgxPageScrollModule,\n    NavigatorModule.forRoot(defaultMenu),\n    NgxsModule.forRoot([AuthState, RouterState, MenuState]),\n    NgxsReduxDevtoolsPluginModule.forRoot({\n      disabled: environment.production // Set to true for prod mode\n    }),\n    AuthModule.forRoot(),\n    environment.envName === 'mock'\n      ? HttpClientInMemoryWebApiModule.forRoot(InMemoryDataService, {\n          passThruUnknownUrl: true\n          // delay: 500,\n          // apiBase: 'api'\n        })\n      : []\n  ],\n  providers: [\n    PageTitleService,\n    MediaQueryService,\n    ServiceWorkerService,\n    EventBus,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    }\n  ]\n})\nexport class CoreModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: CoreModule\n  ) {\n    if (parentModule) {\n      throw new Error('CoreModule is already loaded. Import it in the AppModule only');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CrudModule.html":{"url":"modules/CrudModule.html","title":"module - CrudModule","body":"\n                   \n\n\n\n\n  Modules\n  CrudModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CrudModule\n\n\n\ncluster_CrudModule_declarations\n\n\n\ncluster_CrudModule_imports\n\n\n\ncluster_CrudModule_providers\n\n\n\n\nAccountsComponent\n\nAccountsComponent\n\n\n\nCrudModule\n\nCrudModule\n\nCrudModule -->\n\nAccountsComponent->CrudModule\n\n\n\n\n\nAccountFormComponent\n\nAccountFormComponent\n\nCrudModule -->\n\nAccountFormComponent->CrudModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCrudModule -->\n\nSharedModule->CrudModule\n\n\n\n\n\nAppConfirmModule\n\nAppConfirmModule\n\nCrudModule -->\n\nAppConfirmModule->CrudModule\n\n\n\n\n\nAccountService\n\nAccountService\n\nCrudModule -->\n\nAccountService->CrudModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/crud/src/crud.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AccountsComponent\n                            \n                            \n                                AccountFormComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AccountFormComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AccountService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    AppConfirmModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '@nx-starter-kit/shared';\nimport { AccountsComponent } from './containers/accounts/accounts.component';\nimport { AccountFormComponent } from './containers/accounts/account-form.component';\nimport { AccountService } from './containers/accounts/account.service';\nimport { AppConfirmModule } from '@nx-starter-kit/app-confirm';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AppConfirmModule,\n    RouterModule.forChild([\n      /* {path: '', pathMatch: 'full', component: InsertYourComponentHere} */\n      { path: '', redirectTo: 'accounts', pathMatch: 'full', data: { animation: 'crud' } },\n      { path: 'accounts', component: AccountsComponent }\n    ])\n  ],\n  declarations: [AccountsComponent, AccountFormComponent],\n  entryComponents: [AccountFormComponent],\n  providers: [AccountService]\n})\nexport class CrudModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Crumb.html":{"url":"interfaces/Crumb.html","title":"interface - Crumb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Crumb\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/breadcrumbs/src/breadcrumbs.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in libs/breadcrumbs/src/breadcrumbs.component.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in libs/breadcrumbs/src/breadcrumbs.component.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nexport interface Crumb {\n  name: string;\n  link?: string;\n}\n@Component({\n  selector: 'nxtk-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styleUrls: ['./breadcrumbs.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BreadcrumbsComponent implements OnInit {\n  @Input() title: string;\n  @Input() crumbs: Crumb[];\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/D3ChartService.html":{"url":"injectables/D3ChartService.html","title":"injectable - D3ChartService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  D3ChartService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/widgets/src/components/charts/nvD3/nvD3.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        getD3\n                                    \n                                    \n                                            Public\n                                        getNv\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor()\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/widgets/src/components/charts/nvD3/nvD3.service.ts:9\n                                        \n                                    \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        getD3\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getD3()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in libs/widgets/src/components/charts/nvD3/nvD3.service.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     D3\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        getNv\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getNv()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in libs/widgets/src/components/charts/nvD3/nvD3.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     Nv\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as d3 from 'd3';\nimport * as Nv from 'nvd3';\n\nexport type D3 = typeof d3;\nexport type Nv = typeof Nv;\n\n@Injectable()\nexport class D3ChartService {\n  constructor() {}\n\n  public getD3(): D3 {\n    return d3;\n  }\n\n  public getNv(): Nv {\n    return Nv;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n  Modules\n  DashboardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\n\nDashboardLayoutComponent\n\nDashboardLayoutComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardLayoutComponent->DashboardModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nDashboardModule -->\n\nOverviewComponent->DashboardModule\n\n\n\n\n\nRainbowComponent\n\nRainbowComponent\n\nDashboardModule -->\n\nRainbowComponent->DashboardModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nDashboardModule -->\n\nSidenavModule->DashboardModule\n\n\n\n\n\nToolbarModule\n\nToolbarModule\n\nDashboardModule -->\n\nToolbarModule->DashboardModule\n\n\n\n\n\nBreadcrumbsModule\n\nBreadcrumbsModule\n\nDashboardModule -->\n\nBreadcrumbsModule->DashboardModule\n\n\n\n\n\nQuickpanelModule\n\nQuickpanelModule\n\nDashboardModule -->\n\nQuickpanelModule->DashboardModule\n\n\n\n\n\nLoadingOverlayModule\n\nLoadingOverlayModule\n\nDashboardModule -->\n\nLoadingOverlayModule->DashboardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/dashboard/src/dashboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DashboardLayoutComponent\n                            \n                            \n                                OverviewComponent\n                            \n                            \n                                RainbowComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    SidenavModule\n                            \n                            \n                                    ToolbarModule\n                            \n                            \n                                    BreadcrumbsModule\n                            \n                            \n                                    QuickpanelModule\n                            \n                            \n                                    LoadingOverlayModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '@nx-starter-kit/shared';\n\nimport { DashboardLayoutComponent } from './containers/dashboard-layout/dashboard-layout.component';\nimport { OverviewComponent } from './containers/overview/overview.component';\nimport { RainbowComponent } from './components/rainbow/rainbow.component';\nimport { QuickpanelModule } from '@nx-starter-kit/quickpanel';\nimport { ToolbarModule } from '@nx-starter-kit/toolbar';\nimport { SidenavModule } from '@nx-starter-kit/sidenav';\nimport { LoadingOverlayModule } from '@nx-starter-kit/loading-overlay';\nimport { AuthGuard } from '@nx-starter-kit/auth';\nimport { BreadcrumbsModule } from '@nx-starter-kit/breadcrumbs';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    SidenavModule,\n    ToolbarModule,\n    BreadcrumbsModule,\n    QuickpanelModule,\n    LoadingOverlayModule,\n    RouterModule.forChild([\n      /* {path: '', pathMatch: 'full', component: InsertYourComponentHere} */\n      {\n        path: '',\n        component: DashboardLayoutComponent,\n        canActivate: [AuthGuard],\n        data: { animation: 'dashboard' },\n        children: [\n          {\n            path: 'overview',\n            component: OverviewComponent,\n            data: { animation: 'overview' }\n          },\n          {\n            path: '',\n            loadChildren: '@nx-starter-kit/widgets#WidgetsModule',\n            data: { animation: 'overview' }\n          },\n          {\n            path: 'crud',\n            loadChildren: '@nx-starter-kit/crud#CrudModule',\n            data: { animation: 'crud' }\n          },\n          {\n            path: 'experiments',\n            loadChildren: '@nx-starter-kit/experiments#ExperimentsModule',\n            data: { animation: 'experiments' }\n          }\n        ]\n      }\n    ])\n  ],\n  declarations: [DashboardLayoutComponent, OverviewComponent, RainbowComponent]\n})\nexport class DashboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DocsSiteTheme.html":{"url":"interfaces/DocsSiteTheme.html","title":"interface - DocsSiteTheme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DocsSiteTheme\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/theme-picker/src/theme-storage.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accent\n                                \n                                \n                                        href\n                                \n                                \n                                            Optional\n                                        isDark\n                                \n                                \n                                            Optional\n                                        isDefault\n                                \n                                \n                                        primary\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accent\n                                    \n                                \n                                \n                                    \n                                        accent:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in libs/theme-picker/src/theme-storage.service.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                    \n                                \n                                \n                                    \n                                        href:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in libs/theme-picker/src/theme-storage.service.ts:4\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDark\n                                    \n                                \n                                \n                                    \n                                        isDark:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in libs/theme-picker/src/theme-storage.service.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDefault\n                                    \n                                \n                                \n                                    \n                                        isDefault:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in libs/theme-picker/src/theme-storage.service.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primary\n                                    \n                                \n                                \n                                    \n                                        primary:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in libs/theme-picker/src/theme-storage.service.ts:6\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\n\nexport interface DocsSiteTheme {\n  href: string;\n  accent: string;\n  primary: string;\n  isDark?: boolean;\n  isDefault?: boolean;\n}\n\n@Injectable()\nexport class ThemeStorageService {\n  static storageKey = 'default-theme-storage-current';\n\n  public onThemeUpdate: EventEmitter = new EventEmitter();\n\n  public storeTheme(theme: DocsSiteTheme) {\n    window.localStorage[ThemeStorageService.storageKey] = JSON.stringify(theme);\n    this.onThemeUpdate.emit(theme);\n  }\n\n  public getStoredTheme(): DocsSiteTheme {\n    return JSON.parse(window.localStorage[ThemeStorageService.storageKey] || null);\n  }\n\n  public clearStorage() {\n    window.localStorage.removeItem(ThemeStorageService.storageKey);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Entity.html":{"url":"interfaces/Entity.html","title":"interface - Entity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Entity\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/containers/entity/entity.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n                Indexable\n                    \n                        \n                            \n                                \n                                    [key: string]:    any\n            \n                                \n                            \n                                    \n                                        \n                                            Defined in libs/shared/src/containers/entity/entity.model.ts:2\n                                        \n                                    \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in libs/shared/src/containers/entity/entity.model.ts:2\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface Entity {\n  readonly id: number | string;\n  [key: string]: any;\n}\n\nexport class EntityColumnDef {\n  readonly property: string;\n  readonly header = this.property;\n  public visible = true;\n  readonly displayFn =  (entity: T) =>  entity[this.property];\n\n  public constructor(init?:Partial>) {\n    Object.assign(this, init);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityColumnDef.html":{"url":"classes/EntityColumnDef.html","title":"class - EntityColumnDef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityColumnDef\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/containers/entity/entity.model.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                        displayFn\n                                    \n                                    \n                                            Readonly\n                                        header\n                                    \n                                    \n                                            Readonly\n                                        property\n                                    \n                                    \n                                            Public\n                                        visible\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                            Public\n                                    constructor(init?: Partial>)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/shared/src/containers/entity/entity.model.ts:10\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                init\n                                                              \n                                                                    \n                                                                                Partial>\n                                                                    \n                                                              \n                                                                \n                                                                        yes\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        displayFn\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    displayFn:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : (entity: T) =>  entity[this.property]\n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/shared/src/containers/entity/entity.model.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        header\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    header:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : this.property\n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/shared/src/containers/entity/entity.model.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        property\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    property:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/shared/src/containers/entity/entity.model.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        visible\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    visible:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : true\n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/shared/src/containers/entity/entity.model.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n\n\n\n\n\n    \n\n\n    \n        export interface Entity {\n  readonly id: number | string;\n  [key: string]: any;\n}\n\nexport class EntityColumnDef {\n  readonly property: string;\n  readonly header = this.property;\n  public visible = true;\n  readonly displayFn =  (entity: T) =>  entity[this.property];\n\n  public constructor(init?:Partial>) {\n    Object.assign(this, init);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/default/src/app/core/interceptors/error.interceptor.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        handleError\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        intercept\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor()\n                                \n                            \n                                    \n                                        \n                                            Defined in apps/default/src/app/core/interceptors/error.interceptor.ts:9\n                                        \n                                    \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        intercept\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            intercept(req: HttpRequest, next: HttpHandler)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in apps/default/src/app/core/interceptors/error.interceptor.ts:15\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                req\n                                                                \n                                                                    \n                                                                                HttpRequest\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                next\n                                                                \n                                                                    \n                                                                                HttpHandler\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        handleError\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    handleError:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : (errorRes: HttpErrorResponse) => {\n                const { error: { status, error, message } } = errorRes;\n                // Do messaging and error handling here\n                // this.snackBar.open(\n                //   `Error ! ${message}`,\n                //   '',\n                //   ErrorInterceptor.snackBarConfig\n                // );\n                console.error(`Backend Error ! status: ${status}, error: ${error}, message: ${message}`);\n            \n                return throwError(errorRes);\n              }\n                                    \n                                \n                                    \n                                        \n                                                Defined in apps/default/src/app/core/interceptors/error.interceptor.ts:19\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n// import { Store } from '@ngxs/store';\n// import { MatSnackBar, MatSnackBarConfig } from '@angular/material';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  // static snackBarConfig: MatSnackBarConfig = {\n  //   duration: 10000\n  // };\n  constructor(/*private snackBar: MatSnackBar, private store : Store*/) {}\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(catchError(this.handleError));\n  }\n\n  public handleError = (errorRes: HttpErrorResponse) => {\n    const { error: { status, error, message } } = errorRes;\n    // Do messaging and error handling here\n    // this.snackBar.open(\n    //   `Error ! ${message}`,\n    //   '',\n    //   ErrorInterceptor.snackBarConfig\n    // );\n    console.error(`Backend Error ! status: ${status}, error: ${error}, message: ${message}`);\n\n    return throwError(errorRes);\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventBus.html":{"url":"injectables/EventBus.html","title":"injectable - EventBus","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  EventBus\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/default/src/app/core/state/eventbus.ts\n        \n\n\n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(actions$: Actions)\n                                \n                            \n                                    \n                                        \n                                            Defined in apps/default/src/app/core/state/eventbus.ts:6\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                actions$\n                                                              \n                                                                    \n                                                                                Actions\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Actions, ofAction } from '@ngxs/store';\nimport { Injectable } from '@angular/core';\nimport { Login } from '@nx-starter-kit/auth';\n\n@Injectable()\nexport class EventBus {\n  constructor(private actions$: Actions) {\n    this.actions$.pipe(ofAction(Login)).subscribe(action => console.log('New Login!.......'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExperimentsComponent.html":{"url":"components/ExperimentsComponent.html","title":"component - ExperimentsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ExperimentsComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/experiments/src/containers/experiments/experiments.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-experiments\n            \n\n            \n                styleUrls\n                experiments.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./experiments.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor()\n                        \n                    \n                            \n                                \n                                    Defined in libs/experiments/src/containers/experiments/experiments.component.ts:8\n                                \n                            \n    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/experiments/src/containers/experiments/experiments.component.ts:11\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-experiments',\n  templateUrl: './experiments.component.html',\n  styleUrls: ['./experiments.component.scss']\n})\nexport class ExperimentsComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'ExperimentsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExperimentsModule.html":{"url":"modules/ExperimentsModule.html","title":"module - ExperimentsModule","body":"\n                   \n\n\n\n\n  Modules\n  ExperimentsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExperimentsModule\n\n\n\ncluster_ExperimentsModule_declarations\n\n\n\ncluster_ExperimentsModule_imports\n\n\n\n\nExperimentsComponent\n\nExperimentsComponent\n\n\n\nExperimentsModule\n\nExperimentsModule\n\nExperimentsModule -->\n\nExperimentsComponent->ExperimentsModule\n\n\n\n\n\nHammerCardComponent\n\nHammerCardComponent\n\nExperimentsModule -->\n\nHammerCardComponent->ExperimentsModule\n\n\n\n\n\nHammertimeDirective\n\nHammertimeDirective\n\nExperimentsModule -->\n\nHammertimeDirective->ExperimentsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nExperimentsModule -->\n\nSharedModule->ExperimentsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/experiments/src/experiments.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ExperimentsComponent\n                            \n                            \n                                HammerCardComponent\n                            \n                            \n                                HammertimeDirective\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '@nx-starter-kit/shared';\nimport { ExperimentsComponent } from './containers/experiments/experiments.component';\nimport { HammerCardComponent } from './components/hammer-card/hammer-card.component';\nimport { HammertimeDirective } from './components/hammertime/hammertime.directive';\n\nimport * as Hammer from 'hammerjs';\n\nimport { HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\n\nexport class MyHammerConfig extends HammerGestureConfig {\n  overrides = {\n    // override hammerjs default configuration\n    swipe: { direction: Hammer.DIRECTION_ALL }\n  };\n}\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      /* {path: '', pathMatch: 'full', component: InsertYourComponentHere} */\n      { path: '', redirectTo: 'experiments1', pathMatch: 'full', data: { animation: 'experiments' } },\n      {\n        path: 'experiments1',\n        component: ExperimentsComponent,\n        data: { animation: 'experiments1' }\n      },\n      {\n        path: 'experiment2',\n        component: ExperimentsComponent,\n        data: { animation: 'experiment2' }\n      },\n      {\n        path: 'experiment3',\n        component: ExperimentsComponent,\n        data: { animation: 'experiment3' }\n      }\n    ])\n  ],\n  providers: [\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: MyHammerConfig\n    }\n  ],\n  declarations: [ExperimentsComponent, HammerCardComponent, HammertimeDirective]\n})\nexport class ExperimentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeaturesComponent.html":{"url":"components/FeaturesComponent.html","title":"component - FeaturesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeaturesComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/home/src/containers/features/features.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                anms-features\n            \n\n            \n                styleUrls\n                features.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./features.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animateOnRouteEnter\n                            \n                            \n                                versions\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openLink\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/home/src/containers/features/features.component.ts:15\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                openLink\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    openLink(link: string)\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/home/src/containers/features/features.component.ts:17\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        link\n                                                        \n                                                            \n                                                                        string\n                                                            \n                                                        \n                                                        \n                                                                no\n                                                        \n                                                        \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                animateOnRouteEnter\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            animateOnRouteEnter:     \n    \n                        \n                    \n                        \n                            \n                                Default value : ANIMATE_ON_ROUTE_ENTER\n                            \n                        \n                            \n                                \n                                        Defined in libs/home/src/containers/features/features.component.ts:12\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                versions\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            versions:     \n    \n                        \n                    \n                        \n                            \n                                Default value : env.versions\n                            \n                        \n                            \n                                \n                                        Defined in libs/home/src/containers/features/features.component.ts:13\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { environment as env } from '@env/environment';\nimport { ANIMATE_ON_ROUTE_ENTER } from '@nx-starter-kit/animations';\n\n@Component({\n  selector: 'anms-features',\n  templateUrl: './features.component.html',\n  styleUrls: ['./features.component.scss']\n})\nexport class FeaturesComponent implements OnInit {\n  animateOnRouteEnter = ANIMATE_ON_ROUTE_ENTER;\n  versions = env.versions;\n\n  ngOnInit() {}\n\n  openLink(link: string) {\n    window.open(link, '_blank');\n  }\n}\n\n    \n\n    \n        \nFeatures\n\n\n  \n    \n      \n        {{versions.angular}}Angular\n        \n          Modern powerful framework\n        \n        \n          \n            library_books Docs\n          \n          \n            code Github\n          \n        \n      \n    \n    \n      \n        {{versions.material}}Angular Material\n        \n          Material design component library\n        \n        \n          \n            library_books Docs\n          \n          \n            code Github\n          \n        \n      \n    \n    \n      \n        {{versions.angularCli}}Angular Cli\n        \n          Responsive layout from battle tested, world most famous UI library\n        \n        \n          \n            library_books Docs\n          \n          \n            code Github\n          \n        \n      \n    \n    \n      \n        {{versions.ngxs}}NGXS\n        \n          NGXS is a state management pattern + library for Angular.\n        \n        \n          \n            library_books Docs\n          \n          \n            code Github\n          \n        \n      \n    \n    \n      \n        {{versions.rxjs}}RxJS\n        \n          Reactive programming with async collections using Observables.\n        \n        \n          \n            library_books Docs\n          \n          \n            code Github\n          \n        \n      \n    \n    \n      \n        {{versions.flexLayout}}Flex-Layout\n        \n          Responsive layout from battle tested, world most famous UI library\n        \n        \n          \n            library_books Docs\n          \n          \n            code Github\n          \n        \n      \n    \n    \n      \n        {{versions.typescript}} Typescript\n        Superior developer experience, code completion, refactoring and less bugs\n        \n          \n            code Github\n          \n          \n            library_books Docs\n          \n        \n      \n    \n    \n      \n        Themes\n        Flexible theming support for provided and custom components\n        \n          \n            library_books Docs\n          \n          \n            redeem Blog\n          \n        \n      \n    \n    \n      \n        Lazy loading\n        Faster startup time with lazy loaded feature modules\n        \n          \n            library_books Docs\n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Features                    {{versions.angular}}Angular                  Modern powerful framework                                      library_books Docs                                code Github                                              {{versions.material}}Angular Material                  Material design component library                                      library_books Docs                                code Github                                              {{versions.angularCli}}Angular Cli                  Responsive layout from battle tested, world most famous UI library                                      library_books Docs                                code Github                                              {{versions.ngxs}}NGXS                  NGXS is a state management pattern + library for Angular.                                      library_books Docs                                code Github                                              {{versions.rxjs}}RxJS                  Reactive programming with async collections using Observables.                                      library_books Docs                                code Github                                              {{versions.flexLayout}}Flex-Layout                  Responsive layout from battle tested, world most famous UI library                                      library_books Docs                                code Github                                              {{versions.typescript}} Typescript        Superior developer experience, code completion, refactoring and less bugs                              code Github                                library_books Docs                                              Themes        Flexible theming support for provided and custom components                              library_books Docs                                redeem Blog                                              Lazy loading        Faster startup time with lazy loaded feature modules                              library_books Docs                              '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'FeaturesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Filter.html":{"url":"interfaces/Filter.html","title":"interface - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Filter\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/containers/entity/entity.service.ts\n        \n\n\n\n\n\n            \n                Indexable\n                    \n                        \n                            \n                                \n                                    [name: string]:    string | []\n            \n                                \n                            \n                                    \n                                        \n                                            Defined in libs/shared/src/containers/entity/entity.service.ts:9\n                                        \n                                    \n                        \n                    \n            \n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\nimport { environment } from '@env/environment';\nimport { Entity } from './entity.model';\nimport { map, retry, catchError, finalize } from 'rxjs/operators';\nimport * as moment from 'moment';\n\nexport interface Filter {\n  [name: string]: string | string[];\n}\n\nexport abstract class EntityService {\n  private baseUrl = environment.API_BASE_URL;\n  private loadingSubject = new BehaviorSubject(false);\n  public loading$ = this.loadingSubject.asObservable();\n\n  abstract readonly entityPath: string;\n\n  constructor(protected httpClient: HttpClient) {}\n\n  getById(id: number) {\n    this.loadingSubject.next(true);\n    return this.httpClient\n      .get(`${this.baseUrl}/${this.entityPath}/${id}`)\n      .pipe(catchError(this.handleError), finalize(() => this.loadingSubject.next(false)));\n  }\n\n  findAll(filter: Filter, sortOrder = 'asc', pageNumber = 0, pageSize = 100): Observable | Observable {\n    this.loadingSubject.next(true);\n    return this.httpClient\n      .get(`${this.baseUrl}/${this.entityPath}`, {\n        params: new HttpParams()\n          .set('filter', 'filter TODO')\n          .set('sortOrder', sortOrder)\n          .set('pageNumber', pageNumber.toString())\n          .set('pageSize', pageSize.toString())\n      })\n      .pipe(\n        retry(3), // retry a failed request up to 3 times\n        catchError(this.handleError),\n        finalize(() => this.loadingSubject.next(false))\n      );\n  }\n\n  getAll() {\n    this.loadingSubject.next(true);\n    return this.httpClient.get(`${this.baseUrl}/${this.entityPath}`).pipe(\n      retry(3), // retry a failed request up to 3 times\n      catchError(this.handleError),\n      finalize(() => this.loadingSubject.next(false))\n    );\n  }\n\n  delete(id: number | string) {\n    this.loadingSubject.next(true);\n    return this.httpClient\n      .delete(`${this.baseUrl}/${this.entityPath}/${id}`)\n      .pipe(catchError(this.handleError), finalize(() => this.loadingSubject.next(false)));\n  }\n\n  post(entity: T) {\n    this.loadingSubject.next(true);\n    return this.httpClient\n      .post(`${this.baseUrl}/${this.entityPath}`, entity)\n      .pipe(catchError(this.handleError), finalize(() => this.loadingSubject.next(false)));\n  }\n\n  put(entity: T) {\n    console.log(entity);\n    this.loadingSubject.next(true);\n    return this.httpClient\n      .put(`${this.baseUrl}/${this.entityPath}`, entity)\n      .pipe(catchError(this.handleError), finalize(() => this.loadingSubject.next(false)));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);\n    }\n    // return an ErrorObservable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  }\n\n  private convertToJson(body: any) {\n    const temporalFunctionToJson = Date.prototype.toJSON;\n    Date.prototype.toJSON = function() {\n      return moment(this).format('YYYY-MM-DD');\n    };\n\n    const jsonBody = JSON.stringify(body);\n\n    Date.prototype.toJSON = temporalFunctionToJson;\n    return jsonBody;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/shared/src/components/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                environment\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n                \n                    \n                        Accessors\n                    \n                \n                \n                    \n                        \n                            \n                                version\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor()\n                        \n                    \n                            \n                                \n                                    Defined in libs/shared/src/components/footer/footer.component.ts:11\n                                \n                            \n    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/shared/src/components/footer/footer.component.ts:14\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                environment\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            environment:     \n    \n                        \n                    \n                        \n                            \n                                Default value : environment.envName\n                            \n                        \n                            \n                                \n                                        Defined in libs/shared/src/components/footer/footer.component.ts:11\n                                \n                            \n    \n    \n                \n            \n    \n\n    \n        \n            Accessors\n        \n            \n                \n                    \n                        \n                            \n                            version\n                        \n                    \n    \n                    \n                        \n                            getversion()\n                        \n                    \n                                \n                                    \n                                        Defined in libs/shared/src/components/footer/footer.component.ts:16\n                                    \n                                \n    \n                \n            \n    \n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { environment } from '@env/environment';\nconst { version: appVersion } = require('../../../../../package.json');\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  environment = environment.envName;\n  constructor() {}\n\n  ngOnInit() {}\n\n  get version() {\n    if (appVersion) {\n      return appVersion;\n    }\n    return '';\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Learn Angular\n      \n    \n\n    \n      Current Version: {{version}}-{{environment}}\n    \n\n    \n      Powered by Sumo ©2010-2018.\n      Code licensed under an MIT-style License.\n      Documentation licensed under CC BY 4.0.\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Learn Angular                    Current Version: {{version}}-{{environment}}              Powered by Sumo ©2010-2018.      Code licensed under an MIT-style License.      Documentation licensed under CC BY 4.0.      '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FullscreenComponent.html":{"url":"components/FullscreenComponent.html","title":"component - FullscreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FullscreenComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/fullscreen/src/fullscreen.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nxtk-fullscreen\n            \n\n            \n                styleUrls\n                fullscreen.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./fullscreen.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isFullscreen\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleFullscreen\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor()\n                        \n                    \n                            \n                                \n                                    Defined in libs/fullscreen/src/fullscreen.component.ts:10\n                                \n                            \n    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/fullscreen/src/fullscreen.component.ts:13\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                toggleFullscreen\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    toggleFullscreen()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/fullscreen/src/fullscreen.component.ts:15\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                isFullscreen\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            isFullscreen:     \n    \n                        \n                    \n                        \n                            \n                                Default value : false\n                            \n                        \n                            \n                                \n                                        Defined in libs/fullscreen/src/fullscreen.component.ts:10\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport * as screenfull from 'screenfull';\n\n@Component({\n  selector: 'nxtk-fullscreen',\n  templateUrl: './fullscreen.component.html',\n  styleUrls: ['./fullscreen.component.scss']\n})\nexport class FullscreenComponent implements OnInit {\n  isFullscreen = false;\n  constructor() {}\n\n  ngOnInit() {}\n\n  toggleFullscreen() {\n    if (screenfull.enabled) {\n      screenfull.toggle();\n      this.isFullscreen = !this.isFullscreen;\n    }\n  }\n}\n\n    \n\n    \n        \n  fullscreen\n  fullscreen_exit\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  fullscreen  fullscreen_exit'\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'FullscreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FullscreenModule.html":{"url":"modules/FullscreenModule.html","title":"module - FullscreenModule","body":"\n                   \n\n\n\n\n  Modules\n  FullscreenModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FullscreenModule\n\n\n\ncluster_FullscreenModule_declarations\n\n\n\ncluster_FullscreenModule_imports\n\n\n\ncluster_FullscreenModule_exports\n\n\n\n\nFullscreenComponent\n\nFullscreenComponent\n\n\n\nFullscreenModule\n\nFullscreenModule\n\nFullscreenModule -->\n\nFullscreenComponent->FullscreenModule\n\n\n\n\n\nFullscreenComponent \n\nFullscreenComponent \n\nFullscreenComponent  -->\n\nFullscreenModule->FullscreenComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nFullscreenModule -->\n\nMaterialModule->FullscreenModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/fullscreen/src/fullscreen.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FullscreenComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FullscreenComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FullscreenComponent } from './fullscreen.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from '@nx-starter-kit/material';\n\n@NgModule({\n  imports: [CommonModule, FlexLayoutModule, MaterialModule],\n  exports: [FullscreenComponent],\n  declarations: [FullscreenComponent]\n})\nexport class FullscreenModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Go.html":{"url":"classes/Go.html","title":"class - Go","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Go\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/default/src/app/core/state/router.state.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        payload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: literal type)\n                                \n                            \n                                    \n                                        \n                                            Defined in apps/default/src/app/core/state/router.state.ts:19\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                literal type\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     literal type\n            \n                                \n                            \n                                \n                                    \n                                        Type :     literal type\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in apps/default/src/app/core/state/router.state.ts:20\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Router, NavigationEnd, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { filter, map, mergeMap } from 'rxjs/operators';\nimport { State, Action, Store, StateContext } from '@ngxs/store';\nimport { combineLatest } from 'rxjs';\n\n//------ router model -------\nexport interface RouterStateModel {\n  path: string;\n  data?: any;\n  params?: any;\n  queryParams?: any;\n}\n\n//---- router actions ------\nexport class UpdateRouterState {\n  constructor(public readonly payload: RouterStateModel) {}\n}\n\nexport class Go {\n  constructor(public readonly payload: { path: any[]; query?: object; extras?: NavigationExtras }) {}\n}\n\n@State({\n  name: 'router',\n  defaults: {\n    path: window.location.pathname + window.location.search\n  }\n})\nexport class RouterState {\n  constructor(private store: Store, private router: Router, private activatedRoute: ActivatedRoute) {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        map(() => this.activatedRoute),\n        map((route: ActivatedRoute) => {\n          while (route.firstChild) route = route.firstChild;\n          return route;\n        }),\n        mergeMap(({ params, queryParams, routeConfig: { data, path } }: ActivatedRoute) => {\n          return combineLatest(params, queryParams, function(_params, _queryParams) {\n            return { path, data, _params, _queryParams };\n          });\n        })\n      )\n      .subscribe(all => {\n        this.store.dispatch(\n          new UpdateRouterState({ path: all.path, data: all.data, params: all._params, queryParams: all._queryParams })\n        );\n      });\n  }\n\n  @Action(UpdateRouterState)\n  update({ getState, setState }: StateContext, { payload }: UpdateRouterState) {\n    setState({\n      ...payload\n    });\n  }\n\n  @Action(Go)\n  go(sc: StateContext, { payload }: Go) {\n    const { path, query: queryParams, extras } = payload;\n    return this.router.navigate(path, { queryParams, ...extras });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HammerCardComponent.html":{"url":"components/HammerCardComponent.html","title":"component - HammerCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HammerCardComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/experiments/src/components/hammer-card/hammer-card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-hammer-card\n            \n\n            \n                styleUrls\n                hammer-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./hammer-card.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationState\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                resetAnimationState\n                            \n                            \n                                startAnimation\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor()\n                        \n                    \n                            \n                                \n                                    Defined in libs/experiments/src/components/hammer-card/hammer-card.component.ts:11\n                                \n                            \n    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/experiments/src/components/hammer-card/hammer-card.component.ts:15\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                resetAnimationState\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    resetAnimationState()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/experiments/src/components/hammer-card/hammer-card.component.ts:24\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                startAnimation\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    startAnimation(state: )\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/experiments/src/components/hammer-card/hammer-card.component.ts:17\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        state\n                                                        \n                                                        \n                                                        \n                                                                no\n                                                        \n                                                        \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                animationState\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            animationState:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                        Defined in libs/experiments/src/components/hammer-card/hammer-card.component.ts:11\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { cardAnimation } from '@nx-starter-kit/animations';\n\n@Component({\n  selector: 'app-hammer-card',\n  templateUrl: './hammer-card.component.html',\n  styleUrls: ['./hammer-card.component.scss'],\n  animations: [cardAnimation]\n})\nexport class HammerCardComponent implements OnInit {\n  animationState: string;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  startAnimation(state) {\n    console.log(state);\n    if (!this.animationState) {\n      this.animationState = state;\n    }\n  }\n\n  resetAnimationState() {\n    this.animationState = '';\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n\n    \n      Learn one way to build applications with Angular and reuse your code and abilities to build apps for any deployment target. For web, mobile web, native mobile and native desktop.\n    \n  \n  \n    WOBBLE\n    SWING\n\n    Custom Events\n    JELLO (doubleTap) \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Learn one way to build applications with Angular and reuse your code and abilities to build apps for any deployment target. For web, mobile web, native mobile and native desktop.            WOBBLE    SWING    Custom Events    JELLO (doubleTap)   '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'HammerCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/HammertimeDirective.html":{"url":"directives/HammertimeDirective.html","title":"directive - HammertimeDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  HammertimeDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            libs/experiments/src/components/hammertime/hammertime.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [hammertime]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Outputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        doubleTap\n                                    \n                                    \n                                        tripleTap\n                                    \n                                \n                            \n                        \n                        \n                            \n                                HostListeners\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        tap\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor()\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/experiments/src/components/hammertime/hammertime.directive.ts:8\n                                        \n                                    \n            \n                        \n                    \n            \n\n\n            \n                Outputs\n                    \n                        \n                            \n                                \n                                    \n                                    doubleTap\n                                \n                                \n                                    $event type:    EventEmitter\n            \n                                \n                            \n                                    \n                                        \n                                                Defined in libs/experiments/src/components/hammertime/hammertime.directive.ts:7\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    tripleTap\n                                \n                                \n                                    $event type:    EventEmitter\n            \n                                \n                            \n                                    \n                                        \n                                                Defined in libs/experiments/src/components/hammertime/hammertime.directive.ts:8\n                                        \n                                    \n                        \n                    \n            \n\n            \n                HostListeners        \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        tap\n                                        \n                                        \n                                    \n                                \n                            \n                                \n                                    \n                                        Arguments : '$event' \n                                    \n                                \n                            \n                                \n            tap(e: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in libs/experiments/src/components/hammertime/hammertime.directive.ts:13\n                                        \n                                    \n            \n                        \n                    \n            \n\n\n\n\n    \n\n\n    \n        import { Directive, HostListener, Output, EventEmitter } from '@angular/core';\n\n@Directive({\n  selector: '[hammertime]'\n})\nexport class HammertimeDirective {\n  @Output() doubleTap = new EventEmitter();\n  @Output() tripleTap = new EventEmitter();\n\n  constructor() {}\n\n  @HostListener('tap', ['$event'])\n  onTap(e) {\n    if (e.tapCount === 2) {\n      this.doubleTap.emit(e);\n    }\n\n    if (e.tapCount === 3) {\n      this.tripleTap.emit(e);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/home/src/components/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-header\n            \n\n            \n                styleUrls\n                header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn$\n                            \n                            \n                                navigation\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                signup\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(store: Store)\n                        \n                    \n                            \n                                \n                                    Defined in libs/home/src/components/header/header.component.ts:19\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        store\n                                                      \n                                                            \n                                                                        Store\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Public\n                                login\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                            login()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/home/src/components/header/header.component.ts:25\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Public\n                                logout\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                            logout()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/home/src/components/header/header.component.ts:29\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/home/src/components/header/header.component.ts:23\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Public\n                                signup\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                            signup()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/home/src/components/header/header.component.ts:33\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                isLoggedIn$\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            isLoggedIn$:     Observable\n    \n                        \n                    \n                        \n                            \n                                Type :     Observable\n    \n                            \n                        \n                        \n                            \n                                Decorators : Select\n                            \n                        \n                            \n                                \n                                        Defined in libs/home/src/components/header/header.component.ts:13\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                navigation\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            navigation:     []\n    \n                        \n                    \n                        \n                            \n                                Type :     []\n    \n                            \n                        \n                        \n                            \n                                Default value : [\n        { link: 'about', label: 'About' },\n        { link: 'blog', label: 'Blog' },\n        { link: 'features', label: 'Features' }\n      ]\n                            \n                        \n                            \n                                \n                                        Defined in libs/home/src/components/header/header.component.ts:15\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store, Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { Login, Logout } from '@nx-starter-kit/auth';\nimport { AuthState } from '@nx-starter-kit/auth';\n\n@Component({\n  selector: 'app-home-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @Select(AuthState.isLoggedIn) isLoggedIn$: Observable;\n\n  navigation = [\n    { link: 'about', label: 'About' },\n    { link: 'blog', label: 'Blog' },\n    { link: 'features', label: 'Features' }\n  ];\n\n  constructor(private store: Store) {}\n\n  ngOnInit() {}\n\n  public login() {\n    this.store.dispatch(new Login());\n  }\n\n  public logout() {\n    this.store.dispatch(new Logout());\n  }\n\n  public signup() {}\n}\n\n    \n\n    \n        \n  \n\n    \n      \n      \n      WEB360\n    \n\n    Intro\n    \n\n    \n\n    \n      \n        {{item.label}}\n      \n    \n\n    \n\n    \n      person_outline\n    \n\n    \n      \n      \n        fingerprint\n        Login\n      \n      \n        cake\n        Signup\n      \n      \n        lock_open\n        Logout\n      \n      \n    \n\n  \n\n  \n    \n      {{item.label}}\n    \n  \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        WEB360        Intro                          {{item.label}}                        person_outline                            fingerprint        Login                    cake        Signup                    lock_open        Logout                              {{item.label}}      '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeLayoutComponent.html":{"url":"components/HomeLayoutComponent.html","title":"component - HomeLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeLayoutComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/home/src/containers/home-layout/home-layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-layout\n            \n\n            \n                styleUrls\n                home-layout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home-layout.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onDeactivate\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor()\n                        \n                    \n                            \n                                \n                                    Defined in libs/home/src/containers/home-layout/home-layout.component.ts:10\n                                \n                            \n    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/home/src/containers/home-layout/home-layout.component.ts:13\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                onDeactivate\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    onDeactivate()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/home/src/containers/home-layout/home-layout.component.ts:15\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '@nx-starter-kit/animations';\n\n@Component({\n  selector: 'app-home-layout',\n  templateUrl: './home-layout.component.html',\n  styleUrls: ['./home-layout.component.scss'],\n  animations: [routerTransition]\n})\nexport class HomeLayoutComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n\n  onDeactivate() {\n    console.log('in TODO onDeactivate scrollTop');\n    document.body.scrollTop = 0;\n    window.scrollTo(0, 0);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n  Modules\n  HomeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHeaderComponent->HomeModule\n\n\n\n\n\nHomeLayoutComponent\n\nHomeLayoutComponent\n\nHomeModule -->\n\nHomeLayoutComponent->HomeModule\n\n\n\n\n\nLandingComponent\n\nLandingComponent\n\nHomeModule -->\n\nLandingComponent->HomeModule\n\n\n\n\n\nBlogComponent\n\nBlogComponent\n\nHomeModule -->\n\nBlogComponent->HomeModule\n\n\n\n\n\nAboutComponent\n\nAboutComponent\n\nHomeModule -->\n\nAboutComponent->HomeModule\n\n\n\n\n\nFeaturesComponent\n\nFeaturesComponent\n\nHomeModule -->\n\nFeaturesComponent->HomeModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\nScrollToTopModule\n\nScrollToTopModule\n\nHomeModule -->\n\nScrollToTopModule->HomeModule\n\n\n\n\n\nThemePickerModule\n\nThemePickerModule\n\nHomeModule -->\n\nThemePickerModule->HomeModule\n\n\n\n\n\nSvgViewerModule\n\nSvgViewerModule\n\nHomeModule -->\n\nSvgViewerModule->HomeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/home/src/home.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HeaderComponent\n                            \n                            \n                                HomeLayoutComponent\n                            \n                            \n                                LandingComponent\n                            \n                            \n                                BlogComponent\n                            \n                            \n                                AboutComponent\n                            \n                            \n                                FeaturesComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    ScrollToTopModule\n                            \n                            \n                                    ThemePickerModule\n                            \n                            \n                                    SvgViewerModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '@nx-starter-kit/shared';\nimport { ThemePickerModule } from '@nx-starter-kit/theme-picker';\nimport { HeaderComponent } from './components/header/header.component';\nimport { HomeLayoutComponent } from './containers/home-layout/home-layout.component';\nimport { LandingComponent } from './containers/landing/landing.component';\nimport { BlogComponent } from './containers/blog/blog.component';\nimport { AboutComponent } from './containers/about/about.component';\nimport { ScrollToTopModule } from '@nx-starter-kit/scroll-to-top';\nimport { SvgViewerModule } from '@nx-starter-kit/svg-viewer';\nimport { FeaturesComponent } from './containers/features/features.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ScrollToTopModule,\n    ThemePickerModule,\n    SvgViewerModule,\n    RouterModule.forChild([\n      /* {path: '', pathMatch: 'full', component: InsertYourComponentHere} */\n      {\n        path: '',\n        component: HomeLayoutComponent,\n        data: { animation: 'home' },\n        children: [\n          {\n            path: '',\n            component: LandingComponent,\n            data: { animation: 'home' }\n          },\n          {\n            path: 'blog',\n            component: BlogComponent,\n            data: { animation: 'blog' }\n          },\n          {\n            path: 'about',\n            component: AboutComponent,\n            data: { animation: 'about' }\n          },\n          {\n            path: 'features',\n            component: FeaturesComponent,\n            data: { animation: 'features' }\n          }\n        ]\n      }\n    ])\n  ],\n  declarations: [\n    HeaderComponent,\n    HomeLayoutComponent,\n    LandingComponent,\n    BlogComponent,\n    AboutComponent,\n    FeaturesComponent\n  ]\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InMemoryDataService.html":{"url":"injectables/InMemoryDataService.html","title":"injectable - InMemoryDataService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  InMemoryDataService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/default/src/app/core/services/in-memory-data.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            \n                                        createDb\n                                    \n                                    \n                                        parseRequestUrl\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        createDb\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    createDb()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in apps/default/src/app/core/services/in-memory-data.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     {}\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        parseRequestUrl\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            parseRequestUrl(url: string, utils: RequestInfoUtilities)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in apps/default/src/app/core/services/in-memory-data.service.ts:41\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                url\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                utils\n                                                                \n                                                                    \n                                                                                RequestInfoUtilities\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     ParsedRequestUrl\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import {\n  InMemoryDbService,\n  ParsedRequestUrl,\n  RequestInfo,\n  RequestInfoUtilities,\n  ResponseOptions\n} from 'angular-in-memory-web-api';\nimport { Injectable } from '@angular/core';\n\n// /api/accounts/1\n// /api/symbols/1\n// https://github.com/angular/in-memory-web-api/blob/master/src/app/hero-in-mem-data.service.ts\n// https://github.com/angular/in-memory-web-api/blob/master/src/app/hero-in-mem-data-override.service.ts\n@Injectable()\nexport class InMemoryDataService implements InMemoryDbService {\n  async createDb() {\n    const response = await fetch('assets/data/accounts.json');\n    const accounts = await response.json();\n\n    const symbols = [\n      {\n        id: 1,\n        code: 'MSFT',\n        entity: 'Microsoft'\n      },\n      {\n        id: 2,\n        code: 'AAPL',\n        entity: 'Apple'\n      },\n      {\n        id: 3,\n        code: 'GOOG',\n        entity: 'Google'\n      }\n    ];\n\n    return { accounts, symbols };\n  }\n\n  parseRequestUrl(url: string, utils: RequestInfoUtilities): ParsedRequestUrl {\n    const newUrl = url\n      .replace(/\\/datapower\\/serviceproxy/, '/serviceproxy')\n      .replace(/\\/nas\\/cluster/, '/cluster')\n      .replace(/\\/layer7\\/my.cnf/, '/mycnf');\n\n    const parsed = utils.parseRequestUrl(newUrl);\n    // console.log(`parseRequestUrl override of '${url}':`, parsed);\n    // console.log(`parseRequestUrl override of '${url}':`, `new: ${newUrl}`);\n    return parsed;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializeData.html":{"url":"classes/InitializeData.html","title":"class - InitializeData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializeData\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/navigator/src/state/menu.state.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        payload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: Tree)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/navigator/src/state/menu.state.ts:6\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                Tree\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     Tree\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Tree\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/navigator/src/state/menu.state.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action, Selector, State, StateContext, Store } from '@ngxs/store';\nimport { MenuItem } from '../models/menu-item.model';\nimport { MenuService } from '../services/menu.service';\nimport { Tree } from '@nx-starter-kit/tree';\n\nexport class InitializeData {\n  constructor(public readonly payload: Tree) {}\n}\n\nexport class NextCurrentlyOpened {\n  constructor(public readonly payload: MenuItem[]) {}\n}\n\nexport class SetIconMode {\n  constructor(public readonly payload: boolean) {}\n}\n\nexport class ToggleCurrentlyOpened {\n  constructor(public readonly payload: MenuItem) {}\n}\n\nexport class ToggleCurrentlyOpenedByRoute {\n  constructor(public readonly payload: string) {}\n}\n\nexport interface MenuStateModel {\n  tree: Tree;\n  currentlyOpened: MenuItem[];\n  iconMode: boolean;\n}\n\n@State({\n  name: 'menu',\n  defaults: {\n    tree: null,\n    currentlyOpened: [],\n    iconMode: false\n  }\n})\nexport class MenuState {\n  constructor(private store: Store, private menuService: MenuService) {\n    const _tree = menuService.tree;\n    setTimeout(() => {\n      this.store.dispatch(new InitializeData(_tree));\n    });\n  }\n\n  @Selector()\n  static menuItems(state: MenuStateModel) {\n    return state.tree.root.children;\n  }\n\n  @Selector()\n  static currentlyOpened(state: MenuStateModel) {\n    if (state.iconMode) {\n      return [];\n    } else {\n      return state.currentlyOpened;\n    }\n  }\n\n  private getParents(tree, item: MenuItem): MenuItem[] {\n    const ancestors = tree.getAllParents(item);\n    ancestors.shift();\n    return ancestors;\n  }\n\n  @Action(InitializeData)\n  initializeData({ setState }: StateContext, { payload }: InitializeData) {\n    setState({\n      tree: payload,\n      currentlyOpened: [],\n      iconMode: false\n    });\n  }\n\n  @Action(SetIconMode)\n  setIconMode({ getState, patchState }: StateContext, { payload }: SetIconMode) {\n    patchState({\n      iconMode: payload\n    });\n  }\n\n  @Action(NextCurrentlyOpened)\n  nextCurrentlyOpened({ getState, patchState }: StateContext, { payload }: NextCurrentlyOpened) {\n    patchState({\n      currentlyOpened: payload\n    });\n  }\n\n  @Action(ToggleCurrentlyOpened)\n  toggleCurrentlyOpened({ getState, patchState }: StateContext, { payload }: ToggleCurrentlyOpened) {\n    let { tree, currentlyOpened } = getState();\n    const isOpen = currentlyOpened.indexOf(payload) !== -1;\n\n    if (isOpen) {\n      if (currentlyOpened.length > 1) {\n        currentlyOpened.length = currentlyOpened.indexOf(payload);\n      } else {\n        currentlyOpened = [];\n      }\n    } else {\n      currentlyOpened = this.getParents(tree, payload);\n    }\n\n    patchState({\n      currentlyOpened: currentlyOpened\n    });\n  }\n\n  @Action(ToggleCurrentlyOpenedByRoute)\n  toggleCurrentlyOpenedByRoute(\n    { getState, patchState }: StateContext,\n    { payload }: ToggleCurrentlyOpenedByRoute\n  ) {\n    const { tree } = getState();\n    let currentlyOpened: MenuItem[] = [];\n\n    const item = tree.findByPredicateBFS(node => {\n      return node.link === payload;\n    });\n\n    if (item && item.parent) {\n      currentlyOpened = this.getParents(tree, item);\n    } else if (item) {\n      currentlyOpened = [item];\n    }\n\n    patchState({\n      currentlyOpened: currentlyOpened\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingComponent.html":{"url":"components/LandingComponent.html","title":"component - LandingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/home/src/containers/landing/landing.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing\n            \n\n            \n                styleUrls\n                landing.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./landing.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _pageTitleService\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(_pageTitleService: PageTitleService)\n                        \n                    \n                            \n                                \n                                    Defined in libs/home/src/containers/landing/landing.component.ts:9\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        _pageTitleService\n                                                      \n                                                            \n                                                                        PageTitleService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/home/src/containers/landing/landing.component.ts:12\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Public\n                                _pageTitleService\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            _pageTitleService:     PageTitleService\n    \n                        \n                    \n                        \n                            \n                                Type :     PageTitleService\n    \n                            \n                        \n                            \n                                \n                                        Defined in libs/home/src/containers/landing/landing.component.ts:10\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PageTitleService } from '@default/core';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.scss']\n})\nexport class LandingComponent implements OnInit {\n  constructor(public _pageTitleService: PageTitleService) {}\n\n  ngOnInit(): void {\n    this._pageTitleService.title = '';\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Sumo App\n      360 view of Sumo App\n    \n    \n      Get started\n    \n  \n\n\n\n  \n    \n      \n    \n    \n      Sprint from Zero to App\n      Hit the ground running with comprehensive, modern UI components that work across\n        the web, mobile and desktop.\n    \n  \n  \n    \n      \n    \n    \n      Fast and Consistent\n      Finely tuned performance, because every millisecond counts. Fully tested across\n        modern browsers.\n    \n  \n  \n    \n      \n    \n    \n      Versatile\n      Themable, for when you need to stay on brand or just have a favorite color.\n        Accessible and internationalized so that all users are welcome.\n    \n  \n  \n    \n      \n    \n    \n      Optimized for Angular\n      Built by the Angular team to integrate seamlessly with Angular.\n    \n  \n  \n    Get started\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Sumo App      360 view of Sumo App              Get started                                Sprint from Zero to App      Hit the ground running with comprehensive, modern UI components that work across        the web, mobile and desktop.                                Fast and Consistent      Finely tuned performance, because every millisecond counts. Fully tested across        modern browsers.                                Versatile      Themable, for when you need to stay on brand or just have a favorite color.        Accessible and internationalized so that all users are welcome.                                Optimized for Angular      Built by the Angular team to integrate seamlessly with Angular.            Get started  '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'LandingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LineChartWidgetComponent.html":{"url":"components/LineChartWidgetComponent.html","title":"component - LineChartWidgetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LineChartWidgetComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/widgets/src/components/widgets-v1/line-chart-widget/line-chart-widget.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nxtk-line-chart-widget\n            \n\n            \n                styleUrls\n                line-chart-widget.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./line-chart-widget.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartOptions\n                            \n                            \n                                d3\n                            \n                            \n                                revenueSum\n                            \n                            \n                                shippingSum\n                            \n                            \n                                taxSum\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(nvD3Service: D3ChartService)\n                        \n                    \n                            \n                                \n                                    Defined in libs/widgets/src/components/widgets-v1/line-chart-widget/line-chart-widget.component.ts:20\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        nvD3Service\n                                                      \n                                                            \n                                                                        D3ChartService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            data\n                        \n                        \n                                \n                                Type:    any\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/widgets-v1/line-chart-widget/line-chart-widget.component.ts:10\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            options\n                        \n                        \n                                \n                                Type:    any\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/widgets-v1/line-chart-widget/line-chart-widget.component.ts:12\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/widgets/src/components/widgets-v1/line-chart-widget/line-chart-widget.component.ts:26\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                chartOptions\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            chartOptions:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n                            \n                                \n                                        Defined in libs/widgets/src/components/widgets-v1/line-chart-widget/line-chart-widget.component.ts:14\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                d3\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            d3:     D3\n    \n                        \n                    \n                        \n                            \n                                Type :     D3\n    \n                            \n                        \n                            \n                                \n                                        Defined in libs/widgets/src/components/widgets-v1/line-chart-widget/line-chart-widget.component.ts:16\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                revenueSum\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            revenueSum:     \n    \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/widgets-v1/line-chart-widget/line-chart-widget.component.ts:18\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                shippingSum\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            shippingSum:     \n    \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/widgets-v1/line-chart-widget/line-chart-widget.component.ts:20\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                taxSum\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            taxSum:     \n    \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/widgets-v1/line-chart-widget/line-chart-widget.component.ts:19\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit, Input, ElementRef } from '@angular/core';\nimport { D3, D3ChartService } from '../../charts/nvD3/nvD3.service';\n\n@Component({\n  selector: 'nxtk-line-chart-widget',\n  templateUrl: './line-chart-widget.component.html',\n  styleUrls: ['./line-chart-widget.component.scss']\n})\nexport class LineChartWidgetComponent implements OnInit {\n  @Input('data') data: any;\n\n  @Input('options') options: any;\n\n  chartOptions: any;\n\n  d3: D3;\n\n  revenueSum;\n  taxSum;\n  shippingSum;\n\n  constructor(nvD3Service: D3ChartService) {\n    this.d3 = nvD3Service.getD3();\n  }\n\n  ngOnInit() {\n    this.revenueSum = this.data[0].values.reduce((a, b) => a + b.value, 0);\n    this.taxSum = this.data[1].values.reduce((a, b) => a + b.value, 0);\n    this.shippingSum = this.data[2].values.reduce((a, b) => a + b.value, 0);\n\n    let d3 = this.d3;\n\n    this.chartOptions = {\n      chart: {\n        type: 'stackedAreaChart',\n        height: 400,\n        margin: {\n          top: 0,\n          right: 60,\n          bottom: 20,\n          left: 0\n        },\n        x: d => {\n          return d.date;\n        },\n        y: d => {\n          return d.value;\n        },\n        xAxis: {\n          tickFormat: d => {\n            return d3.time.format('%B')(new Date(d));\n          },\n          showMaxMin: false\n        },\n        yAxis: {\n          tickFormat: d3.format(',.2f')\n        },\n        rightAlignYAxis: true,\n        useInteractiveGuideline: true,\n        interpolate: 'cardinal'\n      }\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    {{ options.icon }}\n    {{ options.name }}\n  \n\n  \n    \n  \n\n  \n    \n    \n      \n        \n        \n          ${{ revenueSum | number: '1.0-2' }}\n          {{ data[0].key }}\n        \n      \n      \n        \n        \n          ${{ taxSum | number: '1.0-2' }}\n          {{ data[1].key }}\n        \n      \n      \n        \n        \n          ${{ shippingSum | number: '1.0-2' }}\n          {{ data[2].key }}\n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ options.icon }}    {{ options.name }}                                                    ${{ revenueSum | number: \\'1.0-2\\' }}          {{ data[0].key }}                                              ${{ taxSum | number: \\'1.0-2\\' }}          {{ data[1].key }}                                              ${{ shippingSum | number: \\'1.0-2\\' }}          {{ data[2].key }}                    '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'LineChartWidgetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadProfile.html":{"url":"classes/LoadProfile.html","title":"class - LoadProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadProfile\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/auth.actions.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: any)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/auth/src/auth.actions.ts:12\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                any\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/auth/src/auth.actions.ts:13\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n\n\n\n\n\n    \n\n\n    \n        export enum AuthMode {\n  ImplicitFLow = 'ImplicitFLow',\n  PasswordFlow = 'ROPCFlow',\n  AuthorizationCodeFLow = 'AuthorizationCodeFLow'\n}\n\n//  Actions\nexport class Login {\n  constructor(public readonly payload?: { infoMsg?: string }) {}\n}\nexport class Logout {}\nexport class LoadProfile {\n  constructor(public payload: any) {}\n}\nexport class ChangeAuthMode {\n  constructor(public readonly payload: AuthMode) {}\n}\n\n// Mutation Actions\nexport class LoginSuccess {\n  constructor(public readonly payload: any) {}\n}\nexport class LoginCanceled {}\nexport class LogoutSuccess {}\nexport class ProfileLoaded {}\nexport class AuthModeChanged {\n  constructor(public readonly payload: AuthMode) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingOverlayComponent.html":{"url":"components/LoadingOverlayComponent.html","title":"component - LoadingOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingOverlayComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/loading-overlay/src/loading-overlay.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                loading-overlay\n            \n\n            \n                styleUrls\n                loading-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loading-overlay.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor()\n                        \n                    \n                            \n                                \n                                    Defined in libs/loading-overlay/src/loading-overlay.component.ts:9\n                                \n                            \n    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            isLoading\n                        \n                        \n                                \n                                Type:    boolean\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/loading-overlay/src/loading-overlay.component.ts:9\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/loading-overlay/src/loading-overlay.component.ts:13\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'loading-overlay',\n  templateUrl: './loading-overlay.component.html',\n  styleUrls: ['./loading-overlay.component.scss']\n})\nexport class LoadingOverlayComponent implements OnInit {\n  @Input('isLoading') isLoading: boolean;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoadingOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoadingOverlayModule.html":{"url":"modules/LoadingOverlayModule.html","title":"module - LoadingOverlayModule","body":"\n                   \n\n\n\n\n  Modules\n  LoadingOverlayModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoadingOverlayModule\n\n\n\ncluster_LoadingOverlayModule_declarations\n\n\n\ncluster_LoadingOverlayModule_exports\n\n\n\n\nLoadingOverlayComponent\n\nLoadingOverlayComponent\n\n\n\nLoadingOverlayModule\n\nLoadingOverlayModule\n\nLoadingOverlayModule -->\n\nLoadingOverlayComponent->LoadingOverlayModule\n\n\n\n\n\nLoadingOverlayComponent \n\nLoadingOverlayComponent \n\nLoadingOverlayComponent  -->\n\nLoadingOverlayModule->LoadingOverlayComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/loading-overlay/src/loading-overlay.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoadingOverlayComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoadingOverlayComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingOverlayComponent } from './loading-overlay.component';\nimport { MatProgressBarModule } from '@angular/material';\n\n@NgModule({\n  imports: [MatProgressBarModule, CommonModule],\n  exports: [LoadingOverlayComponent],\n  declarations: [LoadingOverlayComponent]\n})\nexport class LoadingOverlayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Login.html":{"url":"classes/Login.html","title":"class - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Login\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/auth.actions.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                            Optional\n                                        payload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload?: literal type)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/auth/src/auth.actions.ts:8\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                literal type\n                                                                    \n                                                              \n                                                                \n                                                                        yes\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                            Optional\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     literal type\n            \n                                \n                            \n                                \n                                    \n                                        Type :     literal type\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/auth/src/auth.actions.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n\n\n\n\n\n    \n\n\n    \n        export enum AuthMode {\n  ImplicitFLow = 'ImplicitFLow',\n  PasswordFlow = 'ROPCFlow',\n  AuthorizationCodeFLow = 'AuthorizationCodeFLow'\n}\n\n//  Actions\nexport class Login {\n  constructor(public readonly payload?: { infoMsg?: string }) {}\n}\nexport class Logout {}\nexport class LoadProfile {\n  constructor(public payload: any) {}\n}\nexport class ChangeAuthMode {\n  constructor(public readonly payload: AuthMode) {}\n}\n\n// Mutation Actions\nexport class LoginSuccess {\n  constructor(public readonly payload: any) {}\n}\nexport class LoginCanceled {}\nexport class LogoutSuccess {}\nexport class ProfileLoaded {}\nexport class AuthModeChanged {\n  constructor(public readonly payload: AuthMode) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginCanceled.html":{"url":"classes/LoginCanceled.html","title":"class - LoginCanceled","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginCanceled\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/auth.actions.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum AuthMode {\n  ImplicitFLow = 'ImplicitFLow',\n  PasswordFlow = 'ROPCFlow',\n  AuthorizationCodeFLow = 'AuthorizationCodeFLow'\n}\n\n//  Actions\nexport class Login {\n  constructor(public readonly payload?: { infoMsg?: string }) {}\n}\nexport class Logout {}\nexport class LoadProfile {\n  constructor(public payload: any) {}\n}\nexport class ChangeAuthMode {\n  constructor(public readonly payload: AuthMode) {}\n}\n\n// Mutation Actions\nexport class LoginSuccess {\n  constructor(public readonly payload: any) {}\n}\nexport class LoginCanceled {}\nexport class LogoutSuccess {}\nexport class ProfileLoaded {}\nexport class AuthModeChanged {\n  constructor(public readonly payload: AuthMode) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginSuccess.html":{"url":"classes/LoginSuccess.html","title":"class - LoginSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginSuccess\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/auth.actions.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        payload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: any)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/auth/src/auth.actions.ts:20\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                any\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/auth/src/auth.actions.ts:21\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n\n\n\n\n\n    \n\n\n    \n        export enum AuthMode {\n  ImplicitFLow = 'ImplicitFLow',\n  PasswordFlow = 'ROPCFlow',\n  AuthorizationCodeFLow = 'AuthorizationCodeFLow'\n}\n\n//  Actions\nexport class Login {\n  constructor(public readonly payload?: { infoMsg?: string }) {}\n}\nexport class Logout {}\nexport class LoadProfile {\n  constructor(public payload: any) {}\n}\nexport class ChangeAuthMode {\n  constructor(public readonly payload: AuthMode) {}\n}\n\n// Mutation Actions\nexport class LoginSuccess {\n  constructor(public readonly payload: any) {}\n}\nexport class LoginCanceled {}\nexport class LogoutSuccess {}\nexport class ProfileLoaded {}\nexport class AuthModeChanged {\n  constructor(public readonly payload: AuthMode) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logout.html":{"url":"classes/Logout.html","title":"class - Logout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logout\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/auth.actions.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum AuthMode {\n  ImplicitFLow = 'ImplicitFLow',\n  PasswordFlow = 'ROPCFlow',\n  AuthorizationCodeFLow = 'AuthorizationCodeFLow'\n}\n\n//  Actions\nexport class Login {\n  constructor(public readonly payload?: { infoMsg?: string }) {}\n}\nexport class Logout {}\nexport class LoadProfile {\n  constructor(public payload: any) {}\n}\nexport class ChangeAuthMode {\n  constructor(public readonly payload: AuthMode) {}\n}\n\n// Mutation Actions\nexport class LoginSuccess {\n  constructor(public readonly payload: any) {}\n}\nexport class LoginCanceled {}\nexport class LogoutSuccess {}\nexport class ProfileLoaded {}\nexport class AuthModeChanged {\n  constructor(public readonly payload: AuthMode) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogoutSuccess.html":{"url":"classes/LogoutSuccess.html","title":"class - LogoutSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogoutSuccess\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/auth.actions.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum AuthMode {\n  ImplicitFLow = 'ImplicitFLow',\n  PasswordFlow = 'ROPCFlow',\n  AuthorizationCodeFLow = 'AuthorizationCodeFLow'\n}\n\n//  Actions\nexport class Login {\n  constructor(public readonly payload?: { infoMsg?: string }) {}\n}\nexport class Logout {}\nexport class LoadProfile {\n  constructor(public payload: any) {}\n}\nexport class ChangeAuthMode {\n  constructor(public readonly payload: AuthMode) {}\n}\n\n// Mutation Actions\nexport class LoginSuccess {\n  constructor(public readonly payload: any) {}\n}\nexport class LoginCanceled {}\nexport class LogoutSuccess {}\nexport class ProfileLoaded {}\nexport class AuthModeChanged {\n  constructor(public readonly payload: AuthMode) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialDateModule.html":{"url":"modules/MaterialDateModule.html","title":"module - MaterialDateModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialDateModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/material/src/material-date.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\nimport { MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatDateFormats, MatDatepickerModule } from '@angular/material';\n\nconst MODULE_EXPORTS = [MatMomentDateModule, MatDatepickerModule];\n\nconst DATE_FORMATS: MatDateFormats = {\n  parse: {\n    dateInput: 'LL'\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY'\n  }\n};\n\n@NgModule({\n  imports: MODULE_EXPORTS,\n  exports: MODULE_EXPORTS,\n  providers: [{ provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS }, { provide: MAT_DATE_LOCALE, useValue: 'en-GB' }]\n})\nexport class MaterialDateModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/material/src/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDividerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatStepperModule\n} from '@angular/material';\n\nconst MATERIAL_MODULES = [\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatSortModule,\n  MatTableModule,\n  MatStepperModule\n];\n\n@NgModule({\n  exports: MATERIAL_MODULES\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaQueryService.html":{"url":"injectables/MediaQueryService.html","title":"injectable - MediaQueryService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MediaQueryService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/default/src/app/core/services/mediareplay/media-replay.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Private\n                                        _changes$\n                                    \n                                    \n                                            Private\n                                        _lowerThanLarge\n                                    \n                                    \n                                            Private\n                                        _lowerThanMedium\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        changes$\n                                    \n                                    \n                                        isLowerThanMedium$\n                                    \n                                    \n                                        isLowerThanLarge$\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(media: ObservableMedia)\n                                \n                            \n                                    \n                                        \n                                            Defined in apps/default/src/app/core/services/mediareplay/media-replay.service.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                media\n                                                              \n                                                                    \n                                                                                ObservableMedia\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _changes$\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _changes$:     ReplaySubject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ReplaySubject\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : new ReplaySubject(1)\n                                    \n                                \n                                    \n                                        \n                                                Defined in apps/default/src/app/core/services/mediareplay/media-replay.service.ts:25\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _lowerThanLarge\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _lowerThanLarge:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : new ReplaySubject(1)\n                                    \n                                \n                                    \n                                        \n                                                Defined in apps/default/src/app/core/services/mediareplay/media-replay.service.ts:23\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _lowerThanMedium\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _lowerThanMedium:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : new ReplaySubject(1)\n                                    \n                                \n                                    \n                                        \n                                                Defined in apps/default/src/app/core/services/mediareplay/media-replay.service.ts:22\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    changes$\n                                \n                            \n            \n                            \n                                \n                                    getchanges$()\n                                \n                            \n                                        \n                                            \n                                                Defined in apps/default/src/app/core/services/mediareplay/media-replay.service.ts:27\n                                            \n                                        \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    isLowerThanMedium$\n                                \n                            \n            \n                            \n                                \n                                    getisLowerThanMedium$()\n                                \n                            \n                                        \n                                            \n                                                Defined in apps/default/src/app/core/services/mediareplay/media-replay.service.ts:31\n                                            \n                                        \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    isLowerThanLarge$\n                                \n                            \n            \n                            \n                                \n                                    getisLowerThanLarge$()\n                                \n                            \n                                        \n                                            \n                                                Defined in apps/default/src/app/core/services/mediareplay/media-replay.service.ts:35\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MediaChange, ObservableMedia } from '@angular/flex-layout';\nimport { Observable } from 'rxjs/Observable';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\n@Injectable()\nexport class MediaQueryService {\n  constructor(media: ObservableMedia) {\n    media\n      .asObservable()\n      .subscribe(res => this._changes$.next(res), err => this._changes$.error(err), () => this._changes$.complete());\n\n    this._changes$.subscribe(change => {\n      this._lowerThanMedium.next(change.mqAlias === 'xs' || change.mqAlias === 'sm');\n    });\n\n    this._changes$.subscribe(change => {\n      this._lowerThanLarge.next(change.mqAlias === 'xs' || change.mqAlias === 'sm' || change.mqAlias === 'md');\n    });\n  }\n\n  private _lowerThanMedium = new ReplaySubject(1);\n  private _lowerThanLarge = new ReplaySubject(1);\n\n  private _changes$: ReplaySubject = new ReplaySubject(1);\n\n  get changes$(): Observable {\n    return this._changes$.asObservable();\n  }\n\n  get isLowerThanMedium$(): Observable {\n    return this._lowerThanMedium.asObservable();\n  }\n\n  get isLowerThanLarge$(): Observable {\n    return this._lowerThanLarge.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/navigator/src/models/menu-item.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TreeNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        badge\n                                \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        tooltip\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n                Indexable\n                    \n                        \n                            \n                                \n                                    [key: string]:    any\n            \n                                \n                            \n                                    \n                                        \n                                            Defined in libs/navigator/src/models/menu-item.model.ts:18\n                                        \n                                    \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        badge\n                                    \n                                \n                                \n                                    \n                                        badge:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in libs/navigator/src/models/menu-item.model.ts:16\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in libs/navigator/src/models/menu-item.model.ts:18\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in libs/navigator/src/models/menu-item.model.ts:14\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in libs/navigator/src/models/menu-item.model.ts:15\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in libs/navigator/src/models/menu-item.model.ts:12\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                    \n                                \n                                \n                                    \n                                        tooltip:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in libs/navigator/src/models/menu-item.model.ts:17\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     MenuItemType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItemType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in libs/navigator/src/models/menu-item.model.ts:13\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { TreeNode } from '@nx-starter-kit/tree';\n\nexport enum MenuItemType {\n  Link = 'link',\n  DropDown = 'dropDown',\n  Icon = 'icon',\n  Separator = 'separator',\n  ExtLink = 'extLink'\n}\n\nexport interface MenuItem extends TreeNode {\n  name: string; // Used as display text for item and title for separator type\n  type?: MenuItemType; // Possible values: link/dropDown/icon/separator/extLink\n  icon?: string; // Item icon name\n  link?: string; // Router state\n  badge?: { value: number; color?: string };\n  tooltip?: string; // Tooltip text\n  disabled?: boolean; // If true, item will not be appeared in sidenav.\n  [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuItemComponent.html":{"url":"components/MenuItemComponent.html","title":"component - MenuItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuItemComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/sidenav/src/components/menu-item/menu-item.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nxtk-menu-item\n            \n\n            \n                styleUrls\n                menu-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-item.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chechForChildMenu\n                            \n                            \n                                getHeight\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openLink\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iconOnly\n                            \n                            \n                                item\n                            \n                            \n                                secondaryMenu\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor()\n                        \n                    \n                            \n                                \n                                    Defined in libs/sidenav/src/components/menu-item/menu-item.component.ts:12\n                                \n                            \n    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            iconOnly\n                        \n                        \n                                \n                                Type:    boolean\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/sidenav/src/components/menu-item/menu-item.component.ts:11\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            item\n                        \n                        \n                                \n                                Type:    MenuItem\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/sidenav/src/components/menu-item/menu-item.component.ts:10\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            secondaryMenu\n                        \n                        \n                            \n                                Default value: false\n                            \n                        \n                    \n                            \n                                \n                                        Defined in libs/sidenav/src/components/menu-item/menu-item.component.ts:12\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                chechForChildMenu\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    chechForChildMenu()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/sidenav/src/components/menu-item/menu-item.component.ts:31\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     boolean\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                getHeight\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    getHeight()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/sidenav/src/components/menu-item/menu-item.component.ts:21\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     string\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/sidenav/src/components/menu-item/menu-item.component.ts:16\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                openLink\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    openLink()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/sidenav/src/components/menu-item/menu-item.component.ts:18\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { MenuItem } from '@nx-starter-kit/navigator';\n\n@Component({\n  selector: 'nxtk-menu-item',\n  templateUrl: './menu-item.component.html',\n  styleUrls: ['./menu-item.component.scss']\n})\nexport class MenuItemComponent implements OnInit {\n  @Input('item') item: MenuItem;\n  @Input() iconOnly: boolean;\n  @Input() secondaryMenu = false;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  openLink() {\n    this.item.open = this.item.open;\n  }\n  getHeight() {\n    if (this.item.open === false) return '48px';\n    else {\n      if (this.item && this.item.children) {\n        const height = this.item.children.length * 56 + 56 + 'px';\n        return height;\n      }\n    }\n  }\n\n  chechForChildMenu() {\n    return !!(this.item && this.item.children);\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{item.icon}} \n    {{ item.name }} \n    \n      {{item?.badge?.value}} \n    \n     expand_more\n  \n\n  \n    {{item.icon}} \n    {{ item.name }} \n  \n\n   \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{item.icon}}     {{ item.name }}           {{item?.badge?.value}}          expand_more        {{item.icon}}     {{ item.name }}      '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuStateModel.html":{"url":"interfaces/MenuStateModel.html","title":"interface - MenuStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuStateModel\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/navigator/src/state/menu.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentlyOpened\n                                \n                                \n                                        iconMode\n                                \n                                \n                                        tree\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentlyOpened\n                                    \n                                \n                                \n                                    \n                                        currentlyOpened:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in libs/navigator/src/state/menu.state.ts:28\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconMode\n                                    \n                                \n                                \n                                    \n                                        iconMode:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in libs/navigator/src/state/menu.state.ts:29\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tree\n                                    \n                                \n                                \n                                    \n                                        tree:     Tree\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Tree\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in libs/navigator/src/state/menu.state.ts:27\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Action, Selector, State, StateContext, Store } from '@ngxs/store';\nimport { MenuItem } from '../models/menu-item.model';\nimport { MenuService } from '../services/menu.service';\nimport { Tree } from '@nx-starter-kit/tree';\n\nexport class InitializeData {\n  constructor(public readonly payload: Tree) {}\n}\n\nexport class NextCurrentlyOpened {\n  constructor(public readonly payload: MenuItem[]) {}\n}\n\nexport class SetIconMode {\n  constructor(public readonly payload: boolean) {}\n}\n\nexport class ToggleCurrentlyOpened {\n  constructor(public readonly payload: MenuItem) {}\n}\n\nexport class ToggleCurrentlyOpenedByRoute {\n  constructor(public readonly payload: string) {}\n}\n\nexport interface MenuStateModel {\n  tree: Tree;\n  currentlyOpened: MenuItem[];\n  iconMode: boolean;\n}\n\n@State({\n  name: 'menu',\n  defaults: {\n    tree: null,\n    currentlyOpened: [],\n    iconMode: false\n  }\n})\nexport class MenuState {\n  constructor(private store: Store, private menuService: MenuService) {\n    const _tree = menuService.tree;\n    setTimeout(() => {\n      this.store.dispatch(new InitializeData(_tree));\n    });\n  }\n\n  @Selector()\n  static menuItems(state: MenuStateModel) {\n    return state.tree.root.children;\n  }\n\n  @Selector()\n  static currentlyOpened(state: MenuStateModel) {\n    if (state.iconMode) {\n      return [];\n    } else {\n      return state.currentlyOpened;\n    }\n  }\n\n  private getParents(tree, item: MenuItem): MenuItem[] {\n    const ancestors = tree.getAllParents(item);\n    ancestors.shift();\n    return ancestors;\n  }\n\n  @Action(InitializeData)\n  initializeData({ setState }: StateContext, { payload }: InitializeData) {\n    setState({\n      tree: payload,\n      currentlyOpened: [],\n      iconMode: false\n    });\n  }\n\n  @Action(SetIconMode)\n  setIconMode({ getState, patchState }: StateContext, { payload }: SetIconMode) {\n    patchState({\n      iconMode: payload\n    });\n  }\n\n  @Action(NextCurrentlyOpened)\n  nextCurrentlyOpened({ getState, patchState }: StateContext, { payload }: NextCurrentlyOpened) {\n    patchState({\n      currentlyOpened: payload\n    });\n  }\n\n  @Action(ToggleCurrentlyOpened)\n  toggleCurrentlyOpened({ getState, patchState }: StateContext, { payload }: ToggleCurrentlyOpened) {\n    let { tree, currentlyOpened } = getState();\n    const isOpen = currentlyOpened.indexOf(payload) !== -1;\n\n    if (isOpen) {\n      if (currentlyOpened.length > 1) {\n        currentlyOpened.length = currentlyOpened.indexOf(payload);\n      } else {\n        currentlyOpened = [];\n      }\n    } else {\n      currentlyOpened = this.getParents(tree, payload);\n    }\n\n    patchState({\n      currentlyOpened: currentlyOpened\n    });\n  }\n\n  @Action(ToggleCurrentlyOpenedByRoute)\n  toggleCurrentlyOpenedByRoute(\n    { getState, patchState }: StateContext,\n    { payload }: ToggleCurrentlyOpenedByRoute\n  ) {\n    const { tree } = getState();\n    let currentlyOpened: MenuItem[] = [];\n\n    const item = tree.findByPredicateBFS(node => {\n      return node.link === payload;\n    });\n\n    if (item && item.parent) {\n      currentlyOpened = this.getParents(tree, item);\n    } else if (item) {\n      currentlyOpened = [item];\n    }\n\n    patchState({\n      currentlyOpened: currentlyOpened\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MinValidatorDirective.html":{"url":"directives/MinValidatorDirective.html","title":"directive - MinValidatorDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  MinValidatorDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/directives/min/min.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , : , : true }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [appMin],[formControlName],[formControl],[ngModel]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        validate\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        min\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    min\n                                \n                                \n                                        \n                                        Type:    number\n            \n                                        \n                                \n                            \n                                    \n                                        \n                                                Defined in libs/shared/src/directives/min/min.directive.ts:10\n                                        \n                                    \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        validate\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            validate(control: AbstractControl)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in libs/shared/src/directives/min/min.directive.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                control\n                                                                \n                                                                    \n                                                                                AbstractControl\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     literal type\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { NG_VALIDATORS, AbstractControl, Validator, Validators } from '@angular/forms';\n\n@Directive({\n  selector: '[appMin],[formControlName],[formControl],[ngModel]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: MinValidatorDirective, multi: true }],\n  exportAs: 'min'\n})\nexport class MinValidatorDirective implements Validator {\n  @Input() min: number;\n\n  validate(control: AbstractControl): { [key: string]: any } {\n    return this.min ? Validators.min(this.min)(control) : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyHammerConfig.html":{"url":"classes/MyHammerConfig.html","title":"class - MyHammerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyHammerConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/experiments/src/experiments.module.ts\n        \n\n\n            \n                Extends\n            \n            \n                    HammerGestureConfig\n            \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        overrides\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        overrides\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    overrides:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : {\n                // override hammerjs default configuration\n                swipe: { direction: Hammer.DIRECTION_ALL }\n              }\n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/experiments/src/experiments.module.ts:13\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '@nx-starter-kit/shared';\nimport { ExperimentsComponent } from './containers/experiments/experiments.component';\nimport { HammerCardComponent } from './components/hammer-card/hammer-card.component';\nimport { HammertimeDirective } from './components/hammertime/hammertime.directive';\n\nimport * as Hammer from 'hammerjs';\n\nimport { HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\n\nexport class MyHammerConfig extends HammerGestureConfig {\n  overrides = {\n    // override hammerjs default configuration\n    swipe: { direction: Hammer.DIRECTION_ALL }\n  };\n}\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      /* {path: '', pathMatch: 'full', component: InsertYourComponentHere} */\n      { path: '', redirectTo: 'experiments1', pathMatch: 'full', data: { animation: 'experiments' } },\n      {\n        path: 'experiments1',\n        component: ExperimentsComponent,\n        data: { animation: 'experiments1' }\n      },\n      {\n        path: 'experiment2',\n        component: ExperimentsComponent,\n        data: { animation: 'experiment2' }\n      },\n      {\n        path: 'experiment3',\n        component: ExperimentsComponent,\n        data: { animation: 'experiment3' }\n      }\n    ])\n  ],\n  providers: [\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: MyHammerConfig\n    }\n  ],\n  declarations: [ExperimentsComponent, HammerCardComponent, HammertimeDirective]\n})\nexport class ExperimentsModule {}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NavigatorModule.html":{"url":"modules/NavigatorModule.html","title":"module - NavigatorModule","body":"\n                   \n\n\n\n\n  Modules\n  NavigatorModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/navigator/src/navigator.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MenuService } from './services/menu.service';\nimport { MenuItem } from './models/menu-item.model';\nimport { MENU_ITEMS } from './symbols';\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class NavigatorModule {\n  static forRoot(menuItems: MenuItem[]): ModuleWithProviders {\n    return {\n      ngModule: NavigatorModule,\n      providers: [\n        MenuService,\n        {provide: MENU_ITEMS, useValue: menuItems }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NextCurrentlyOpened.html":{"url":"classes/NextCurrentlyOpened.html","title":"class - NextCurrentlyOpened","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  NextCurrentlyOpened\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/navigator/src/state/menu.state.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        payload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: MenuItem[])\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/navigator/src/state/menu.state.ts:10\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                MenuItem[]\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     MenuItem[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     MenuItem[]\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/navigator/src/state/menu.state.ts:11\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action, Selector, State, StateContext, Store } from '@ngxs/store';\nimport { MenuItem } from '../models/menu-item.model';\nimport { MenuService } from '../services/menu.service';\nimport { Tree } from '@nx-starter-kit/tree';\n\nexport class InitializeData {\n  constructor(public readonly payload: Tree) {}\n}\n\nexport class NextCurrentlyOpened {\n  constructor(public readonly payload: MenuItem[]) {}\n}\n\nexport class SetIconMode {\n  constructor(public readonly payload: boolean) {}\n}\n\nexport class ToggleCurrentlyOpened {\n  constructor(public readonly payload: MenuItem) {}\n}\n\nexport class ToggleCurrentlyOpenedByRoute {\n  constructor(public readonly payload: string) {}\n}\n\nexport interface MenuStateModel {\n  tree: Tree;\n  currentlyOpened: MenuItem[];\n  iconMode: boolean;\n}\n\n@State({\n  name: 'menu',\n  defaults: {\n    tree: null,\n    currentlyOpened: [],\n    iconMode: false\n  }\n})\nexport class MenuState {\n  constructor(private store: Store, private menuService: MenuService) {\n    const _tree = menuService.tree;\n    setTimeout(() => {\n      this.store.dispatch(new InitializeData(_tree));\n    });\n  }\n\n  @Selector()\n  static menuItems(state: MenuStateModel) {\n    return state.tree.root.children;\n  }\n\n  @Selector()\n  static currentlyOpened(state: MenuStateModel) {\n    if (state.iconMode) {\n      return [];\n    } else {\n      return state.currentlyOpened;\n    }\n  }\n\n  private getParents(tree, item: MenuItem): MenuItem[] {\n    const ancestors = tree.getAllParents(item);\n    ancestors.shift();\n    return ancestors;\n  }\n\n  @Action(InitializeData)\n  initializeData({ setState }: StateContext, { payload }: InitializeData) {\n    setState({\n      tree: payload,\n      currentlyOpened: [],\n      iconMode: false\n    });\n  }\n\n  @Action(SetIconMode)\n  setIconMode({ getState, patchState }: StateContext, { payload }: SetIconMode) {\n    patchState({\n      iconMode: payload\n    });\n  }\n\n  @Action(NextCurrentlyOpened)\n  nextCurrentlyOpened({ getState, patchState }: StateContext, { payload }: NextCurrentlyOpened) {\n    patchState({\n      currentlyOpened: payload\n    });\n  }\n\n  @Action(ToggleCurrentlyOpened)\n  toggleCurrentlyOpened({ getState, patchState }: StateContext, { payload }: ToggleCurrentlyOpened) {\n    let { tree, currentlyOpened } = getState();\n    const isOpen = currentlyOpened.indexOf(payload) !== -1;\n\n    if (isOpen) {\n      if (currentlyOpened.length > 1) {\n        currentlyOpened.length = currentlyOpened.indexOf(payload);\n      } else {\n        currentlyOpened = [];\n      }\n    } else {\n      currentlyOpened = this.getParents(tree, payload);\n    }\n\n    patchState({\n      currentlyOpened: currentlyOpened\n    });\n  }\n\n  @Action(ToggleCurrentlyOpenedByRoute)\n  toggleCurrentlyOpenedByRoute(\n    { getState, patchState }: StateContext,\n    { payload }: ToggleCurrentlyOpenedByRoute\n  ) {\n    const { tree } = getState();\n    let currentlyOpened: MenuItem[] = [];\n\n    const item = tree.findByPredicateBFS(node => {\n      return node.link === payload;\n    });\n\n    if (item && item.parent) {\n      currentlyOpened = this.getParents(tree, item);\n    } else if (item) {\n      currentlyOpened = [item];\n    }\n\n    patchState({\n      currentlyOpened: currentlyOpened\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgLetContext.html":{"url":"classes/NgLetContext.html","title":"class - NgLetContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgLetContext\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/directives/ng-let.directive.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        $implicit\n                                    \n                                    \n                                        ngLet\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        $implicit\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    $implicit:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : null\n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/shared/src/directives/ng-let.directive.ts:4\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        ngLet\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    ngLet:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : null\n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/shared/src/directives/ng-let.directive.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { NgModule, Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\nexport class NgLetContext {\n  $implicit: any = null;\n  ngLet: any = null;\n}\n\n@Directive({\n  selector: '[ngLet]'\n})\nexport class NgLetDirective {\n  private _context = new NgLetContext();\n\n  @Input()\n  set ngLet(value: any) {\n    this._context.$implicit = this._context.ngLet = value;\n  }\n\n  constructor(_vcr: ViewContainerRef, _templateRef: TemplateRef) {\n    _vcr.createEmbeddedView(_templateRef, this._context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgLetDirective.html":{"url":"directives/NgLetDirective.html","title":"directive - NgLetDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  NgLetDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/directives/ng-let.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ngLet]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Private\n                                        _context\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        ngLet\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        ngLet\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(_vcr: ViewContainerRef, _templateRef: TemplateRef)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/shared/src/directives/ng-let.directive.ts:17\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                _vcr\n                                                              \n                                                                    \n                                                                                ViewContainerRef\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                _templateRef\n                                                              \n                                                                    \n                                                                                TemplateRef\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    ngLet\n                                \n                                \n                                        \n                                        Type:    any\n            \n                                        \n                                \n                            \n                                    \n                                        \n                                                Defined in libs/shared/src/directives/ng-let.directive.ts:15\n                                        \n                                    \n                        \n                    \n            \n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _context\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _context:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : new NgLetContext()\n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/shared/src/directives/ng-let.directive.ts:12\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    ngLet\n                                \n                            \n            \n            \n                            \n                                \n                                    setngLet(value: any)\n                                \n                            \n                                        \n                                            \n                                                Defined in libs/shared/src/directives/ng-let.directive.ts:15\n                                            \n                                        \n                                \n                                    \n            \n                                            \n                                                    Parameters :\n                                                    \n                                                        \n                                                            \n                                                                Name\n                                                                    Type\n                                                                Optional\n                                                            \n                                                        \n                                                        \n                                                                \n                                                                    value\n                                                                \n                                                                        \n                                                                                    any\n                                                                        \n                                                                \n                                                                    \n                                                                            no\n                                                                    \n                                                                    \n                                                                \n                                                        \n                                                    \n                                            \n                                            \n                                            \n                                            \n                                                Returns :     void\n            \n                                            \n                                    \n                                \n                        \n                    \n            \n\n    \n\n\n    \n        import { NgModule, Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\nexport class NgLetContext {\n  $implicit: any = null;\n  ngLet: any = null;\n}\n\n@Directive({\n  selector: '[ngLet]'\n})\nexport class NgLetDirective {\n  private _context = new NgLetContext();\n\n  @Input()\n  set ngLet(value: any) {\n    this._context.$implicit = this._context.ngLet = value;\n  }\n\n  constructor(_vcr: ViewContainerRef, _templateRef: TemplateRef) {\n    _vcr.createEmbeddedView(_templateRef, this._context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/not-found/src/containers/not-found/not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                not-found\n            \n\n            \n                styleUrls\n                not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(renderer: Renderer2)\n                        \n                    \n                            \n                                \n                                    Defined in libs/not-found/src/containers/not-found/not-found.component.ts:8\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        renderer\n                                                      \n                                                            \n                                                                        Renderer2\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnDestroy\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnDestroy()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/not-found/src/containers/not-found/not-found.component.ts:14\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/not-found/src/containers/not-found/not-found.component.ts:11\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit, OnDestroy {\n  constructor(private renderer: Renderer2) {}\n\n  ngOnInit() {\n    this.renderer.removeClass(document.body, 'mat-typography');\n  }\n  ngOnDestroy(): void {\n    this.renderer.addClass(document.body, 'mat-typography');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      error\n      \n        404\n        Page Not Found!\n      \n    \n\n    \n      Back to Dashboard\n      Report this Problem\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            error              404        Page Not Found!                    Back to Dashboard      Report this Problem      '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotFoundModule.html":{"url":"modules/NotFoundModule.html","title":"module - NotFoundModule","body":"\n                   \n\n\n\n\n  Modules\n  NotFoundModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotFoundModule\n\n\n\ncluster_NotFoundModule_declarations\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\n\n\nNotFoundModule\n\nNotFoundModule\n\nNotFoundModule -->\n\nNotFoundComponent->NotFoundModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/not-found/src/not-found.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NotFoundComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { NotFoundComponent } from './containers/not-found/not-found.component';\nimport { MatButtonModule, MatIconModule } from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n\n    RouterModule.forChild([\n      /* {path: '', pathMatch: 'full', component: InsertYourComponentHere} */\n      { path: '', component: NotFoundComponent }\n    ])\n  ],\n  declarations: [NotFoundComponent]\n})\nexport class NotFoundModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/toolbar/src/components/notifications/notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nxtk-notifications\n            \n\n            \n                styleUrls\n                notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClickOutside\n                            \n                            \n                                select\n                            \n                            \n                                toggleDropdown\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor()\n                        \n                    \n                            \n                                \n                                    Defined in libs/toolbar/src/components/notifications/notifications.component.ts:10\n                                \n                            \n    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            notifications\n                        \n                        \n                            \n                                Default value: []\n                            \n                        \n                    \n                            \n                                \n                                        Defined in libs/toolbar/src/components/notifications/notifications.component.ts:9\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                delete\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    delete(notification: )\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/toolbar/src/components/notifications/notifications.component.ts:26\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        notification\n                                                        \n                                                        \n                                                        \n                                                                no\n                                                        \n                                                        \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/toolbar/src/components/notifications/notifications.component.ts:14\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                onClickOutside\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    onClickOutside()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/toolbar/src/components/notifications/notifications.component.ts:20\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                select\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    select()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/toolbar/src/components/notifications/notifications.component.ts:24\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                toggleDropdown\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    toggleDropdown()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/toolbar/src/components/notifications/notifications.component.ts:16\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                isOpen\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            isOpen:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                        Defined in libs/toolbar/src/components/notifications/notifications.component.ts:10\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'nxtk-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n  @Input() notifications = [];\n  isOpen: boolean;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  toggleDropdown() {\n    this.isOpen = !this.isOpen;\n  }\n\n  onClickOutside() {\n    this.isOpen = false;\n  }\n\n  select() {}\n\n  delete(notification) {}\n}\n\n    \n\n    \n        \n\n  \n     0;then withBadge else withOutBadge\">\n  \n\n  \n    \n      \n        \n          Notifications\n          You have {{notifications?.length}} new notifications.\n        \n        \n          settings\n        \n      \n      \n      \n        Mark all as read\n      \n    \n  \n\n\n\n\n  notifications_active\n\nnotifications_none\n\n\n  \n    \n      \n        {{ notification.icon }}\n        \n          {{ notification.title }}\n          {{ notification.lastTime }}\n        \n        \n        \n          close\n        \n      \n      \n    \n  \n\n\n  Sumo\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       0;then withBadge else withOutBadge\">                                Notifications          You have {{notifications?.length}} new notifications.                          settings                                  Mark all as read              notifications_activenotifications_none                    {{ notification.icon }}                  {{ notification.title }}          {{ notification.lastTime }}                                  close                            Sumo'\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NxPipesModule.html":{"url":"modules/NxPipesModule.html","title":"module - NxPipesModule","body":"\n                   \n\n\n\n\n  Modules\n  NxPipesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NxPipesModule\n\n\n\ncluster_NxPipesModule_declarations\n\n\n\ncluster_NxPipesModule_exports\n\n\n\n\nCharactersPipe\n\nCharactersPipe\n\n\n\nNxPipesModule\n\nNxPipesModule\n\nNxPipesModule -->\n\nCharactersPipe->NxPipesModule\n\n\n\n\n\nWordsPipe\n\nWordsPipe\n\nNxPipesModule -->\n\nWordsPipe->NxPipesModule\n\n\n\n\n\nCharactersPipe \n\nCharactersPipe \n\nCharactersPipe  -->\n\nNxPipesModule->CharactersPipe \n\n\n\n\n\nWordsPipe \n\nWordsPipe \n\nWordsPipe  -->\n\nNxPipesModule->WordsPipe \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/nx-pipes/src/nx-pipes.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CharactersPipe\n                            \n                            \n                                WordsPipe\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CharactersPipe\n                            \n                            \n                                    WordsPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CharactersPipe } from './truncate/characters.pipe';\nimport { WordsPipe } from './truncate/words.pipe';\n\nexport const TRUNCATE_PIPES = [CharactersPipe, WordsPipe];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TRUNCATE_PIPES],\n  exports: [TRUNCATE_PIPES]\n})\nexport class NxPipesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewComponent.html":{"url":"components/OverviewComponent.html","title":"component - OverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/dashboard/src/containers/overview/overview.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nxtk-overview\n            \n\n            \n                styleUrls\n                overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                crumbs\n                            \n                            \n                                isLoggedIn$\n                            \n                            \n                                profile$\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(oauthService: OAuthService)\n                        \n                    \n                            \n                                \n                                    Defined in libs/dashboard/src/containers/overview/overview.component.ts:16\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        oauthService\n                                                      \n                                                            \n                                                                        OAuthService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/dashboard/src/containers/overview/overview.component.ts:19\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                crumbs\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            crumbs:     Crumb[]\n    \n                        \n                    \n                        \n                            \n                                Type :     Crumb[]\n    \n                            \n                        \n                        \n                            \n                                Default value : [{ name: 'Dashboard', link: '/dashboard' }]\n                            \n                        \n                            \n                                \n                                        Defined in libs/dashboard/src/containers/overview/overview.component.ts:16\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                isLoggedIn$\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            isLoggedIn$:     Observable\n    \n                        \n                    \n                        \n                            \n                                Type :     Observable\n    \n                            \n                        \n                        \n                            \n                                Decorators : Select\n                            \n                        \n                            \n                                \n                                        Defined in libs/dashboard/src/containers/overview/overview.component.ts:14\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                profile$\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            profile$:     Observable\n    \n                        \n                    \n                        \n                            \n                                Type :     Observable\n    \n                            \n                        \n                        \n                            \n                                Decorators : Select\n                            \n                        \n                            \n                                \n                                        Defined in libs/dashboard/src/containers/overview/overview.component.ts:15\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { AuthState } from '@nx-starter-kit/auth';\nimport { Crumb } from '@nx-starter-kit/breadcrumbs';\n\n@Component({\n  selector: 'nxtk-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n  @Select(AuthState.isLoggedIn) isLoggedIn$: Observable;\n  @Select(AuthState.profile) profile$: Observable;\n  crumbs: Crumb[] = [{ name: 'Dashboard', link: '/dashboard' }];\n  constructor(private oauthService: OAuthService) {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        -->\nOverview-->\n-->\n\n\n-->\n  -->\n    Search-->\n\n    -->\n      -->\n        -->\n      -->\n    -->\n\n    Search-->\n  -->\n-->\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->Overview-->-->-->  -->    Search-->    -->      -->        -->      -->    -->    Search-->  -->-->'\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'OverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PageTitleService.html":{"url":"injectables/PageTitleService.html","title":"injectable - PageTitleService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PageTitleService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/default/src/app/core/services/page-title/page-title.service.ts\n        \n\n            \n                Description\n            \n            \n                Service responsible for setting the title that appears above the home and dashboard pages.\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        _title\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        title\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(bodyTitle: Title)\n                                \n                            \n                                    \n                                        \n                                            Defined in apps/default/src/app/core/services/page-title/page-title.service.ts:21\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                bodyTitle\n                                                              \n                                                                    \n                                                                                Title\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        _title\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _title:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : ''\n                                    \n                                \n                                    \n                                        \n                                                Defined in apps/default/src/app/core/services/page-title/page-title.service.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    title\n                                \n                            \n            \n                            \n                                \n                                    gettitle()\n                                \n                            \n                                        \n                                            \n                                                Defined in apps/default/src/app/core/services/page-title/page-title.service.ts:11\n                                            \n                                        \n            \n                            \n                                \n                                    settitle(title: string)\n                                \n                            \n                                        \n                                            \n                                                Defined in apps/default/src/app/core/services/page-title/page-title.service.ts:15\n                                            \n                                        \n                                \n                                    \n            \n                                            \n                                                    Parameters :\n                                                    \n                                                        \n                                                            \n                                                                Name\n                                                                    Type\n                                                                Optional\n                                                            \n                                                        \n                                                        \n                                                                \n                                                                    title\n                                                                \n                                                                        \n                                                                                    string\n                                                                        \n                                                                \n                                                                    \n                                                                            no\n                                                                    \n                                                                    \n                                                                \n                                                        \n                                                    \n                                            \n                                            \n                                            \n                                            \n                                                Returns :     void\n            \n                                            \n                                    \n                                \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n/**\n * Service responsible for setting the title that appears above the home and dashboard pages.\n */\n@Injectable()\nexport class PageTitleService {\n  _title = '';\n\n  get title(): string {\n    return this._title;\n  }\n\n  set title(title: string) {\n    this._title = title;\n    if (title !== '') {\n      title = `${title} | `;\n    }\n    this.bodyTitle.setTitle(`${title}IS360`);\n  }\n\n  constructor(private bodyTitle: Title) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileLoaded.html":{"url":"classes/ProfileLoaded.html","title":"class - ProfileLoaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileLoaded\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/auth.actions.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum AuthMode {\n  ImplicitFLow = 'ImplicitFLow',\n  PasswordFlow = 'ROPCFlow',\n  AuthorizationCodeFLow = 'AuthorizationCodeFLow'\n}\n\n//  Actions\nexport class Login {\n  constructor(public readonly payload?: { infoMsg?: string }) {}\n}\nexport class Logout {}\nexport class LoadProfile {\n  constructor(public payload: any) {}\n}\nexport class ChangeAuthMode {\n  constructor(public readonly payload: AuthMode) {}\n}\n\n// Mutation Actions\nexport class LoginSuccess {\n  constructor(public readonly payload: any) {}\n}\nexport class LoginCanceled {}\nexport class LogoutSuccess {}\nexport class ProfileLoaded {}\nexport class AuthModeChanged {\n  constructor(public readonly payload: AuthMode) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuickpanelComponent.html":{"url":"components/QuickpanelComponent.html","title":"component - QuickpanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuickpanelComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/quickpanel/src/quickpanel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nxtk-quickpanel\n            \n\n            \n                styleUrls\n                quickpanel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quickpanel.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                events\n                            \n                            \n                                messages\n                            \n                            \n                                today\n                            \n                            \n                                todolists\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor()\n                        \n                    \n                            \n                                \n                                    Defined in libs/quickpanel/src/quickpanel.component.ts:69\n                                \n                            \n    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/quickpanel/src/quickpanel.component.ts:73\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                events\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            events:     []\n    \n                        \n                    \n                        \n                            \n                                Type :     []\n    \n                            \n                        \n                        \n                            \n                                Default value : [\n        {\n          id: 'id',\n          title: 'Business Meeting',\n          time: '05:00 PM',\n          state: 'state'\n        },\n        {\n          id: 'id',\n          title: 'Ask for a Vacation',\n          time: '05:00 PM',\n          state: 'state'\n        },\n        {\n          id: 'id',\n          title: 'Dinner with Micheal',\n          time: '05:00 PM',\n          state: 'state'\n        },\n        {\n          id: 'id',\n          title: 'Deadline for Project ABC',\n          time: '05:00 PM',\n          state: 'state'\n        }\n      ]\n                            \n                        \n                            \n                                \n                                        Defined in libs/quickpanel/src/quickpanel.component.ts:12\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                messages\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            messages:     []\n    \n                        \n                    \n                        \n                            \n                                Type :     []\n    \n                            \n                        \n                        \n                            \n                                Default value : [\n        { from: 'Catherin', img: 'assets/img/avatars/1.png', subject: 'Shopping', content: 'hi there??' },\n        { from: 'Jack', img: 'assets/img/avatars/5.png', subject: 'Function', content: 'yes' },\n        { from: 'Karina', img: 'assets/img/avatars/8.png', subject: 'Get together', content: 'nice' },\n        { from: 'Micheal', img: 'assets/img/avatars/11.png', subject: 'Trip', content: 'ya.. I will' },\n        { from: 'Ashik', img: 'assets/img/avatars/15.png', subject: 'Meeting', content: 'Time??' },\n        { from: 'Joy', img: 'assets/img/avatars/10.png', subject: 'Party', content: 'Lets enjoy' }\n      ]\n                            \n                        \n                            \n                                \n                                        Defined in libs/quickpanel/src/quickpanel.component.ts:62\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                today\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            today:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : Date.now()\n                            \n                        \n                            \n                                \n                                        Defined in libs/quickpanel/src/quickpanel.component.ts:10\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                todolists\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            todolists:     []\n    \n                        \n                    \n                        \n                            \n                                Type :     []\n    \n                            \n                        \n                        \n                            \n                                Default value : [\n        {\n          id: 'id',\n          title: 'Get to know Angular more',\n          time: 'Added:4 days ago'\n        },\n        {\n          id: 'id',\n          title: 'Configure new Router',\n          time: 'Added:4 days ago'\n        },\n        {\n          id: 'id',\n          title: 'Invite Joy to play Carroms',\n          time: 'Added:4 days ago'\n        },\n        {\n          id: 'id',\n          title: 'Check SRS of Project X',\n          time: 'Added:4 days ago'\n        }\n      ]\n                            \n                        \n                            \n                                \n                                        Defined in libs/quickpanel/src/quickpanel.component.ts:39\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'nxtk-quickpanel',\n  templateUrl: './quickpanel.component.html',\n  styleUrls: ['./quickpanel.component.scss']\n})\nexport class QuickpanelComponent implements OnInit {\n  today: number = Date.now();\n\n  events = [\n    {\n      id: 'id',\n      title: 'Business Meeting',\n      time: '05:00 PM',\n      state: 'state'\n    },\n    {\n      id: 'id',\n      title: 'Ask for a Vacation',\n      time: '05:00 PM',\n      state: 'state'\n    },\n    {\n      id: 'id',\n      title: 'Dinner with Micheal',\n      time: '05:00 PM',\n      state: 'state'\n    },\n    {\n      id: 'id',\n      title: 'Deadline for Project ABC',\n      time: '05:00 PM',\n      state: 'state'\n    }\n  ];\n\n  todolists = [\n    {\n      id: 'id',\n      title: 'Get to know Angular more',\n      time: 'Added:4 days ago'\n    },\n    {\n      id: 'id',\n      title: 'Configure new Router',\n      time: 'Added:4 days ago'\n    },\n    {\n      id: 'id',\n      title: 'Invite Joy to play Carroms',\n      time: 'Added:4 days ago'\n    },\n    {\n      id: 'id',\n      title: 'Check SRS of Project X',\n      time: 'Added:4 days ago'\n    }\n  ];\n\n  messages = [\n    { from: 'Catherin', img: 'assets/img/avatars/1.png', subject: 'Shopping', content: 'hi there??' },\n    { from: 'Jack', img: 'assets/img/avatars/5.png', subject: 'Function', content: 'yes' },\n    { from: 'Karina', img: 'assets/img/avatars/8.png', subject: 'Get together', content: 'nice' },\n    { from: 'Micheal', img: 'assets/img/avatars/11.png', subject: 'Trip', content: 'ya.. I will' },\n    { from: 'Ashik', img: 'assets/img/avatars/15.png', subject: 'Meeting', content: 'Time??' },\n    { from: 'Joy', img: 'assets/img/avatars/10.png', subject: 'Party', content: 'Lets enjoy' }\n  ];\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n\n    \n\n      \n        \n        {{today | date:'shortTime'}}\n        {{today | date:'EEEE'}}, {{today | date:'MMMM'}} {{today | date:'dd'}}\n        \n      \n\n\n      \n\n      Upcoming Events\n      \n        \n          \n            \n              \n                {{ event.title }}\n                {{ event.time }}\n              \n            \n          \n        \n      \n\n\n\n      \n\n      \n        Todo-List\n        \n          \n            \n              \n                {{ todolist.title }}\n                {{ todolist.time }}\n              \n            \n          \n        \n      \n\n      \n\n\n    \n  \n\n  \n    \n      \n        Friends\n\n        \n          \n            \n             {{message.from}} \n            \n               {{message.subject}} \n               -- {{message.content}} \n            \n          \n        \n\n      \n    \n\n  \n\n\n\n\n\n  \n    Server Statistics\n    \n      \n        CPU Load\n        >\n      \n    \n\n\n    \n      \n        RAM Usage\n        \n      \n    \n\n\n    \n      \n        CPU Temp\n        \n      \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{today | date:\\'shortTime\\'}}        {{today | date:\\'EEEE\\'}}, {{today | date:\\'MMMM\\'}} {{today | date:\\'dd\\'}}                          Upcoming Events                                                                  {{ event.title }}                {{ event.time }}                                                                      Todo-List                                                            {{ todolist.title }}                {{ todolist.time }}                                                                                  Friends                                           {{message.from}}                            {{message.subject}}                -- {{message.content}}                                                 Server Statistics                  CPU Load        >                            RAM Usage                                    CPU Temp                    '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'QuickpanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuickpanelModule.html":{"url":"modules/QuickpanelModule.html","title":"module - QuickpanelModule","body":"\n                   \n\n\n\n\n  Modules\n  QuickpanelModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QuickpanelModule\n\n\n\ncluster_QuickpanelModule_declarations\n\n\n\ncluster_QuickpanelModule_imports\n\n\n\ncluster_QuickpanelModule_exports\n\n\n\n\nQuickpanelComponent\n\nQuickpanelComponent\n\n\n\nQuickpanelModule\n\nQuickpanelModule\n\nQuickpanelModule -->\n\nQuickpanelComponent->QuickpanelModule\n\n\n\n\n\nQuickpanelComponent \n\nQuickpanelComponent \n\nQuickpanelComponent  -->\n\nQuickpanelModule->QuickpanelComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nQuickpanelModule -->\n\nMaterialModule->QuickpanelModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/quickpanel/src/quickpanel.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                QuickpanelComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    QuickpanelComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { QuickpanelComponent } from './quickpanel.component';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from '@nx-starter-kit/material';\nimport {\n  MatButtonModule,\n  MatIconModule,\n  MatListModule,\n  MatMenuModule,\n  MatSidenavModule,\n  MatProgressBarModule,\n  MatTabsModule\n} from '@angular/material';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\n@NgModule({\n  imports: [\n    MatListModule,\n    MatProgressBarModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MaterialModule,\n    PerfectScrollbarModule,\n    FlexLayoutModule,\n    CommonModule\n  ],\n  exports: [QuickpanelComponent],\n  declarations: [QuickpanelComponent]\n})\nexport class QuickpanelModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ROPCService.html":{"url":"injectables/ROPCService.html","title":"injectable - ROPCService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ROPCService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/ropc.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            \n                                        login\n                                    \n                                    \n                                        logOut\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(httpClient: HttpClient, oauthService: OAuthService)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/auth/src/ropc.service.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                httpClient\n                                                              \n                                                                    \n                                                                                HttpClient\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                oauthService\n                                                              \n                                                                    \n                                                                                OAuthService\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        login\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    login(username: string, password: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in libs/auth/src/ropc.service.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                username\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                password\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     {}\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        logOut\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            logOut()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in libs/auth/src/ropc.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class ROPCService {\n  constructor(private httpClient: HttpClient, private oauthService: OAuthService) {}\n\n  async login(username: string, password: string) {\n    const profile: any = await this.oauthService.fetchTokenUsingPasswordFlowAndLoadUserProfile(username, password);\n    // await this.oauthService.refreshToken();\n    return profile;\n  }\n\n  logOut() {\n    // POST /auth/realms//protocol/openid-connect/logout\n    //\n    // ContentType: x-www-form-urlencoded\n    // Data:\n    //   - client_id : \n    //   - refresh_token : \n    //\n    // Headers: (FIXME: this is not working : https://issues.jboss.org/plugins/servlet/mobile#issue/KEYCLOAK-2939\n    // - Authorization Bearer \n\n    if (this.oauthService.getRefreshToken() === null) return;\n\n    const refresh_token = this.oauthService.getRefreshToken();\n    const access_token = this.oauthService.getAccessToken();\n\n    this.oauthService.logOut(true);\n\n    const body = new HttpParams().set('client_id', this.oauthService.clientId).set('refresh_token', refresh_token);\n\n    return this.httpClient.post(this.oauthService.logoutUrl, body.toString(), {\n      headers: new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\n      // .set('Authorization', `Bearer ${access_token}`)\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RainbowComponent.html":{"url":"components/RainbowComponent.html","title":"component - RainbowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RainbowComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/widgets/src/components/rainbow/rainbow.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nxtk-rainbow\n            \n\n            \n                styleUrls\n                rainbow.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./rainbow.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                swUpdate\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor()\n                        \n                    \n                            \n                                \n                                    Defined in libs/widgets/src/components/rainbow/rainbow.component.ts:9\n                                \n                            \n    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/widgets/src/components/rainbow/rainbow.component.ts:12\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                swUpdate\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            swUpdate:     \n    \n                        \n                    \n                        \n                            \n                                Default value : true\n                            \n                        \n                            \n                                \n                                        Defined in libs/widgets/src/components/rainbow/rainbow.component.ts:9\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'nxtk-rainbow',\n  templateUrl: './rainbow.component.html',\n  styleUrls: ['./rainbow.component.scss']\n})\nexport class RainbowComponent implements OnInit {\n  swUpdate = true;\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n      new software is avaialble. do you want to install?\n      \n        shopping_basket\n        GET IT HERE\n      \n    \n    \n      \n        close\n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            new software is avaialble. do you want to install?              shopping_basket        GET IT HERE                            close            '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'RainbowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RainbowComponent-1.html":{"url":"components/RainbowComponent-1.html","title":"component - RainbowComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  RainbowComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/dashboard/src/components/rainbow/rainbow.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nxtk-rainbow\n            \n\n            \n                styleUrls\n                rainbow.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./rainbow.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                swUpdate\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor()\n                        \n                    \n                            \n                                \n                                    Defined in libs/dashboard/src/components/rainbow/rainbow.component.ts:9\n                                \n                            \n    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/dashboard/src/components/rainbow/rainbow.component.ts:12\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                swUpdate\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            swUpdate:     \n    \n                        \n                    \n                        \n                            \n                                Default value : true\n                            \n                        \n                            \n                                \n                                        Defined in libs/dashboard/src/components/rainbow/rainbow.component.ts:9\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'nxtk-rainbow',\n  templateUrl: './rainbow.component.html',\n  styleUrls: ['./rainbow.component.scss']\n})\nexport class RainbowComponent implements OnInit {\n  swUpdate = true;\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n      new software is avaialble. do you want to install?\n      \n        shopping_basket\n        GET IT HERE\n      \n    \n    \n      \n        close\n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            new software is avaialble. do you want to install?              shopping_basket        GET IT HERE                            close            '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'RainbowComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecentSalesComponent.html":{"url":"components/RecentSalesComponent.html","title":"component - RecentSalesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecentSalesComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/widgets/src/components/recent-sales/recent-sales.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nxtk-recent-sales\n            \n\n            \n                styleUrls\n                recent-sales.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recent-sales.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                d3\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chartData\n                            \n                            \n                                chartOptions\n                            \n                            \n                                sales\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(d3ChartService: D3ChartService)\n                        \n                    \n                            \n                                \n                                    Defined in libs/widgets/src/components/recent-sales/recent-sales.component.ts:16\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        d3ChartService\n                                                      \n                                                            \n                                                                        D3ChartService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            chartData\n                        \n                        \n                                \n                                Type:    any[]\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/recent-sales/recent-sales.component.ts:13\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            chartOptions\n                        \n                        \n                                \n                                Type:    any\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/recent-sales/recent-sales.component.ts:14\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            sales\n                        \n                        \n                                \n                                Type:    any[]\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/recent-sales/recent-sales.component.ts:12\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/widgets/src/components/recent-sales/recent-sales.component.ts:22\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                d3\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            d3:     D3\n    \n                        \n                    \n                        \n                            \n                                Type :     D3\n    \n                            \n                        \n                            \n                                \n                                        Defined in libs/widgets/src/components/recent-sales/recent-sales.component.ts:16\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { D3, D3ChartService } from '../charts/nvD3/nvD3.service';\nimport { recentCustomersDemoValues } from '../../data/widgetDemoData.data';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'nxtk-recent-sales',\n  templateUrl: './recent-sales.component.html',\n  styleUrls: ['./recent-sales.component.scss']\n})\nexport class RecentSalesComponent implements OnInit {\n  @Input('sales') sales: any[];\n  @Input('chartData') chartData: any[];\n  @Input('chartOptions') chartOptions: any;\n\n  d3: D3;\n\n  constructor(@Inject(D3ChartService) d3ChartService: D3ChartService) {\n    this.d3 = d3ChartService.getD3();\n  }\n\n  ngOnInit() {\n    const d3 = this.d3;\n\n    const min = 0;\n    const max = d3.max(recentCustomersDemoValues);\n\n    this.chartOptions = {\n      chart: {\n        type: 'lineChart',\n        height: 100,\n        margin: {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0\n        },\n        x: d => {\n          return d.date;\n        },\n        y: d => {\n          return d.value;\n        },\n        showXAxis: false,\n        showYAxis: false,\n        xAxis: {\n          ticks: d3.time.days,\n          axisLabel: '',\n          tickFormat: d => {\n            //return d3.time.format('%H:00')(new Date(d));\n            return moment(new Date(d)).calendar();\n          }\n        },\n        yDomain: [min, max],\n        showLegend: false,\n        useInteractiveGuideline: true,\n        color: ['#DBF6F9']\n      }\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      Recent Sales\n      Value\n      Time ago\n    \n    \n    \n    \n      \n      {{ sale.itemName }}\n      {{ sale.value | currency:'EUR':'symbol' }}\n      {{ sale.timeAgo }}\n    \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Recent Sales      Value      Time ago                            {{ sale.itemName }}      {{ sale.value | currency:\\'EUR\\':\\'symbol\\' }}      {{ sale.timeAgo }}                  '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'RecentSalesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouterStateModel.html":{"url":"interfaces/RouterStateModel.html","title":"interface - RouterStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouterStateModel\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/default/src/app/core/state/router.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        params\n                                \n                                \n                                        path\n                                \n                                \n                                            Optional\n                                        queryParams\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in apps/default/src/app/core/state/router.state.ts:9\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in apps/default/src/app/core/state/router.state.ts:10\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in apps/default/src/app/core/state/router.state.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryParams\n                                    \n                                \n                                \n                                    \n                                        queryParams:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in apps/default/src/app/core/state/router.state.ts:11\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Router, NavigationEnd, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { filter, map, mergeMap } from 'rxjs/operators';\nimport { State, Action, Store, StateContext } from '@ngxs/store';\nimport { combineLatest } from 'rxjs';\n\n//------ router model -------\nexport interface RouterStateModel {\n  path: string;\n  data?: any;\n  params?: any;\n  queryParams?: any;\n}\n\n//---- router actions ------\nexport class UpdateRouterState {\n  constructor(public readonly payload: RouterStateModel) {}\n}\n\nexport class Go {\n  constructor(public readonly payload: { path: any[]; query?: object; extras?: NavigationExtras }) {}\n}\n\n@State({\n  name: 'router',\n  defaults: {\n    path: window.location.pathname + window.location.search\n  }\n})\nexport class RouterState {\n  constructor(private store: Store, private router: Router, private activatedRoute: ActivatedRoute) {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        map(() => this.activatedRoute),\n        map((route: ActivatedRoute) => {\n          while (route.firstChild) route = route.firstChild;\n          return route;\n        }),\n        mergeMap(({ params, queryParams, routeConfig: { data, path } }: ActivatedRoute) => {\n          return combineLatest(params, queryParams, function(_params, _queryParams) {\n            return { path, data, _params, _queryParams };\n          });\n        })\n      )\n      .subscribe(all => {\n        this.store.dispatch(\n          new UpdateRouterState({ path: all.path, data: all.data, params: all._params, queryParams: all._queryParams })\n        );\n      });\n  }\n\n  @Action(UpdateRouterState)\n  update({ getState, setState }: StateContext, { payload }: UpdateRouterState) {\n    setState({\n      ...payload\n    });\n  }\n\n  @Action(Go)\n  go(sc: StateContext, { payload }: Go) {\n    const { path, query: queryParams, extras } = payload;\n    return this.router.navigate(path, { queryParams, ...extras });\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScrollToTopModule.html":{"url":"modules/ScrollToTopModule.html","title":"module - ScrollToTopModule","body":"\n                   \n\n\n\n\n  Modules\n  ScrollToTopModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScrollToTopModule\n\n\n\ncluster_ScrollToTopModule_declarations\n\n\n\ncluster_ScrollToTopModule_exports\n\n\n\n\nScrollToTopComponent\n\nScrollToTopComponent\n\n\n\nScrollToTopModule\n\nScrollToTopModule\n\nScrollToTopModule -->\n\nScrollToTopComponent->ScrollToTopModule\n\n\n\n\n\nScrollToTopComponent \n\nScrollToTopComponent \n\nScrollToTopComponent  -->\n\nScrollToTopModule->ScrollToTopComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/scroll-to-top/src/scroll-to-top.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ScrollToTopComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ScrollToTopComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScrollToTopComponent } from './scroll-to-top.component';\nimport { MatButtonModule, MatIconModule, MatTooltipModule } from '@angular/material';\n\n@NgModule({\n  imports: [MatButtonModule, MatIconModule, MatTooltipModule, CommonModule],\n  exports: [ScrollToTopComponent],\n  declarations: [ScrollToTopComponent]\n})\nexport class ScrollToTopModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScrollbarComponent.html":{"url":"components/ScrollbarComponent.html","title":"component - ScrollbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScrollbarComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/scrollbar/src/scrollbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nxtk-scrollbar\n            \n\n            \n                styleUrls\n                scrollbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./scrollbar.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                            \n                                scrollbarRef\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(_element: ElementRef, zone: NgZone)\n                        \n                    \n                            \n                                \n                                    Defined in libs/scrollbar/src/scrollbar.component.ts:12\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        _element\n                                                      \n                                                            \n                                                                        ElementRef\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                                    \n                                                        zone\n                                                      \n                                                            \n                                                                        NgZone\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/scrollbar/src/scrollbar.component.ts:16\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                element\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            element:     ElementRef\n    \n                        \n                    \n                        \n                            \n                                Type :     ElementRef\n    \n                            \n                        \n                            \n                                \n                                        Defined in libs/scrollbar/src/scrollbar.component.ts:12\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                scrollbarRef\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            scrollbarRef:     Scrollbar\n    \n                        \n                    \n                        \n                            \n                                Type :     Scrollbar\n    \n                            \n                        \n                            \n                                \n                                        Defined in libs/scrollbar/src/scrollbar.component.ts:11\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, ElementRef, NgZone, OnInit } from '@angular/core';\nimport Scrollbar from 'smooth-scrollbar';\nimport { scrollbarOptions } from './scrollbar-options';\n\n@Component({\n  selector: 'nxtk-scrollbar',\n  templateUrl: './scrollbar.component.html',\n  styleUrls: ['./scrollbar.component.scss']\n})\nexport class ScrollbarComponent implements OnInit {\n  scrollbarRef: Scrollbar;\n  element: ElementRef;\n\n  constructor(private _element: ElementRef, private zone: NgZone) {}\n\n  ngOnInit() {\n    this.element = this._element;\n\n    const options = scrollbarOptions;\n\n    this.zone.runOutsideAngular(() => {\n      this.scrollbarRef = Scrollbar.init(this.element.nativeElement, options);\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScrollbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ScrollbarDirective.html":{"url":"directives/ScrollbarDirective.html","title":"directive - ScrollbarDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ScrollbarDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            libs/scrollbar/src/scrollbar.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        AfterContentInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [nxtkScrollbar]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        scrollbarRef\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        ngAfterContentInit\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        nxtkScrollbar\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(_element: ElementRef, zone: NgZone)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/scrollbar/src/scrollbar.directive.ts:12\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                _element\n                                                              \n                                                                    \n                                                                                ElementRef\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                zone\n                                                              \n                                                                    \n                                                                                NgZone\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    nxtkScrollbar\n                                \n                                \n                                        \n                                        Type:    Partial\n            \n                                        \n                                \n                            \n                                    \n                                        \n                                                Defined in libs/scrollbar/src/scrollbar.directive.ts:10\n                                        \n                                    \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        ngAfterContentInit\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            ngAfterContentInit()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in libs/scrollbar/src/scrollbar.directive.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        scrollbarRef\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    scrollbarRef:     Scrollbar\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Scrollbar\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/scrollbar/src/scrollbar.directive.ts:12\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { AfterContentInit, Directive, ElementRef, Input, NgZone } from '@angular/core';\nimport Scrollbar from 'smooth-scrollbar';\nimport { ScrollbarOptions } from 'smooth-scrollbar/interfaces';\nimport { scrollbarOptions } from './scrollbar-options';\n\n@Directive({\n  selector: '[nxtkScrollbar]'\n})\nexport class ScrollbarDirective implements AfterContentInit {\n  @Input('nxtkScrollbar') options: Partial;\n\n  scrollbarRef: Scrollbar;\n\n  constructor(private _element: ElementRef, private zone: NgZone) {}\n\n  ngAfterContentInit() {\n    //const options = defaultsDeep(this.options, scrollbarOptions);\n    const options = Object.assign(this.options, scrollbarOptions);\n\n    this.zone.runOutsideAngular(() => {\n      this.scrollbarRef = Scrollbar.init(this._element.nativeElement, options);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScrollbarModule.html":{"url":"modules/ScrollbarModule.html","title":"module - ScrollbarModule","body":"\n                   \n\n\n\n\n  Modules\n  ScrollbarModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScrollbarModule\n\n\n\ncluster_ScrollbarModule_declarations\n\n\n\ncluster_ScrollbarModule_exports\n\n\n\n\nScrollbarComponent\n\nScrollbarComponent\n\n\n\nScrollbarModule\n\nScrollbarModule\n\nScrollbarModule -->\n\nScrollbarComponent->ScrollbarModule\n\n\n\n\n\nScrollbarDirective\n\nScrollbarDirective\n\nScrollbarModule -->\n\nScrollbarDirective->ScrollbarModule\n\n\n\n\n\nScrollbarComponent \n\nScrollbarComponent \n\nScrollbarComponent  -->\n\nScrollbarModule->ScrollbarComponent \n\n\n\n\n\nScrollbarDirective \n\nScrollbarDirective \n\nScrollbarDirective  -->\n\nScrollbarModule->ScrollbarDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/scrollbar/src/scrollbar.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ScrollbarComponent\n                            \n                            \n                                ScrollbarDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ScrollbarComponent\n                            \n                            \n                                    ScrollbarDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ScrollbarComponent } from './scrollbar.component';\nimport { ScrollbarDirective } from './scrollbar.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ScrollbarComponent, ScrollbarDirective],\n  exports: [ScrollbarComponent, ScrollbarDirective]\n})\nexport class ScrollbarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchBarComponent.html":{"url":"components/SearchBarComponent.html","title":"component - SearchBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchBarComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/toolbar/src/components/search-bar/search-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nxtk-search-bar\n            \n\n            \n                styleUrls\n                search-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search-bar.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                focused\n                            \n                            \n                                input\n                            \n                            \n                                recentlyVisited\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDropdown\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDropdown\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(router: Router, sidenavService: MenuService)\n                        \n                    \n                            \n                                \n                                    Defined in libs/toolbar/src/components/search-bar/search-bar.component.ts:14\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        router\n                                                      \n                                                            \n                                                                        Router\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                                    \n                                                        sidenavService\n                                                      \n                                                            \n                                                                        MenuService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                closeDropdown\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    closeDropdown()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/toolbar/src/components/search-bar/search-bar.component.ts:43\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/toolbar/src/components/search-bar/search-bar.component.ts:18\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                openDropdown\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    openDropdown()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/toolbar/src/components/search-bar/search-bar.component.ts:39\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                focused\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            focused:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                        Defined in libs/toolbar/src/components/search-bar/search-bar.component.ts:12\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                input\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            input:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                        Defined in libs/toolbar/src/components/search-bar/search-bar.component.ts:11\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                recentlyVisited\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            recentlyVisited:     MenuItem[]\n    \n                        \n                    \n                        \n                            \n                                Type :     MenuItem[]\n    \n                            \n                        \n                        \n                            \n                                Default value : []\n                            \n                        \n                            \n                                \n                                        Defined in libs/toolbar/src/components/search-bar/search-bar.component.ts:14\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { MenuItem, MenuService } from '@nx-starter-kit/navigator';\n\n@Component({\n  selector: 'nxtk-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.scss']\n})\nexport class SearchBarComponent implements OnInit {\n  input: string;\n  focused: boolean;\n\n  recentlyVisited: MenuItem[] = [];\n\n  constructor(private router: Router, private sidenavService: MenuService) {}\n\n  ngOnInit() {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        const item = this.sidenavService.getItemByRoute(event.urlAfterRedirects);\n\n        if (item) {\n          const index = this.recentlyVisited.indexOf(item);\n          if (index > -1) {\n            this.recentlyVisited.splice(index, 1);\n          }\n\n          this.recentlyVisited.unshift(item);\n\n          if (this.recentlyVisited.length > 5) {\n            this.recentlyVisited.pop();\n          }\n        }\n      }\n    });\n  }\n\n  openDropdown() {\n    this.focused = true;\n  }\n\n  closeDropdown() {\n    this.focused = false;\n  }\n}\n\n    \n\n    \n        \n  search\n  \n\n  \n    \n      \n        search\n        Search results for: {{ input }}\n      \n      \n        Overview\n        Dashboard\n        Servers\n        CRUD\n        Profile\n        Home\n      \n    \n\n    \n      \n        \n          restore\n          Recently Visited\n        \n        \n          {{ item.name }}\n        \n      \n      \n        \n          youtube_searched_for\n          Frequently Visited\n        \n        \n          Dashboard\n          Overview\n          Servers\n          CRUD\n          Profile\n          Home\n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  search                      search        Search results for: {{ input }}                    Overview        Dashboard        Servers        CRUD        Profile        Home                                      restore          Recently Visited                          {{ item.name }}                                      youtube_searched_for          Frequently Visited                          Dashboard          Overview          Servers          CRUD          Profile          Home                    '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'SearchBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/toolbar/src/components/search/search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nxtk-search\n            \n\n            \n                styleUrls\n                search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                            \n                                isOpen\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(renderer: Renderer2)\n                        \n                    \n                            \n                                \n                                    Defined in libs/toolbar/src/components/search/search.component.ts:11\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        renderer\n                                                      \n                                                            \n                                                                        Renderer2\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                close\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    close()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/toolbar/src/components/search/search.component.ts:24\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/toolbar/src/components/search/search.component.ts:15\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                open\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    open()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/toolbar/src/components/search/search.component.ts:17\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                input\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            input:     ElementRef\n    \n                        \n                    \n                        \n                            \n                                Type :     ElementRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ViewChild\n                            \n                        \n                            \n                                \n                                        Defined in libs/toolbar/src/components/search/search.component.ts:11\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                isOpen\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            isOpen:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                        Defined in libs/toolbar/src/components/search/search.component.ts:9\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'nxtk-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  isOpen: boolean;\n\n  @ViewChild('input') input: ElementRef;\n\n  constructor(private renderer: Renderer2) {}\n\n  ngOnInit() {}\n\n  open() {\n    this.isOpen = true;\n    setTimeout(() => {\n      this.renderer.selectRootElement(this.input.nativeElement).focus();\n    }, 100);\n  }\n\n  close() {\n    this.isOpen = false;\n  }\n}\n\n    \n\n    \n        \n  \n    search\n  \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      search          '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServiceWorkerService.html":{"url":"injectables/ServiceWorkerService.html","title":"injectable - ServiceWorkerService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ServiceWorkerService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/default/src/app/core/services/service-worker/service-worker.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        checkSWUpdate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(swUpdate: SwUpdate)\n                                \n                            \n                                    \n                                        \n                                            Defined in apps/default/src/app/core/services/service-worker/service-worker.service.ts:6\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                swUpdate\n                                                              \n                                                                    \n                                                                                SwUpdate\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        checkSWUpdate\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            checkSWUpdate()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in apps/default/src/app/core/services/service-worker/service-worker.service.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class ServiceWorkerService {\n  constructor(private swUpdate: SwUpdate /*private modalService: NgbModal*/) {}\n\n  checkSWUpdate(): void {\n    if (environment.production) {\n      // Subscribe new worker is available\n      this.swUpdate.available.subscribe(() => {\n        // update available: ask the user to reload\n        if (window.confirm('A new version has been released. Do you want to update?')) {\n          window.location.reload(true);\n        }\n\n        // this.modalService.open(this.modalContent).result.then(\n        //   () => this.swUpdate.activateUpdate()\n        //     .then(() => document.location.reload()), // load the update\n        //   () => {} // do nothing if the user wants to refresh later\n        // )\n      });\n      // Check for new version\n      this.swUpdate.checkForUpdate();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetIconMode.html":{"url":"classes/SetIconMode.html","title":"class - SetIconMode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetIconMode\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/navigator/src/state/menu.state.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        payload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: boolean)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/navigator/src/state/menu.state.ts:14\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                boolean\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/navigator/src/state/menu.state.ts:15\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action, Selector, State, StateContext, Store } from '@ngxs/store';\nimport { MenuItem } from '../models/menu-item.model';\nimport { MenuService } from '../services/menu.service';\nimport { Tree } from '@nx-starter-kit/tree';\n\nexport class InitializeData {\n  constructor(public readonly payload: Tree) {}\n}\n\nexport class NextCurrentlyOpened {\n  constructor(public readonly payload: MenuItem[]) {}\n}\n\nexport class SetIconMode {\n  constructor(public readonly payload: boolean) {}\n}\n\nexport class ToggleCurrentlyOpened {\n  constructor(public readonly payload: MenuItem) {}\n}\n\nexport class ToggleCurrentlyOpenedByRoute {\n  constructor(public readonly payload: string) {}\n}\n\nexport interface MenuStateModel {\n  tree: Tree;\n  currentlyOpened: MenuItem[];\n  iconMode: boolean;\n}\n\n@State({\n  name: 'menu',\n  defaults: {\n    tree: null,\n    currentlyOpened: [],\n    iconMode: false\n  }\n})\nexport class MenuState {\n  constructor(private store: Store, private menuService: MenuService) {\n    const _tree = menuService.tree;\n    setTimeout(() => {\n      this.store.dispatch(new InitializeData(_tree));\n    });\n  }\n\n  @Selector()\n  static menuItems(state: MenuStateModel) {\n    return state.tree.root.children;\n  }\n\n  @Selector()\n  static currentlyOpened(state: MenuStateModel) {\n    if (state.iconMode) {\n      return [];\n    } else {\n      return state.currentlyOpened;\n    }\n  }\n\n  private getParents(tree, item: MenuItem): MenuItem[] {\n    const ancestors = tree.getAllParents(item);\n    ancestors.shift();\n    return ancestors;\n  }\n\n  @Action(InitializeData)\n  initializeData({ setState }: StateContext, { payload }: InitializeData) {\n    setState({\n      tree: payload,\n      currentlyOpened: [],\n      iconMode: false\n    });\n  }\n\n  @Action(SetIconMode)\n  setIconMode({ getState, patchState }: StateContext, { payload }: SetIconMode) {\n    patchState({\n      iconMode: payload\n    });\n  }\n\n  @Action(NextCurrentlyOpened)\n  nextCurrentlyOpened({ getState, patchState }: StateContext, { payload }: NextCurrentlyOpened) {\n    patchState({\n      currentlyOpened: payload\n    });\n  }\n\n  @Action(ToggleCurrentlyOpened)\n  toggleCurrentlyOpened({ getState, patchState }: StateContext, { payload }: ToggleCurrentlyOpened) {\n    let { tree, currentlyOpened } = getState();\n    const isOpen = currentlyOpened.indexOf(payload) !== -1;\n\n    if (isOpen) {\n      if (currentlyOpened.length > 1) {\n        currentlyOpened.length = currentlyOpened.indexOf(payload);\n      } else {\n        currentlyOpened = [];\n      }\n    } else {\n      currentlyOpened = this.getParents(tree, payload);\n    }\n\n    patchState({\n      currentlyOpened: currentlyOpened\n    });\n  }\n\n  @Action(ToggleCurrentlyOpenedByRoute)\n  toggleCurrentlyOpenedByRoute(\n    { getState, patchState }: StateContext,\n    { payload }: ToggleCurrentlyOpenedByRoute\n  ) {\n    const { tree } = getState();\n    let currentlyOpened: MenuItem[] = [];\n\n    const item = tree.findByPredicateBFS(node => {\n      return node.link === payload;\n    });\n\n    if (item && item.parent) {\n      currentlyOpened = this.getParents(tree, item);\n    } else if (item) {\n      currentlyOpened = [item];\n    }\n\n    patchState({\n      currentlyOpened: currentlyOpened\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nMinValidatorDirective\n\nMinValidatorDirective\n\nSharedModule -->\n\nMinValidatorDirective->SharedModule\n\n\n\n\n\nNgLetDirective\n\nNgLetDirective\n\nSharedModule -->\n\nNgLetDirective->SharedModule\n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMaterialDateModule \n\nMaterialDateModule \n\nMaterialDateModule  -->\n\nSharedModule->MaterialDateModule \n\n\n\n\n\nFullscreenModule \n\nFullscreenModule \n\nFullscreenModule  -->\n\nSharedModule->FullscreenModule \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nMinValidatorDirective \n\nMinValidatorDirective \n\nMinValidatorDirective  -->\n\nSharedModule->MinValidatorDirective \n\n\n\n\n\nNgLetDirective \n\nNgLetDirective \n\nNgLetDirective  -->\n\nSharedModule->NgLetDirective \n\n\n\n\n\nFullscreenModule\n\nFullscreenModule\n\nSharedModule -->\n\nFullscreenModule->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/shared/src/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FooterComponent\n                            \n                            \n                                MinValidatorDirective\n                            \n                            \n                                NgLetDirective\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    FullscreenModule\n                            \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MaterialModule\n                            \n                            \n                                    MaterialDateModule\n                            \n                            \n                                    FullscreenModule\n                            \n                            \n                                    FooterComponent\n                            \n                            \n                                    MinValidatorDirective\n                            \n                            \n                                    NgLetDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '@nx-starter-kit/material';\nimport { MaterialDateModule } from '@nx-starter-kit/material';\nimport { FullscreenModule } from '@nx-starter-kit/fullscreen';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MinValidatorDirective } from './directives/min/min.directive';\nimport { NgLetDirective } from './directives/ng-let.directive';\nimport { RouterModule } from '@angular/router';\nimport { FooterComponent } from './components/footer/footer.component';\n\nimport {\n  PerfectScrollbarModule,\n  PerfectScrollbarConfigInterface,\n  PERFECT_SCROLLBAR_CONFIG\n} from 'ngx-perfect-scrollbar';\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n  wheelPropagation: true\n};\n\nconst COMPONENTS = [FooterComponent];\n\nconst DIRECTIVES = [MinValidatorDirective, NgLetDirective];\n\n@NgModule({\n  imports: [CommonModule, RouterModule, FullscreenModule, FlexLayoutModule, MaterialModule, PerfectScrollbarModule],\n  declarations: [...COMPONENTS, ...DIRECTIVES],\n  exports: [\n    CommonModule,\n    FormsModule, //FIXME : remove\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MaterialModule,\n    MaterialDateModule,\n    PerfectScrollbarModule,\n    FullscreenModule,\n    ...COMPONENTS,\n    ...DIRECTIVES\n  ],\n  providers: [{ provide: PERFECT_SCROLLBAR_CONFIG, useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG }]\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidenavModule.html":{"url":"modules/SidenavModule.html","title":"module - SidenavModule","body":"\n                   \n\n\n\n\n  Modules\n  SidenavModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidenavModule\n\n\n\ncluster_SidenavModule_declarations\n\n\n\ncluster_SidenavModule_imports\n\n\n\ncluster_SidenavModule_exports\n\n\n\n\nSidenavItemComponent\n\nSidenavItemComponent\n\n\n\nSidenavModule\n\nSidenavModule\n\nSidenavModule -->\n\nSidenavItemComponent->SidenavModule\n\n\n\n\n\nMenuItemComponent\n\nMenuItemComponent\n\nSidenavModule -->\n\nMenuItemComponent->SidenavModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nSidenavModule -->\n\nSidenavComponent->SidenavModule\n\n\n\n\n\nIconSidenavDirective\n\nIconSidenavDirective\n\nSidenavModule -->\n\nIconSidenavDirective->SidenavModule\n\n\n\n\n\nSidenavComponent \n\nSidenavComponent \n\nSidenavComponent  -->\n\nSidenavModule->SidenavComponent \n\n\n\n\n\nIconSidenavDirective \n\nIconSidenavDirective \n\nIconSidenavDirective  -->\n\nSidenavModule->IconSidenavDirective \n\n\n\n\n\nScrollbarModule\n\nScrollbarModule\n\nSidenavModule -->\n\nScrollbarModule->SidenavModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/sidenav/src/sidenav.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                SidenavItemComponent\n                            \n                            \n                                MenuItemComponent\n                            \n                            \n                                SidenavComponent\n                            \n                            \n                                IconSidenavDirective\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ScrollbarModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    SidenavComponent\n                            \n                            \n                                    IconSidenavDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MenuItemComponent } from './components/menu-item/menu-item.component';\nimport { SidenavItemComponent } from './components/sidenav-item/sidenav-item.component';\nimport { IconSidenavDirective } from './components/icon-sidenav/icon-sidenav.directive';\nimport { SidenavComponent } from './sidenav.component';\nimport {\n  MatButtonModule,\n  MatChipsModule,\n  MatIconModule,\n  MatListModule,\n  MatRippleModule,\n  MatSidenavModule,\n  MatToolbarModule\n} from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ScrollbarModule } from '@nx-starter-kit/scrollbar';\n\n@NgModule({\n  imports: [\n    MatIconModule,\n    MatToolbarModule,\n    MatListModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatRippleModule,\n    MatChipsModule,\n    RouterModule,\n    PerfectScrollbarModule,\n    FlexLayoutModule,\n    ScrollbarModule,\n    CommonModule\n  ],\n  exports: [SidenavComponent, IconSidenavDirective],\n  declarations: [SidenavItemComponent, MenuItemComponent, SidenavComponent, IconSidenavDirective]\n})\nexport class SidenavModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SourceOverviewWidgetComponent.html":{"url":"components/SourceOverviewWidgetComponent.html","title":"component - SourceOverviewWidgetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SourceOverviewWidgetComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/widgets/src/components/widgets-v1/source-overview-widget/source-overview-widget.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nxtk-source-overview-widget\n            \n\n            \n                styleUrls\n                source-overview-widget.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./source-overview-widget.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartOptions\n                            \n                            \n                                d3\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chartDataArray\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(nvD3Service: D3ChartService)\n                        \n                    \n                            \n                                \n                                    Defined in libs/widgets/src/components/widgets-v1/source-overview-widget/source-overview-widget.component.ts:16\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        nvD3Service\n                                                      \n                                                            \n                                                                        D3ChartService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            chartDataArray\n                        \n                        \n                                \n                                Type:    Array\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/widgets-v1/source-overview-widget/source-overview-widget.component.ts:10\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            options\n                        \n                        \n                                \n                                Type:    any\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/widgets-v1/source-overview-widget/source-overview-widget.component.ts:12\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/widgets/src/components/widgets-v1/source-overview-widget/source-overview-widget.component.ts:22\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                chartOptions\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            chartOptions:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n                            \n                                \n                                        Defined in libs/widgets/src/components/widgets-v1/source-overview-widget/source-overview-widget.component.ts:14\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                d3\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            d3:     D3\n    \n                        \n                    \n                        \n                            \n                                Type :     D3\n    \n                            \n                        \n                            \n                                \n                                        Defined in libs/widgets/src/components/widgets-v1/source-overview-widget/source-overview-widget.component.ts:16\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { D3ChartService, D3 } from '../../charts/nvD3/nvD3.service';\n\n@Component({\n  selector: 'nxtk-source-overview-widget',\n  templateUrl: './source-overview-widget.component.html',\n  styleUrls: ['./source-overview-widget.component.scss']\n})\nexport class SourceOverviewWidgetComponent implements OnInit {\n  @Input('chartDataArray') chartDataArray: Array;\n\n  @Input('options') options: any;\n\n  chartOptions: any;\n\n  d3: D3;\n\n  constructor(nvD3Service: D3ChartService) {\n    this.d3 = nvD3Service.getD3();\n  }\n\n  ngOnInit() {\n    const d3 = this.d3;\n\n    this.chartOptions = {\n      chart: {\n        type: 'lineChart',\n        height: 40,\n        margin: {\n          top: 10,\n          right: 0,\n          bottom: 0,\n          left: 0\n        },\n        x: d => {\n          return d.date;\n        },\n        y: d => {\n          return d.value;\n        },\n        showXAxis: false,\n        showYAxis: false,\n        xAxis: {\n          ticks: d3.time.days,\n          axisLabel: '',\n          tickFormat: d => {\n            return d3.time.format('%a %d.%m.%Y')(new Date(d));\n          }\n        },\n        interpolate: 'cardinal',\n        showLegend: false,\n        useInteractiveGuideline: true\n      }\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    {{ options.name }}\n    \n      more_vert\n    \n  \n\n  \n\n  \n    \n\n      \n        \n          {{ chartData[0].key }}\n        \n        \n          {{ chartData[0].sum | number: '1.0-0' }}\n        \n        \n      \n\n    \n  \n\n\n\n  \n     settings \n     Settings \n  \n  \n     more \n     More Info \n  \n  \n     remove_circle \n     Remove Widget \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ options.name }}          more_vert                                      {{ chartData[0].key }}                          {{ chartData[0].sum | number: \\'1.0-0\\' }}                                   settings      Settings          more      More Info          remove_circle      Remove Widget   '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'SourceOverviewWidgetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StyleManagerService.html":{"url":"injectables/StyleManagerService.html","title":"injectable - StyleManagerService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StyleManagerService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/theme-picker/src/style-manager.service.ts\n        \n\n            \n                Description\n            \n            \n                Class for managing stylesheets. Stylesheets are loaded into named slots so that they can be\nremoved or changed later.\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        removeStyle\n                                    \n                                    \n                                        setStyle\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        removeStyle\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            removeStyle(key: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in libs/theme-picker/src/style-manager.service.ts:19\n                                        \n                                    \n            \n                            \n                                \n                                        Remove the stylesheet with the specified key.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                key\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setStyle\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setStyle(key: string, href: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in libs/theme-picker/src/style-manager.service.ts:12\n                                        \n                                    \n            \n                            \n                                \n                                        Set the stylesheet with the specified key.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                key\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                href\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Class for managing stylesheets. Stylesheets are loaded into named slots so that they can be\n * removed or changed later.\n */\n@Injectable()\nexport class StyleManagerService {\n  /**\n   * Set the stylesheet with the specified key.\n   */\n  setStyle(key: string, href: string) {\n    getLinkElementForKey(key).setAttribute('href', href);\n  }\n\n  /**\n   * Remove the stylesheet with the specified key.\n   */\n  removeStyle(key: string) {\n    const existingLinkElement = getExistingLinkElementByKey(key);\n    if (existingLinkElement) {\n      document.head.removeChild(existingLinkElement);\n    }\n  }\n}\n\nfunction getLinkElementForKey(key: string) {\n  return getExistingLinkElementByKey(key) || createLinkElementWithKey(key);\n}\n\nfunction getExistingLinkElementByKey(key: string) {\n  return document.head.querySelector(`link[rel=\"stylesheet\"].${getClassNameForKey(key)}`);\n}\n\nfunction createLinkElementWithKey(key: string) {\n  const linkEl = document.createElement('link');\n  linkEl.setAttribute('rel', 'stylesheet');\n  linkEl.classList.add(getClassNameForKey(key));\n  document.head.appendChild(linkEl);\n  return linkEl;\n}\n\nfunction getClassNameForKey(key: string) {\n  return `style-manager-${key}`;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SvgViewerConfig.html":{"url":"classes/SvgViewerConfig.html","title":"class - SvgViewerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SvgViewerConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/svg-viewer/src/svg-viewer.config.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        baseUrl\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        baseUrl\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    baseUrl:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/svg-viewer/src/svg-viewer.config.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Optional } from '@angular/core';\nimport { PlatformLocation, APP_BASE_HREF } from '@angular/common';\n\nexport class SvgViewerConfig {\n  baseUrl: string;\n}\n\nexport class SvgViewerDefaultConfig extends SvgViewerConfig {\n  constructor(\n    @Optional()\n    @Inject(APP_BASE_HREF)\n    appBase: string,\n    @Optional() location: PlatformLocation\n  ) {\n    super();\n\n    if (appBase !== null) {\n      this.baseUrl = appBase;\n    } else if (location !== null) {\n      this.baseUrl = location.getBaseHrefFromDOM();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SvgViewerDefaultConfig.html":{"url":"classes/SvgViewerDefaultConfig.html","title":"class - SvgViewerDefaultConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SvgViewerDefaultConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/svg-viewer/src/svg-viewer.config.ts\n        \n\n\n            \n                Extends\n            \n            \n                    SvgViewerConfig\n            \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        baseUrl\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(appBase: string, location: PlatformLocation)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/svg-viewer/src/svg-viewer.config.ts:8\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                appBase\n                                                              \n                                                                    \n                                                                                string\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                location\n                                                              \n                                                                    \n                                                                                PlatformLocation\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        baseUrl\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    baseUrl:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                        \n                                            \n                                                Inherited from     SvgViewerConfig\n            \n                                            \n                                        \n                                    \n                                        \n                                                Defined in SvgViewerConfig:5\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Optional } from '@angular/core';\nimport { PlatformLocation, APP_BASE_HREF } from '@angular/common';\n\nexport class SvgViewerConfig {\n  baseUrl: string;\n}\n\nexport class SvgViewerDefaultConfig extends SvgViewerConfig {\n  constructor(\n    @Optional()\n    @Inject(APP_BASE_HREF)\n    appBase: string,\n    @Optional() location: PlatformLocation\n  ) {\n    super();\n\n    if (appBase !== null) {\n      this.baseUrl = appBase;\n    } else if (location !== null) {\n      this.baseUrl = location.getBaseHrefFromDOM();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SvgViewerModule.html":{"url":"modules/SvgViewerModule.html","title":"module - SvgViewerModule","body":"\n                   \n\n\n\n\n  Modules\n  SvgViewerModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SvgViewerModule\n\n\n\ncluster_SvgViewerModule_declarations\n\n\n\ncluster_SvgViewerModule_SvgViewerComponent_providers\n\n\n\ncluster_SvgViewerModule_exports\n\n\n\n\nSvgViewerComponent\n\nSvgViewerComponent\n\n\n\nSvgViewerModule\n\nSvgViewerModule\n\nSvgViewerModule -->\n\nSvgViewerComponent->SvgViewerModule\n\n\n\n\n\nSvgViewerComponent \n\nSvgViewerComponent \n\nSvgViewerComponent  -->\n\nSvgViewerModule->SvgViewerComponent \n\n\n\n\n\nSvgViewerService\n\nSvgViewerService\n\nSvgViewerComponent -->\n\nSvgViewerService->SvgViewerComponent\n\n\n\nSvgViewerModule -->\n\nSvgViewerService->SvgViewerModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/svg-viewer/src/svg-viewer.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                SvgViewerComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     SvgViewerService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    SvgViewerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SvgViewerComponent } from './svg-viewer.component';\nimport { SvgViewerService } from './svg-viewer.service';\nimport { SvgViewerConfig, SvgViewerDefaultConfig } from './svg-viewer.config';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [SvgViewerComponent],\n  providers: [SvgViewerService, { provide: SvgViewerConfig, useClass: SvgViewerDefaultConfig }],\n  declarations: [SvgViewerComponent]\n})\nexport class SvgViewerModule {\n  static forRoot(config: SvgViewerConfig): ModuleWithProviders {\n    return {\n      ngModule: SvgViewerModule,\n      providers: [{ provide: SvgViewerConfig, useValue: config }]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThemePickerModule.html":{"url":"modules/ThemePickerModule.html","title":"module - ThemePickerModule","body":"\n                   \n\n\n\n\n  Modules\n  ThemePickerModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThemePickerModule\n\n\n\ncluster_ThemePickerModule_declarations\n\n\n\ncluster_ThemePickerModule_exports\n\n\n\ncluster_ThemePickerModule_providers\n\n\n\n\nThemePickerComponent\n\nThemePickerComponent\n\n\n\nThemePickerModule\n\nThemePickerModule\n\nThemePickerModule -->\n\nThemePickerComponent->ThemePickerModule\n\n\n\n\n\nThemePickerComponent \n\nThemePickerComponent \n\nThemePickerComponent  -->\n\nThemePickerModule->ThemePickerComponent \n\n\n\n\n\nStyleManagerService\n\nStyleManagerService\n\nThemePickerModule -->\n\nStyleManagerService->ThemePickerModule\n\n\n\n\n\nThemeStorageService\n\nThemeStorageService\n\nThemePickerModule -->\n\nThemeStorageService->ThemePickerModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/theme-picker/src/theme-picker.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ThemePickerComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     StyleManagerService\n                            \n                            \n                                     ThemeStorageService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ThemePickerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThemePickerComponent } from './theme-picker.component';\nimport { StyleManagerService } from './style-manager.service';\nimport { ThemeStorageService } from './theme-storage.service';\nimport { MatButtonModule, MatGridListModule, MatIconModule, MatMenuModule, MatTooltipModule } from '@angular/material';\n\n@NgModule({\n  imports: [MatButtonModule, MatIconModule, MatMenuModule, MatGridListModule, MatTooltipModule, CommonModule],\n  exports: [ThemePickerComponent],\n  declarations: [ThemePickerComponent],\n  providers: [StyleManagerService, ThemeStorageService]\n})\nexport class ThemePickerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeStorageService.html":{"url":"injectables/ThemeStorageService.html","title":"injectable - ThemeStorageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ThemeStorageService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/theme-picker/src/theme-storage.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        onThemeUpdate\n                                    \n                                    \n                                            Static\n                                        storageKey\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        clearStorage\n                                    \n                                    \n                                            Public\n                                        getStoredTheme\n                                    \n                                    \n                                            Public\n                                        storeTheme\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        clearStorage\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    clearStorage()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in libs/theme-picker/src/theme-storage.service.ts:26\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        getStoredTheme\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getStoredTheme()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in libs/theme-picker/src/theme-storage.service.ts:22\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     DocsSiteTheme\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        storeTheme\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    storeTheme(theme: DocsSiteTheme)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in libs/theme-picker/src/theme-storage.service.ts:17\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                theme\n                                                                \n                                                                    \n                                                                                DocsSiteTheme\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        onThemeUpdate\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    onThemeUpdate:     EventEmitter\n            \n                                \n                            \n                                \n                                    \n                                        Type :     EventEmitter\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : new EventEmitter()\n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/theme-picker/src/theme-storage.service.ts:15\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        storageKey\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    storageKey:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : 'default-theme-storage-current'\n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/theme-picker/src/theme-storage.service.ts:13\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\n\nexport interface DocsSiteTheme {\n  href: string;\n  accent: string;\n  primary: string;\n  isDark?: boolean;\n  isDefault?: boolean;\n}\n\n@Injectable()\nexport class ThemeStorageService {\n  static storageKey = 'default-theme-storage-current';\n\n  public onThemeUpdate: EventEmitter = new EventEmitter();\n\n  public storeTheme(theme: DocsSiteTheme) {\n    window.localStorage[ThemeStorageService.storageKey] = JSON.stringify(theme);\n    this.onThemeUpdate.emit(theme);\n  }\n\n  public getStoredTheme(): DocsSiteTheme {\n    return JSON.parse(window.localStorage[ThemeStorageService.storageKey] || null);\n  }\n\n  public clearStorage() {\n    window.localStorage.removeItem(ThemeStorageService.storageKey);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToggleCurrentlyOpened.html":{"url":"classes/ToggleCurrentlyOpened.html","title":"class - ToggleCurrentlyOpened","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToggleCurrentlyOpened\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/navigator/src/state/menu.state.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        payload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: MenuItem)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/navigator/src/state/menu.state.ts:18\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                MenuItem\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     MenuItem\n            \n                                \n                            \n                                \n                                    \n                                        Type :     MenuItem\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/navigator/src/state/menu.state.ts:19\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action, Selector, State, StateContext, Store } from '@ngxs/store';\nimport { MenuItem } from '../models/menu-item.model';\nimport { MenuService } from '../services/menu.service';\nimport { Tree } from '@nx-starter-kit/tree';\n\nexport class InitializeData {\n  constructor(public readonly payload: Tree) {}\n}\n\nexport class NextCurrentlyOpened {\n  constructor(public readonly payload: MenuItem[]) {}\n}\n\nexport class SetIconMode {\n  constructor(public readonly payload: boolean) {}\n}\n\nexport class ToggleCurrentlyOpened {\n  constructor(public readonly payload: MenuItem) {}\n}\n\nexport class ToggleCurrentlyOpenedByRoute {\n  constructor(public readonly payload: string) {}\n}\n\nexport interface MenuStateModel {\n  tree: Tree;\n  currentlyOpened: MenuItem[];\n  iconMode: boolean;\n}\n\n@State({\n  name: 'menu',\n  defaults: {\n    tree: null,\n    currentlyOpened: [],\n    iconMode: false\n  }\n})\nexport class MenuState {\n  constructor(private store: Store, private menuService: MenuService) {\n    const _tree = menuService.tree;\n    setTimeout(() => {\n      this.store.dispatch(new InitializeData(_tree));\n    });\n  }\n\n  @Selector()\n  static menuItems(state: MenuStateModel) {\n    return state.tree.root.children;\n  }\n\n  @Selector()\n  static currentlyOpened(state: MenuStateModel) {\n    if (state.iconMode) {\n      return [];\n    } else {\n      return state.currentlyOpened;\n    }\n  }\n\n  private getParents(tree, item: MenuItem): MenuItem[] {\n    const ancestors = tree.getAllParents(item);\n    ancestors.shift();\n    return ancestors;\n  }\n\n  @Action(InitializeData)\n  initializeData({ setState }: StateContext, { payload }: InitializeData) {\n    setState({\n      tree: payload,\n      currentlyOpened: [],\n      iconMode: false\n    });\n  }\n\n  @Action(SetIconMode)\n  setIconMode({ getState, patchState }: StateContext, { payload }: SetIconMode) {\n    patchState({\n      iconMode: payload\n    });\n  }\n\n  @Action(NextCurrentlyOpened)\n  nextCurrentlyOpened({ getState, patchState }: StateContext, { payload }: NextCurrentlyOpened) {\n    patchState({\n      currentlyOpened: payload\n    });\n  }\n\n  @Action(ToggleCurrentlyOpened)\n  toggleCurrentlyOpened({ getState, patchState }: StateContext, { payload }: ToggleCurrentlyOpened) {\n    let { tree, currentlyOpened } = getState();\n    const isOpen = currentlyOpened.indexOf(payload) !== -1;\n\n    if (isOpen) {\n      if (currentlyOpened.length > 1) {\n        currentlyOpened.length = currentlyOpened.indexOf(payload);\n      } else {\n        currentlyOpened = [];\n      }\n    } else {\n      currentlyOpened = this.getParents(tree, payload);\n    }\n\n    patchState({\n      currentlyOpened: currentlyOpened\n    });\n  }\n\n  @Action(ToggleCurrentlyOpenedByRoute)\n  toggleCurrentlyOpenedByRoute(\n    { getState, patchState }: StateContext,\n    { payload }: ToggleCurrentlyOpenedByRoute\n  ) {\n    const { tree } = getState();\n    let currentlyOpened: MenuItem[] = [];\n\n    const item = tree.findByPredicateBFS(node => {\n      return node.link === payload;\n    });\n\n    if (item && item.parent) {\n      currentlyOpened = this.getParents(tree, item);\n    } else if (item) {\n      currentlyOpened = [item];\n    }\n\n    patchState({\n      currentlyOpened: currentlyOpened\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToggleCurrentlyOpenedByRoute.html":{"url":"classes/ToggleCurrentlyOpenedByRoute.html","title":"class - ToggleCurrentlyOpenedByRoute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToggleCurrentlyOpenedByRoute\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/navigator/src/state/menu.state.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        payload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: string)\n                                \n                            \n                                    \n                                        \n                                            Defined in libs/navigator/src/state/menu.state.ts:22\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                string\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in libs/navigator/src/state/menu.state.ts:23\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action, Selector, State, StateContext, Store } from '@ngxs/store';\nimport { MenuItem } from '../models/menu-item.model';\nimport { MenuService } from '../services/menu.service';\nimport { Tree } from '@nx-starter-kit/tree';\n\nexport class InitializeData {\n  constructor(public readonly payload: Tree) {}\n}\n\nexport class NextCurrentlyOpened {\n  constructor(public readonly payload: MenuItem[]) {}\n}\n\nexport class SetIconMode {\n  constructor(public readonly payload: boolean) {}\n}\n\nexport class ToggleCurrentlyOpened {\n  constructor(public readonly payload: MenuItem) {}\n}\n\nexport class ToggleCurrentlyOpenedByRoute {\n  constructor(public readonly payload: string) {}\n}\n\nexport interface MenuStateModel {\n  tree: Tree;\n  currentlyOpened: MenuItem[];\n  iconMode: boolean;\n}\n\n@State({\n  name: 'menu',\n  defaults: {\n    tree: null,\n    currentlyOpened: [],\n    iconMode: false\n  }\n})\nexport class MenuState {\n  constructor(private store: Store, private menuService: MenuService) {\n    const _tree = menuService.tree;\n    setTimeout(() => {\n      this.store.dispatch(new InitializeData(_tree));\n    });\n  }\n\n  @Selector()\n  static menuItems(state: MenuStateModel) {\n    return state.tree.root.children;\n  }\n\n  @Selector()\n  static currentlyOpened(state: MenuStateModel) {\n    if (state.iconMode) {\n      return [];\n    } else {\n      return state.currentlyOpened;\n    }\n  }\n\n  private getParents(tree, item: MenuItem): MenuItem[] {\n    const ancestors = tree.getAllParents(item);\n    ancestors.shift();\n    return ancestors;\n  }\n\n  @Action(InitializeData)\n  initializeData({ setState }: StateContext, { payload }: InitializeData) {\n    setState({\n      tree: payload,\n      currentlyOpened: [],\n      iconMode: false\n    });\n  }\n\n  @Action(SetIconMode)\n  setIconMode({ getState, patchState }: StateContext, { payload }: SetIconMode) {\n    patchState({\n      iconMode: payload\n    });\n  }\n\n  @Action(NextCurrentlyOpened)\n  nextCurrentlyOpened({ getState, patchState }: StateContext, { payload }: NextCurrentlyOpened) {\n    patchState({\n      currentlyOpened: payload\n    });\n  }\n\n  @Action(ToggleCurrentlyOpened)\n  toggleCurrentlyOpened({ getState, patchState }: StateContext, { payload }: ToggleCurrentlyOpened) {\n    let { tree, currentlyOpened } = getState();\n    const isOpen = currentlyOpened.indexOf(payload) !== -1;\n\n    if (isOpen) {\n      if (currentlyOpened.length > 1) {\n        currentlyOpened.length = currentlyOpened.indexOf(payload);\n      } else {\n        currentlyOpened = [];\n      }\n    } else {\n      currentlyOpened = this.getParents(tree, payload);\n    }\n\n    patchState({\n      currentlyOpened: currentlyOpened\n    });\n  }\n\n  @Action(ToggleCurrentlyOpenedByRoute)\n  toggleCurrentlyOpenedByRoute(\n    { getState, patchState }: StateContext,\n    { payload }: ToggleCurrentlyOpenedByRoute\n  ) {\n    const { tree } = getState();\n    let currentlyOpened: MenuItem[] = [];\n\n    const item = tree.findByPredicateBFS(node => {\n      return node.link === payload;\n    });\n\n    if (item && item.parent) {\n      currentlyOpened = this.getParents(tree, item);\n    } else if (item) {\n      currentlyOpened = [item];\n    }\n\n    patchState({\n      currentlyOpened: currentlyOpened\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/toolbar/src/toolbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nxtk-toolbar\n            \n\n            \n                styleUrls\n                toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isFullscreen\n                            \n                            \n                                profile$\n                            \n                            \n                                showBreadcrumbs\n                            \n                            \n                                toolbarHelpers\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                quickpanel\n                            \n                            \n                                sidenav\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor()\n                        \n                    \n                            \n                                \n                                    Defined in libs/toolbar/src/toolbar.component.ts:19\n                                \n                            \n    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            quickpanel\n                        \n                        \n                                \n                                Type:    any\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/toolbar/src/toolbar.component.ts:15\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            sidenav\n                        \n                        \n                                \n                                Type:    any\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/toolbar/src/toolbar.component.ts:16\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/toolbar/src/toolbar.component.ts:23\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                isFullscreen\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            isFullscreen:     \n    \n                        \n                    \n                        \n                            \n                                Default value : false\n                            \n                        \n                            \n                                \n                                        Defined in libs/toolbar/src/toolbar.component.ts:17\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                profile$\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            profile$:     Observable\n    \n                        \n                    \n                        \n                            \n                                Type :     Observable\n    \n                            \n                        \n                        \n                            \n                                Decorators : Select\n                            \n                        \n                            \n                                \n                                        Defined in libs/toolbar/src/toolbar.component.ts:13\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                showBreadcrumbs\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            showBreadcrumbs:     \n    \n                        \n                    \n                        \n                            \n                                Default value : false\n                            \n                        \n                            \n                                \n                                        Defined in libs/toolbar/src/toolbar.component.ts:18\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                toolbarHelpers\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            toolbarHelpers:     \n    \n                        \n                    \n                        \n                            \n                                Default value : ToolBarHelpers\n                            \n                        \n                            \n                                \n                                        Defined in libs/toolbar/src/toolbar.component.ts:19\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { ToolBarHelpers } from './toolbar.helpers';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { AuthState } from '@nx-starter-kit/auth';\n\n@Component({\n  selector: 'nxtk-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n  @Select(AuthState.profile) profile$: Observable;\n\n  @Input('quickpanel') quickpanel: any;\n  @Input('sidenav') sidenav: any;\n  isFullscreen = false;\n  showBreadcrumbs = false;\n  toolbarHelpers = ToolBarHelpers;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n-->\n  \n    \n      menu\n    \n  \n\n  \n    \n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n    format_align_right\n  \n-->\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->            menu                                format_align_right  -->'\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ToolbarModule.html":{"url":"modules/ToolbarModule.html","title":"module - ToolbarModule","body":"\n                   \n\n\n\n\n  Modules\n  ToolbarModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ToolbarModule\n\n\n\ncluster_ToolbarModule_declarations\n\n\n\ncluster_ToolbarModule_imports\n\n\n\ncluster_ToolbarModule_exports\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\n\n\nToolbarModule\n\nToolbarModule\n\nToolbarModule -->\n\nToolbarComponent->ToolbarModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nToolbarModule -->\n\nSearchComponent->ToolbarModule\n\n\n\n\n\nSearchBarComponent\n\nSearchBarComponent\n\nToolbarModule -->\n\nSearchBarComponent->ToolbarModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nToolbarModule -->\n\nNotificationsComponent->ToolbarModule\n\n\n\n\n\nUserMenuComponent\n\nUserMenuComponent\n\nToolbarModule -->\n\nUserMenuComponent->ToolbarModule\n\n\n\n\n\nClickOutsideDirective\n\nClickOutsideDirective\n\nToolbarModule -->\n\nClickOutsideDirective->ToolbarModule\n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nToolbarModule->ToolbarComponent \n\n\n\n\n\nFullscreenModule\n\nFullscreenModule\n\nToolbarModule -->\n\nFullscreenModule->ToolbarModule\n\n\n\n\n\nBreadcrumbsModule\n\nBreadcrumbsModule\n\nToolbarModule -->\n\nBreadcrumbsModule->ToolbarModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/toolbar/src/toolbar.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ToolbarComponent\n                            \n                            \n                                SearchComponent\n                            \n                            \n                                SearchBarComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                            \n                                UserMenuComponent\n                            \n                            \n                                ClickOutsideDirective\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    FullscreenModule\n                            \n                            \n                                    BreadcrumbsModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ToolbarComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatInputModule,\n  MatGridListModule,\n  MatIconModule,\n  MatMenuModule,\n  MatListModule,\n  MatTooltipModule,\n  MatToolbarModule,\n  MatRippleModule,\n  MatBadgeModule\n} from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FullscreenModule } from '@nx-starter-kit/fullscreen';\nimport { BreadcrumbsModule } from '@nx-starter-kit/breadcrumbs';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\nimport { ToolbarComponent } from './toolbar.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { SearchBarComponent } from './components/search-bar/search-bar.component';\nimport { NotificationsComponent } from './components/notifications/notifications.component';\nimport { UserMenuComponent } from './components/user-menu/user-menu.component';\nimport { ClickOutsideDirective } from './components/click-outside/click-outside.directive';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatInputModule,\n    MatTooltipModule,\n    MatListModule,\n    MatToolbarModule,\n    MatRippleModule,\n    MatBadgeModule,\n    FlexLayoutModule,\n    FullscreenModule,\n    BreadcrumbsModule,\n    FormsModule, //FIXME : remove\n    PerfectScrollbarModule,\n    RouterModule,\n    CommonModule\n  ],\n  exports: [ToolbarComponent],\n  declarations: [\n    ToolbarComponent,\n    SearchComponent,\n    SearchBarComponent,\n    NotificationsComponent,\n    UserMenuComponent,\n    ClickOutsideDirective\n  ]\n})\nexport class ToolbarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrafficSourcesComponent.html":{"url":"components/TrafficSourcesComponent.html","title":"component - TrafficSourcesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TrafficSourcesComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/widgets/src/components/traffic-sources/traffic-sources.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nxtk-traffic-sources\n            \n\n\n\n\n            \n                templateUrl\n                ./traffic-sources.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                d3\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                reload\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chartData\n                            \n                            \n                                chartOptions\n                            \n                            \n                                subTitle\n                            \n                            \n                                textColor\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(nvD3Service: D3ChartService)\n                        \n                    \n                            \n                                \n                                    Defined in libs/widgets/src/components/traffic-sources/traffic-sources.component.ts:16\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        nvD3Service\n                                                      \n                                                            \n                                                                        D3ChartService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            chartData\n                        \n                        \n                                \n                                Type:    any[]\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/traffic-sources/traffic-sources.component.ts:11\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            chartOptions\n                        \n                        \n                                \n                                Type:    any\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/traffic-sources/traffic-sources.component.ts:12\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            subTitle\n                        \n                        \n                            \n                                Default value: 'Total Visits over the last week'\n                            \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/traffic-sources/traffic-sources.component.ts:10\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            textColor\n                        \n                        \n                                \n                                Type:    any\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/traffic-sources/traffic-sources.component.ts:13\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            title\n                        \n                        \n                            \n                                Default value: 'Traffic Sources'\n                            \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/traffic-sources/traffic-sources.component.ts:9\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/widgets/src/components/traffic-sources/traffic-sources.component.ts:22\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                reload\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    reload()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/widgets/src/components/traffic-sources/traffic-sources.component.ts:56\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                d3\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            d3:     D3\n    \n                        \n                    \n                        \n                            \n                                Type :     D3\n    \n                            \n                        \n                            \n                                \n                                        Defined in libs/widgets/src/components/traffic-sources/traffic-sources.component.ts:15\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                isLoading\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            isLoading:     \n    \n                        \n                    \n                        \n                            \n                                Default value : false\n                            \n                        \n                            \n                                \n                                        Defined in libs/widgets/src/components/traffic-sources/traffic-sources.component.ts:16\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { D3ChartService, D3 } from '../charts/nvD3/nvD3.service';\n\n@Component({\n  selector: 'nxtk-traffic-sources',\n  templateUrl: './traffic-sources.component.html'\n})\nexport class TrafficSourcesComponent implements OnInit {\n  @Input('title') title = 'Traffic Sources';\n  @Input('subTitle') subTitle = 'Total Visits over the last week';\n  @Input('chartData') chartData: any[];\n  @Input('chartOptions') chartOptions: any;\n  @Input('textColor') textColor: any;\n\n  d3: D3;\n  isLoading = false;\n\n  constructor(nvD3Service: D3ChartService) {\n    this.d3 = nvD3Service.getD3();\n  }\n\n  ngOnInit() {\n    const d3 = this.d3;\n\n    this.chartOptions = {\n      chart: {\n        type: 'lineChart',\n        height: 50,\n        margin: {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0\n        },\n        x: d => {\n          return d.date;\n        },\n        y: d => {\n          return d.value;\n        },\n        showXAxis: false,\n        showYAxis: false,\n        xAxis: {\n          ticks: d3.time.days,\n          axisLabel: '',\n          tickFormat: d => {\n            return d3.time.format('%a %d.%m.%Y')(new Date(d));\n          }\n        },\n        showLegend: false,\n        useInteractiveGuideline: true\n      }\n    };\n  }\n\n  reload() {\n    this.isLoading = true;\n\n    setTimeout(() => {\n      this.isLoading = false;\n    }, 3000);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ title }}\n      {{ subTitle }}\n    \n    \n    \n      refresh\n    \n    \n      more_vert\n    \n  \n\n  \n\n    \n\n      \n        {{ data[0].key }}\n      \n\n      \n        {{ data[0].sum | number: '1.0-0' }}\n      \n\n      \n\n    \n\n  \n  \n\n\n\n  \n     settings \n     Settings \n  \n  \n     more \n     More Info \n  \n  \n     remove_circle \n     Remove Widget \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ title }}      {{ subTitle }}                  refresh              more_vert                          {{ data[0].key }}                    {{ data[0].sum | number: \\'1.0-0\\' }}                           settings      Settings          more      More Info          remove_circle      Remove Widget   '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'TrafficSourcesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreeConfig.html":{"url":"interfaces/TreeConfig.html","title":"interface - TreeConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreeConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/tree/src/tree.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        nodeComparatorFn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nodeComparatorFn\n                                    \n                                \n                                \n                                    \n                                        nodeComparatorFn:     Comparator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Comparator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in libs/tree/src/tree.model.ts:44\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Comparator, mergeSort } from './merge-sort';\nimport { findInsertIndex } from './find-insert-index';\n\nexport { Comparator } from './merge-sort';\n\n/**\n * // Usage examples\n * this._tree.traverseDFS((node)=> {\n *    console.log(node);\n * });\n *\n * this._tree.traverseBFS((node)=> {\n *    console.log(node);\n * });\n *\n * const level4 = this._tree.findByPredicateBFS((node) => {\n *    return node.link === \"/level1/level2/level3/level4\"\n * });\n * console.log(level4);\n *\n * const level4Parents = this.getAllParents(level4);\n * console.log(level4Parents)\n *\n * for(const node of this._tree) {\n *   if(node.link ===\"/admin/overview\") {\n *     console.log(\"found\");\n *     break;\n *   }\n * }\n */\n\nexport enum TraversalStrategy {\n  PreOrder,\n  PostOrder\n}\n\nexport interface TreeNode {\n  parent?: T;\n  children?: T[];\n  [key: string]: any;\n}\n\nexport interface TreeConfig {\n  nodeComparatorFn?: Comparator;\n}\n\nexport class Tree> implements Iterable {\n  config: TreeConfig = {};\n\n  root: T;\n\n  constructor(root: T, config?: TreeConfig) {\n    this.root = this.addParentLinks(root);\n  }\n\n  private addParentLinks(parent: T): T {\n    if (parent.children) {\n      //mergeSort children\n      if (this.config && this.config.nodeComparatorFn) {\n        parent.children = mergeSort(parent.children, this.config.nodeComparatorFn);\n      }\n\n      // add a parent link to a child structure\n      parent.children.forEach(d => {\n        // each child gets marked with a parent\n        d.parent = parent;\n        // then marks its own children with itself\n        this.addParentLinks(d);\n      });\n    } else {\n      parent.children = [];\n    }\n    return parent;\n  }\n\n  isRoot(node: T) {\n    return node.parent === undefined;\n  }\n\n  isLeaf(node: T) {\n    return node.children.length === 0;\n  }\n\n  add(node: T, toNode: T) {\n    const parent = toNode ? this.findBFS(toNode) : null;\n    if (parent) {\n      // TODO: Find the index to insert the child using findInsertIndex()\n      parent.children.push(node);\n    } else {\n      if (!this.root) {\n        this.root = node;\n      } else {\n        return 'Root node is already assigned';\n      }\n    }\n  }\n\n  remove(node: T) {\n    if (this.root === node) {\n      this.root = null;\n    }\n\n    const queue = [this.root];\n    while (queue.length) {\n      const _node = queue.shift();\n      for (let i = 0; i  boolean): T {\n    const queue = [this.root];\n    while (queue.length) {\n      const _node = queue.shift()!;\n      if (predicate(_node)) {\n        return _node;\n      }\n      for (const child of _node.children) {\n        queue.push(child);\n      }\n    }\n    return null;\n  }\n\n  findByPredicateDFS(predicate: (node: T) => boolean, strategy: TraversalStrategy = TraversalStrategy.PreOrder): T {\n    //TODO\n    return null;\n  }\n\n  private _preOrder(node: T, fn: (node: T) => any) {\n    if (node) {\n      if (fn) {\n        fn(node);\n      }\n      for (const child of node.children) {\n        this._preOrder(child, fn);\n      }\n    }\n  }\n\n  private _postOrder(node: T, fn: (node: T) => any) {\n    if (node) {\n      for (const child of node.children) {\n        this._postOrder(child, fn);\n      }\n      if (fn) {\n        fn(node);\n      }\n    }\n  }\n\n  traverseDFS(fn: (node: T) => any, method: TraversalStrategy = TraversalStrategy.PreOrder) {\n    const current = this.root;\n    if ((method = TraversalStrategy.PreOrder)) {\n      this._postOrder(current, fn);\n    } else {\n      this._preOrder(current, fn);\n    }\n  }\n\n  traverseBFS(fn: (node: T) => any) {\n    const queue = [this.root];\n    while (queue.length) {\n      const node = queue.shift();\n      if (fn) {\n        fn(node);\n      }\n      for (const child of node.children) {\n        queue.push(child);\n      }\n    }\n  }\n\n  *[Symbol.iterator](): IterableIterator {\n    const queue = [this.root];\n    while (queue.length) {\n      const node = queue.shift()!;\n      yield node;\n      for (const child of node.children) {\n        queue.push(child);\n      }\n    }\n  }\n\n  getAllParents(item: T): T[] {\n    const parents: T[] = [];\n    parents.unshift(item);\n    let parent = item.parent;\n    while (parent) {\n      parents.unshift(parent);\n      parent = parent.parent;\n    }\n    return parents;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreeNode.html":{"url":"interfaces/TreeNode.html","title":"interface - TreeNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreeNode\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            libs/tree/src/tree.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                            Optional\n                                        parent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n                Indexable\n                    \n                        \n                            \n                                \n                                    [key: string]:    any\n            \n                                \n                            \n                                    \n                                        \n                                            Defined in libs/tree/src/tree.model.ts:39\n                                        \n                                    \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in libs/tree/src/tree.model.ts:39\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in libs/tree/src/tree.model.ts:38\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Comparator, mergeSort } from './merge-sort';\nimport { findInsertIndex } from './find-insert-index';\n\nexport { Comparator } from './merge-sort';\n\n/**\n * // Usage examples\n * this._tree.traverseDFS((node)=> {\n *    console.log(node);\n * });\n *\n * this._tree.traverseBFS((node)=> {\n *    console.log(node);\n * });\n *\n * const level4 = this._tree.findByPredicateBFS((node) => {\n *    return node.link === \"/level1/level2/level3/level4\"\n * });\n * console.log(level4);\n *\n * const level4Parents = this.getAllParents(level4);\n * console.log(level4Parents)\n *\n * for(const node of this._tree) {\n *   if(node.link ===\"/admin/overview\") {\n *     console.log(\"found\");\n *     break;\n *   }\n * }\n */\n\nexport enum TraversalStrategy {\n  PreOrder,\n  PostOrder\n}\n\nexport interface TreeNode {\n  parent?: T;\n  children?: T[];\n  [key: string]: any;\n}\n\nexport interface TreeConfig {\n  nodeComparatorFn?: Comparator;\n}\n\nexport class Tree> implements Iterable {\n  config: TreeConfig = {};\n\n  root: T;\n\n  constructor(root: T, config?: TreeConfig) {\n    this.root = this.addParentLinks(root);\n  }\n\n  private addParentLinks(parent: T): T {\n    if (parent.children) {\n      //mergeSort children\n      if (this.config && this.config.nodeComparatorFn) {\n        parent.children = mergeSort(parent.children, this.config.nodeComparatorFn);\n      }\n\n      // add a parent link to a child structure\n      parent.children.forEach(d => {\n        // each child gets marked with a parent\n        d.parent = parent;\n        // then marks its own children with itself\n        this.addParentLinks(d);\n      });\n    } else {\n      parent.children = [];\n    }\n    return parent;\n  }\n\n  isRoot(node: T) {\n    return node.parent === undefined;\n  }\n\n  isLeaf(node: T) {\n    return node.children.length === 0;\n  }\n\n  add(node: T, toNode: T) {\n    const parent = toNode ? this.findBFS(toNode) : null;\n    if (parent) {\n      // TODO: Find the index to insert the child using findInsertIndex()\n      parent.children.push(node);\n    } else {\n      if (!this.root) {\n        this.root = node;\n      } else {\n        return 'Root node is already assigned';\n      }\n    }\n  }\n\n  remove(node: T) {\n    if (this.root === node) {\n      this.root = null;\n    }\n\n    const queue = [this.root];\n    while (queue.length) {\n      const _node = queue.shift();\n      for (let i = 0; i  boolean): T {\n    const queue = [this.root];\n    while (queue.length) {\n      const _node = queue.shift()!;\n      if (predicate(_node)) {\n        return _node;\n      }\n      for (const child of _node.children) {\n        queue.push(child);\n      }\n    }\n    return null;\n  }\n\n  findByPredicateDFS(predicate: (node: T) => boolean, strategy: TraversalStrategy = TraversalStrategy.PreOrder): T {\n    //TODO\n    return null;\n  }\n\n  private _preOrder(node: T, fn: (node: T) => any) {\n    if (node) {\n      if (fn) {\n        fn(node);\n      }\n      for (const child of node.children) {\n        this._preOrder(child, fn);\n      }\n    }\n  }\n\n  private _postOrder(node: T, fn: (node: T) => any) {\n    if (node) {\n      for (const child of node.children) {\n        this._postOrder(child, fn);\n      }\n      if (fn) {\n        fn(node);\n      }\n    }\n  }\n\n  traverseDFS(fn: (node: T) => any, method: TraversalStrategy = TraversalStrategy.PreOrder) {\n    const current = this.root;\n    if ((method = TraversalStrategy.PreOrder)) {\n      this._postOrder(current, fn);\n    } else {\n      this._preOrder(current, fn);\n    }\n  }\n\n  traverseBFS(fn: (node: T) => any) {\n    const queue = [this.root];\n    while (queue.length) {\n      const node = queue.shift();\n      if (fn) {\n        fn(node);\n      }\n      for (const child of node.children) {\n        queue.push(child);\n      }\n    }\n  }\n\n  *[Symbol.iterator](): IterableIterator {\n    const queue = [this.root];\n    while (queue.length) {\n      const node = queue.shift()!;\n      yield node;\n      for (const child of node.children) {\n        queue.push(child);\n      }\n    }\n  }\n\n  getAllParents(item: T): T[] {\n    const parents: T[] = [];\n    parents.unshift(item);\n    let parent = item.parent;\n    while (parent) {\n      parents.unshift(parent);\n      parent = parent.parent;\n    }\n    return parents;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRouterState.html":{"url":"classes/UpdateRouterState.html","title":"class - UpdateRouterState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRouterState\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/default/src/app/core/state/router.state.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        payload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: RouterStateModel)\n                                \n                            \n                                    \n                                        \n                                            Defined in apps/default/src/app/core/state/router.state.ts:15\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                RouterStateModel\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     RouterStateModel\n            \n                                \n                            \n                                \n                                    \n                                        Type :     RouterStateModel\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in apps/default/src/app/core/state/router.state.ts:16\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Router, NavigationEnd, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { filter, map, mergeMap } from 'rxjs/operators';\nimport { State, Action, Store, StateContext } from '@ngxs/store';\nimport { combineLatest } from 'rxjs';\n\n//------ router model -------\nexport interface RouterStateModel {\n  path: string;\n  data?: any;\n  params?: any;\n  queryParams?: any;\n}\n\n//---- router actions ------\nexport class UpdateRouterState {\n  constructor(public readonly payload: RouterStateModel) {}\n}\n\nexport class Go {\n  constructor(public readonly payload: { path: any[]; query?: object; extras?: NavigationExtras }) {}\n}\n\n@State({\n  name: 'router',\n  defaults: {\n    path: window.location.pathname + window.location.search\n  }\n})\nexport class RouterState {\n  constructor(private store: Store, private router: Router, private activatedRoute: ActivatedRoute) {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        map(() => this.activatedRoute),\n        map((route: ActivatedRoute) => {\n          while (route.firstChild) route = route.firstChild;\n          return route;\n        }),\n        mergeMap(({ params, queryParams, routeConfig: { data, path } }: ActivatedRoute) => {\n          return combineLatest(params, queryParams, function(_params, _queryParams) {\n            return { path, data, _params, _queryParams };\n          });\n        })\n      )\n      .subscribe(all => {\n        this.store.dispatch(\n          new UpdateRouterState({ path: all.path, data: all.data, params: all._params, queryParams: all._queryParams })\n        );\n      });\n  }\n\n  @Action(UpdateRouterState)\n  update({ getState, setState }: StateContext, { payload }: UpdateRouterState) {\n    setState({\n      ...payload\n    });\n  }\n\n  @Action(Go)\n  go(sc: StateContext, { payload }: Go) {\n    const { path, query: queryParams, extras } = payload;\n    return this.router.navigate(path, { queryParams, ...extras });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserMenuComponent.html":{"url":"components/UserMenuComponent.html","title":"component - UserMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserMenuComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/toolbar/src/components/user-menu/user-menu.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-menu\n            \n\n            \n                styleUrls\n                user-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-menu.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClickOutside\n                            \n                            \n                                toggleDropdown\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(store: Store)\n                        \n                    \n                            \n                                \n                                    Defined in libs/toolbar/src/components/user-menu/user-menu.component.ts:13\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        store\n                                                      \n                                                            \n                                                                        Store\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            currentUser\n                        \n                        \n                            \n                                Default value: null\n                            \n                        \n                    \n                            \n                                \n                                        Defined in libs/toolbar/src/components/user-menu/user-menu.component.ts:13\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Public\n                                logout\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                            logout()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/toolbar/src/components/user-menu/user-menu.component.ts:31\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/toolbar/src/components/user-menu/user-menu.component.ts:17\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                onClickOutside\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    onClickOutside()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/toolbar/src/components/user-menu/user-menu.component.ts:27\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                toggleDropdown\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    toggleDropdown()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/toolbar/src/components/user-menu/user-menu.component.ts:23\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                isOpen\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            isOpen:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                        Defined in libs/toolbar/src/components/user-menu/user-menu.component.ts:12\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { Logout } from '@nx-starter-kit/auth';\nimport { Store } from '@ngxs/store';\n\n@Component({\n  selector: 'user-menu',\n  templateUrl: './user-menu.component.html',\n  styleUrls: ['./user-menu.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UserMenuComponent implements OnInit {\n  isOpen: boolean;\n  @Input() currentUser = null;\n\n  constructor(private store: Store) {}\n\n  ngOnInit() {\n    if (this.currentUser.given_name && this.currentUser.given_name === 'Sumanth') {\n      this.currentUser.photoURL = 'assets/img/avatars/user-image.jpg';\n    }\n  }\n\n  toggleDropdown() {\n    this.isOpen = !this.isOpen;\n  }\n\n  onClickOutside() {\n    this.isOpen = false;\n  }\n\n  public logout() {\n    this.store.dispatch(new Logout());\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{currentUser?.given_name || 'Sumo Demo'}}\n      keyboard_arrow_down\n    \n  \n\n  \n    \n      \n        \n          Profile\n          \n            account_circle\n          \n        \n        \n          Settings\n          \n            settings\n          \n        \n        \n          Help\n          \n            help\n          \n        \n\n        \n\n        \n          Logout\n          \n            exit_to_app\n          \n        \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{currentUser?.given_name || \\'Sumo Demo\\'}}      keyboard_arrow_down                                    Profile                      account_circle                                    Settings                      settings                                    Help                      help                                            Logout                      exit_to_app                              '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WidgetComponent.html":{"url":"components/WidgetComponent.html","title":"component - WidgetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WidgetComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    libs/widgets/src/components/widgets-v1/widget-v1/widget-v1.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nxtk-widget-v1\n            \n\n            \n                styleUrls\n                widget-v1.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./widget-v1.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartOptions\n                            \n                            \n                                d3\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(d3ChartService: D3ChartService)\n                        \n                    \n                            \n                                \n                                    Defined in libs/widgets/src/components/widgets-v1/widget-v1/widget-v1.component.ts:16\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        d3ChartService\n                                                      \n                                                            \n                                                                        D3ChartService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            data\n                        \n                        \n                                \n                                Type:    any\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/widgets-v1/widget-v1/widget-v1.component.ts:10\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            options\n                        \n                        \n                                \n                                Type:    any\n    \n                                \n                        \n                    \n                            \n                                \n                                        Defined in libs/widgets/src/components/widgets-v1/widget-v1/widget-v1.component.ts:12\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in libs/widgets/src/components/widgets-v1/widget-v1/widget-v1.component.ts:22\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                chartOptions\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            chartOptions:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n                            \n                                \n                                        Defined in libs/widgets/src/components/widgets-v1/widget-v1/widget-v1.component.ts:14\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                d3\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            d3:     D3\n    \n                        \n                    \n                        \n                            \n                                Type :     D3\n    \n                            \n                        \n                            \n                                \n                                        Defined in libs/widgets/src/components/widgets-v1/widget-v1/widget-v1.component.ts:16\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { D3ChartService, D3 } from '../../charts/nvD3/nvD3.service';\n\n@Component({\n  selector: 'nxtk-widget-v1',\n  templateUrl: './widget-v1.component.html',\n  styleUrls: ['./widget-v1.component.scss']\n})\nexport class WidgetComponent implements OnInit {\n  @Input('data') data: any;\n\n  @Input('options') options: any;\n\n  chartOptions: any;\n\n  d3: D3;\n\n  constructor(d3ChartService: D3ChartService) {\n    this.d3 = d3ChartService.getD3();\n  }\n\n  ngOnInit() {\n    let d3 = this.d3;\n\n    this.chartOptions = {\n      chart: {\n        type: 'lineChart',\n        height: 60,\n        margin: {\n          top: 10,\n          right: 0,\n          bottom: 0,\n          left: 0\n        },\n        x: d => {\n          return d.date;\n        },\n        y: d => {\n          return d.value;\n        },\n        showXAxis: false,\n        showYAxis: false,\n        xAxis: {\n          ticks: d3.time.days,\n          axisLabel: '',\n          tickFormat: d => {\n            return d3.time.format('%a %d.%m.%Y')(new Date(d));\n          }\n        },\n        interpolate: 'cardinal',\n        showLegend: false,\n        useInteractiveGuideline: true\n      }\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    {{ options.icon }}\n    {{ options.name }}\n    \n    {{ options.number | number: '1.0-0' }}\n  \n  \n     0\"\n             [class.red]=\"options.gain \n      {{ options.arrow }}\n    \n    {{ options.gain }}{{ options.description }}\n  \n\n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ options.icon }}    {{ options.name }}        {{ options.number | number: \\'1.0-0\\' }}         0\"             [class.red]=\"options.gain       {{ options.arrow }}        {{ options.gain }}{{ options.description }}          '\n    var COMPONENTS = [{'name': 'GoogleMapsWidgetComponent', 'selector': 'nxtk-google-maps-widget'},{'name': 'LineChartWidgetComponent', 'selector': 'nxtk-line-chart-widget'},{'name': 'RainbowComponent', 'selector': 'nxtk-rainbow'},{'name': 'SourceOverviewWidgetComponent', 'selector': 'nxtk-source-overview-widget'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[nxtkClickOutside]'},{'name': 'ContextMenuTriggerDirective', 'selector': '[contextMenu]'},{'name': 'HammertimeDirective', 'selector': '[hammertime]'},{'name': 'IconSidenavDirective', 'selector': '[nxtkIconSidenav]'},{'name': 'MinValidatorDirective', 'selector': '[appMin],[formControlName],[formControl],[ngModel]'},{'name': 'NgLetDirective', 'selector': '[ngLet]'},{'name': 'ScrollbarDirective', 'selector': '[nxtkScrollbar]'}];\n    var ACTUAL_COMPONENT = {'name': 'WidgetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WidgetsModule.html":{"url":"modules/WidgetsModule.html","title":"module - WidgetsModule","body":"\n                   \n\n\n\n\n  Modules\n  WidgetsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WidgetsModule\n\n\n\ncluster_WidgetsModule_declarations\n\n\n\ncluster_WidgetsModule_imports\n\n\n\ncluster_WidgetsModule_providers\n\n\n\n\nWizdashComponent\n\nWizdashComponent\n\n\n\nWidgetsModule\n\nWidgetsModule\n\nWidgetsModule -->\n\nWizdashComponent->WidgetsModule\n\n\n\n\n\nWidgetComponent\n\nWidgetComponent\n\nWidgetsModule -->\n\nWidgetComponent->WidgetsModule\n\n\n\n\n\nLineChartWidgetComponent\n\nLineChartWidgetComponent\n\nWidgetsModule -->\n\nLineChartWidgetComponent->WidgetsModule\n\n\n\n\n\nSourceOverviewWidgetComponent\n\nSourceOverviewWidgetComponent\n\nWidgetsModule -->\n\nSourceOverviewWidgetComponent->WidgetsModule\n\n\n\n\n\nBarChartComponent\n\nBarChartComponent\n\nWidgetsModule -->\n\nBarChartComponent->WidgetsModule\n\n\n\n\n\nLineChartComponent\n\nLineChartComponent\n\nWidgetsModule -->\n\nLineChartComponent->WidgetsModule\n\n\n\n\n\nRecentSalesComponent\n\nRecentSalesComponent\n\nWidgetsModule -->\n\nRecentSalesComponent->WidgetsModule\n\n\n\n\n\nPieChartComponent\n\nPieChartComponent\n\nWidgetsModule -->\n\nPieChartComponent->WidgetsModule\n\n\n\n\n\nGoogleMapsWidgetComponent\n\nGoogleMapsWidgetComponent\n\nWidgetsModule -->\n\nGoogleMapsWidgetComponent->WidgetsModule\n\n\n\n\n\nActivityComponent\n\nActivityComponent\n\nWidgetsModule -->\n\nActivityComponent->WidgetsModule\n\n\n\n\n\nTrafficSourcesComponent\n\nTrafficSourcesComponent\n\nWidgetsModule -->\n\nTrafficSourcesComponent->WidgetsModule\n\n\n\n\n\nNvD3Component\n\nNvD3Component\n\nWidgetsModule -->\n\nNvD3Component->WidgetsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nWidgetsModule -->\n\nSharedModule->WidgetsModule\n\n\n\n\n\nLoadingOverlayModule\n\nLoadingOverlayModule\n\nWidgetsModule -->\n\nLoadingOverlayModule->WidgetsModule\n\n\n\n\n\nD3ChartService\n\nD3ChartService\n\nWidgetsModule -->\n\nD3ChartService->WidgetsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/widgets/src/widgets.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WizdashComponent\n                            \n                            \n                                WidgetComponent\n                            \n                            \n                                LineChartWidgetComponent\n                            \n                            \n                                SourceOverviewWidgetComponent\n                            \n                            \n                                BarChartComponent\n                            \n                            \n                                LineChartComponent\n                            \n                            \n                                RecentSalesComponent\n                            \n                            \n                                PieChartComponent\n                            \n                            \n                                GoogleMapsWidgetComponent\n                            \n                            \n                                ActivityComponent\n                            \n                            \n                                TrafficSourcesComponent\n                            \n                            \n                                NvD3Component\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     D3ChartService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    LoadingOverlayModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '@nx-starter-kit/shared';\nimport { AgmCoreModule } from '@agm/core';\n\nimport { WizdashComponent } from './containers/wizdash/wizdash.component';\nimport {\n  WidgetComponent,\n  LineChartWidgetComponent,\n  SourceOverviewWidgetComponent,\n  BarChartComponent,\n  LineChartComponent,\n  RecentSalesComponent,\n  PieChartComponent,\n  GoogleMapsWidgetComponent,\n  ActivityComponent,\n  TrafficSourcesComponent,\n  NvD3Component\n} from './components';\nimport { D3ChartService } from './components';\nimport { environment } from '@env/environment';\nimport { LoadingOverlayModule } from '@nx-starter-kit/loading-overlay';\n\nconst WIDGETS = [\n  WidgetComponent,\n  LineChartWidgetComponent,\n  SourceOverviewWidgetComponent,\n  BarChartComponent,\n  LineChartComponent,\n  RecentSalesComponent,\n  PieChartComponent,\n  GoogleMapsWidgetComponent,\n  ActivityComponent,\n  TrafficSourcesComponent,\n  NvD3Component\n];\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LoadingOverlayModule,\n    AgmCoreModule.forRoot({\n      apiKey: environment.googleApiKey\n    }),\n    RouterModule.forChild([\n      /* {path: '', pathMatch: 'full', component: InsertYourComponentHere} */\n      {\n        path: '',\n        component: WizdashComponent,\n        data: { animation: 'wizdash' }\n      }\n    ])\n  ],\n  declarations: [...WIDGETS, WizdashComponent],\n  providers: [D3ChartService]\n})\nexport class WidgetsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/WordsPipe.html":{"url":"pipes/WordsPipe.html","title":"pipe - WordsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  WordsPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            libs/nx-pipes/src/truncate/words.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        words\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(value: string, limit: number, trail: String)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in libs/nx-pipes/src/truncate/words.pipe.ts:7\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                                Default value\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                                    \n                                                                    \n            \n                                                            \n                                                            \n                                                                limit\n                                                                \n                                                                    \n                                                                                number\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                                    \n                                                                            40\n                                                                    \n            \n                                                            \n                                                            \n                                                                trail\n                                                                \n                                                                    \n                                                                                String\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                                    \n                                                                            '…'\n                                                                    \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'words'\n})\nexport class WordsPipe implements PipeTransform {\n  transform(value: string, limit: number = 40, trail: String = '…'): string {\n    let result = value || '';\n\n    if (value) {\n      const words = value.split(/\\s+/);\n      if (words.length > Math.abs(limit)) {\n        if (limit \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n0.1.1 (2018-02-25)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : ^1.0.0-beta.2\n        \n            @angular/animations : ^6.0.0-rc.1\n        \n            @angular/cdk : ^6.0.0-rc.0\n        \n            @angular/common : ^6.0.0-rc.1\n        \n            @angular/compiler : ^6.0.0-rc.1\n        \n            @angular/core : ^6.0.0-rc.1\n        \n            @angular/flex-layout : ^5.0.0-beta.14\n        \n            @angular/forms : ^6.0.0-rc.1\n        \n            @angular/material : ^6.0.0-rc.0\n        \n            @angular/material-moment-adapter : ^6.0.0-rc.0\n        \n            @angular/platform-browser : ^6.0.0-rc.1\n        \n            @angular/platform-browser-dynamic : ^6.0.0-rc.1\n        \n            @angular/router : ^6.0.0-rc.1\n        \n            @angular/service-worker : ^6.0.0-rc.1\n        \n            @ngxs/devtools-plugin : ^2.0.0\n        \n            @ngxs/store : ^2.0.0\n        \n            @nrwl/nx : ^0.9.1\n        \n            @swimlane/ngx-charts : ^7.1.1\n        \n            angular-cli-ghpages : ^0.5.2\n        \n            angular-in-memory-web-api : ^0.6.0\n        \n            angular-oauth2-oidc : ^3.1.4\n        \n            angular2-moment : ^1.8.0\n        \n            core-js : ^2.5.4\n        \n            d3 : ^3.5.17\n        \n            hammerjs : ^2.0.8\n        \n            ngx-page-scroll : ^4.0.2\n        \n            ngx-perfect-scrollbar : ^v6.0.0-0\n        \n            nvd3 : ^1.8.6\n        \n            rxjs : 6.0.0-rc.0\n        \n            rxjs-compat : 6.0.0-rc.0\n        \n            screenfull : ^3.3.2\n        \n            smooth-scrollbar : ^8.2.7\n        \n            web-animations-js : ^2.3.1\n        \n            zone.js : ^0.8.24\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthMode   (libs/.../auth.actions.ts)\n                        \n                        \n                            Gender   (libs/.../account.model.ts)\n                        \n                        \n                            MenuItemType   (libs/.../menu-item.model.ts)\n                        \n                        \n                            ShowStatus   (libs/.../scroll-to-top.component.ts)\n                        \n                        \n                            SidenavState   (libs/.../sidenav-state.enum.ts)\n                        \n                        \n                            TraversalStrategy   (libs/.../tree.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/auth/src/auth.actions.ts\n    \n            \n                \n                    \n                        \n                            \n                            AuthMode\n                        \n                    \n                            \n                                \n                                     ImplicitFLow\n                                \n                            \n                            \n                                \n                                    Value: ImplicitFLow\n                                \n                            \n                            \n                                \n                                     PasswordFlow\n                                \n                            \n                            \n                                \n                                    Value: ROPCFlow\n                                \n                            \n                            \n                                \n                                     AuthorizationCodeFLow\n                                \n                            \n                            \n                                \n                                    Value: AuthorizationCodeFLow\n                                \n                            \n                \n            \n    \n    libs/crud/src/containers/accounts/account.model.ts\n    \n            \n                \n                    \n                        \n                            \n                            Gender\n                        \n                    \n                            \n                                \n                                     male\n                                \n                            \n                            \n                                \n                                    Value: make\n                                \n                            \n                            \n                                \n                                     female\n                                \n                            \n                            \n                                \n                                    Value: female\n                                \n                            \n                \n            \n    \n    libs/navigator/src/models/menu-item.model.ts\n    \n            \n                \n                    \n                        \n                            \n                            MenuItemType\n                        \n                    \n                            \n                                \n                                     Link\n                                \n                            \n                            \n                                \n                                    Value: link\n                                \n                            \n                            \n                                \n                                     DropDown\n                                \n                            \n                            \n                                \n                                    Value: dropDown\n                                \n                            \n                            \n                                \n                                     Icon\n                                \n                            \n                            \n                                \n                                    Value: icon\n                                \n                            \n                            \n                                \n                                     Separator\n                                \n                            \n                            \n                                \n                                    Value: separator\n                                \n                            \n                            \n                                \n                                     ExtLink\n                                \n                            \n                            \n                                \n                                    Value: extLink\n                                \n                            \n                \n            \n    \n    libs/scroll-to-top/src/scroll-to-top.component.ts\n    \n            \n                \n                    \n                        \n                            \n                            ShowStatus\n                        \n                    \n                            \n                                \n                                     show\n                                \n                            \n                            \n                                \n                                    Value: show\n                                \n                            \n                            \n                                \n                                     hide\n                                \n                            \n                            \n                                \n                                    Value: hide\n                                \n                            \n                \n            \n    \n    libs/navigator/src/services/sidenav-state.enum.ts\n    \n            \n                \n                    \n                        \n                            \n                            SidenavState\n                        \n                    \n                            \n                                \n                                     Expanded\n                                \n                            \n                            \n                                \n                                    Value: expanded\n                                \n                            \n                            \n                                \n                                     Collapsed\n                                \n                            \n                            \n                                \n                                    Value: collapsed\n                                \n                            \n                            \n                                \n                                     CollapsedHover\n                                \n                            \n                            \n                                \n                                    Value: collapsedHover\n                                \n                            \n                            \n                                \n                                     Mobile\n                                \n                            \n                            \n                                \n                                    Value: mobile\n                                \n                            \n                            \n                                \n                                     MobileOpen\n                                \n                            \n                            \n                                \n                                    Value: mobileOpen\n                                \n                            \n                \n            \n    \n    libs/tree/src/tree.model.ts\n    \n            \n                \n                    \n                        \n                            \n                            TraversalStrategy\n                        \n                    \n                        \n                            \n                                // Usage examples\n    this._tree.traverseDFS((node)=> {\n        console.log(node);\n    });\n    this._tree.traverseBFS((node)=> {\n        console.log(node);\n    });\n    const level4 = this._tree.findByPredicateBFS((node) => {\n        return node.link === \"/level1/level2/level3/level4\"\n    });\n    console.log(level4);\n    const level4Parents = this.getAllParents(level4);\n    console.log(level4Parents)\n    for(const node of this._tree) {\n       if(node.link ===\"/admin/overview\") {\n         console.log(\"found\");\n         break;\n       }\n    }\n    \n                            \n                        \n                            \n                                \n                                     PreOrder\n                                \n                            \n                            \n                                \n                                     PostOrder\n                                \n                            \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNxStarterKit\nThis project was generated with Angular CLI using Nrwl Nx.\nlive Demo\nDevelopment server\nRun npm run start:dev for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nRun npm run start:mock for a mock server.\nRun npm run start:dev -- --proxy-config proxy.conf.js to start with proxy\nBuild\nRun npm run build:prod to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nBefore running the tests make sure you are serving the app via ng serve.\nDocs\nRun npm run doc:build to build docs.\nRun npm run doc:serve to serve docs.\nDeploy\nRun npm run deploy:mock to deploy demo app to gp-pages.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppConfirmModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BreadcrumbsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CdkModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContextMenuModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CrudModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExperimentsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FullscreenModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoadingOverlayModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialDateModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NavigatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotFoundModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NxPipesModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuickpanelModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScrollToTopModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScrollbarModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidenavModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SvgViewerModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemePickerModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ToolbarModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WidgetsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccessTokenError   (libs/.../oauth.errors.ts)\n                        \n                        \n                            AuthorizationError   (libs/.../oauth.errors.ts)\n                        \n                        \n                            Comparator   (libs/.../merge-sort.ts)\n                        \n                        \n                            D3   (libs/.../nvD3.service.ts)\n                        \n                        \n                            InvalidRequest   (libs/.../oauth.errors.ts)\n                        \n                        \n                            Nv   (libs/.../nvD3.service.ts)\n                        \n                        \n                            UnauthorizedClient   (libs/.../oauth.errors.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/auth/src/oauth.errors.ts\n    \n            \n                \n                    \n                        \n                            \n                            AccessTokenError\n                        \n                    \n                    \n                        \n                            AccessTokenError:     \"invalid_request\" | \"invalid_client\" | \"invalid_grant\" | \"unauthorized_client\" | \"unsupported_grant_type\" | \"invalid_scope\"\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            AuthorizationError\n                        \n                    \n                    \n                        \n                            AuthorizationError:     \"invalid_request\" | \"unauthorized_client\" | \"access_denied\" | \"unsupported_response_type\" | \"invalid_scope\" | \"server_error\" | \"temporarily_unavailable\"\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            InvalidRequest\n                        \n                    \n                    \n                        \n                            InvalidRequest:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            UnauthorizedClient\n                        \n                    \n                    \n                        \n                            UnauthorizedClient:     \n    \n                        \n                    \n                \n            \n    \n    libs/tree/src/merge-sort.ts\n    \n            \n                \n                    \n                        \n                            \n                            Comparator\n                        \n                    \n                    \n                        \n                            Comparator:     function\n    \n                        \n                    \n                \n            \n    \n    libs/widgets/src/components/charts/nvD3/nvD3.service.ts\n    \n            \n                \n                    \n                        \n                            \n                            D3\n                        \n                    \n                    \n                        \n                            D3:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Nv\n                        \n                    \n                    \n                        \n                            Nv:     \n    \n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
